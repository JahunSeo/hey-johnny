{"version":3,"sources":["Component/Navigation/index.module.css","Articles/Quiz/index.module.css","Articles/Bird/index.module.css","App.module.css","Component/Transition/SectionTransition.module.css","Component/Transition/SlowTransition.module.css","Component/Transition/QuoteTransition.module.css","Component/Canvas/index.js","Field/FlappyBird/Brain.js","Field/FlappyBird/Bird.js","Constant.js","Field/FlappyBird/BirdGroup.js","Field/FlappyBird/Pipe.js","Field/FlappyBird/PipeGroup.js","Field/NEAT/Gene.js","Field/NEAT/Activation.js","Field/NEAT/Genome.js","Field/NEAT/Agent.js","Field/NEAT/Species.js","Field/NEAT/Setting.js","Field/NEAT/Generation.js","Tool/Vector2D.js","Field/Particle.js","Field/Fumes.js","Field/Asteroid.js","Field/Generation.js","Field/ScreenGroup.js","Field/SatelliteGroup.js","Field/index.js","Component/Transition/index.js","Component/Navigation/index.js","Articles/Quiz/index.js","Articles/Bird/index.js","Asset/Image/johnny_jobs.jpg","Articles/Midas/index.js","Asset/Video/johnny_wizlab_demo.mp4","Articles/Wizlab/index.js","Articles/XOR/index.js","App.js","reportWebVitals.js","index.js","Articles/Midas/index.module.css","Articles/Wizlab/index.module.css","Articles/XOR/index.module.css"],"names":["module","exports","Canvas","props","resizeEventHandler","event","_cvs","width","window","innerWidth","document","body","clientWidth","height","innerHeight","clientHeight","mousemoveEventHandler","setMouseLocal","mouseObj","isMouseMoving","clickEventHandler","clicked","clickedFrame","_frameCnt","resetMouseObj","undefined","rect","getBoundingClientRect","scaleX","borderWidth","scaleY","mouseX","clientX","left","mouseY","clientY","top","isMouseOverCanvas","loop","draw","isLooped","_ctx","_frameId","requestAnimationFrame","canvasRef","React","createRef","this","current","getContext","addEventListener","cancelAnimationFrame","removeEventListener","ref","style","display","Component","Brain","model","tf","createModel","add","dense","inputShape","units","activation","input","xs","predict","dataSync","weights","getWeights","copied","forEach","w","push","clone","newBrain","setWeights","rate","mutated","map","weight","shape","array","slice","i","length","Math","random","randNum","arraySync","dispose","Bird","setting","y","x","right","updateTopBottom","velY","accY","jumpForce","maxVelY","score","transplantBrain","brain","copy","pipes","boardWidth","boardHeight","pipe","inputs","bottom","outputs","jump","v","ctx","min","save","originX","originY","translate","strokeStyle","strokeRect","restore","checkX","checkY","PAGES","SCREEN_SIZE","ratio","h","max","getScreenRect","stageWidth","stageHeight","currentPage","scrSize","Setting","updateSize","cvsWidth","cvsHeight","boardWidthRadio","groupSize","gravity","BirdGroup","survivors","deads","generationNum","distance","createBirds","bird","getRandomY","floor","pipeGroup","subPipes","getClosestPipesFrom","isDead","collidesWith","isOutOfStage","dropout","splice","addScore","think","applyForceY","update","fillStyle","font","textBaseline","fillText","sum","largest","fitness","Error","pickOne","extractBrain","mutate","child","disposeBrain","idx","r","Pipe","updateLeftRight","outStage","velX","checkEdges","pipeWidth","fillRect","pipeGap","interval","PipeGroup","restart","intervalWidth","startPoint","pipeCnt","ceil","frontIndex","getRandomTop","id","prev","num","Gene","NodeGene","nodeNum","type","layer","fromHereConns","toHereConns","NODE_TYPE","I","initBias","outValue","bias","getInitValue","getDeltaValue","ConnectionGene","invNum","from","to","enabled","initWeight","Activation","identity","sigmoid","pow","E","modifiedSigmoid","step","H","O","CONN_TYPE","Genome","inputSize","outputSize","nodes","nodeMap","connMap","isPrimal","createPrimal","order","node","conn","addLastNodeNum","initNode","j","addLastInvNum","initConn","output","weightedSum","k","func","partner","parent1","parent2","keepStructure","mutateWeight","mutateBias","addNode","addConn","candidates","blockRecurrent","parseInt","toNode","used","fromNode","indexOf","oldInvNum","selectEnabledConn","lowLayer","highLayer","oldConn","invResult","addInvResult","toSplit","spliceIndex","layerDist","getNodeFromNodeIndex","invNum1","invNum2","disable","newConn","selectNewConn","other","matching","myLeft","otherLeft","N","matchingMax","disjointCnt","excessCnt","weightDiff","myWeight","otherWeight","abs","distC1","distC2","distC3","result","Agent","agentId","speciesNum","xor","adjustedScore","genome","crossover","measureDist","frameCnt","ys","local","areaWidth","areaHeight","colCnt","agentX","agentY","layers","layersLength","Object","keys","textAlign","globalCompositeOperation","nodeLocal","layerNodes","nodeX","nodeY","beginPath","arc","PI","stroke","fill","connStyle","moveTo","setLineDash","quadraticCurveTo","lineTo","scoreText","round","alpha","Species","initGenNum","representative","agent","agents","nextAgents","isSorted","avgFitness","isExtinct","ancestors","size","average","sort","a","b","sortByFitness","survivalRate","eliminationRate","limit","criteria","index","GenerationSetting","lastSpeciesNum","lastAgentId","lastNodeNum","lastInvNum","compatibilityThreshold","generationLimit","invResults","rowCnt","curr","Generation","agentMap","speciesMap","initGeneration","species","console","error","primal","addLastAgentId","setId","addLastSpeciesNum","initSpecies","getGenerationNum","setSpecies","asexual","addGenerationNum","avgFitnessTotal","representativeMap","adjustFitness","eliminateLowest","setRepresentative","allotment","proportion","diff","newAgentMap","speciesReproduced","getSingleParent","sexual","geneticDist","keepNextAgent","getSpecies","setExtinction","ancestor","clearRect","run","Vector2D","sqrt","normalize","mult","m","getMag","div","maximum","setMag","dx","dy","Particle","location","angle","xVel","cos","yVel","sin","velocity","acceleration","radius","lifespan","Fumes","origin","particles","p","AGENT_TYPE","Asteroid","agentType","getRandomLocation","maxSpeed","maxForce","defaultAngle","angStep","seekLimit","desiredSeparation","wanderTarget","warderRelocationPct","wanderSpeedRatio","gridLocal","isAccelerated","leftFumes","rightFumes","separation","seek","separate","applyForce","isCandyOn","seekMouse","count","sub","getMagSq","target","desired","dX","dY","angleBase","atan2","d","dLimit","dA","row","col","force","updateFumes","angSize","leftAngle","leftX","leftY","setLocation","rightAngle","rightX","rightY","rotate","getColor","closePath","eyeAngle","eyeStyle","addParticle","canvasWidth","canvas","canvasHeight","gridSize","gridRowCnt","gridColCnt","makeGrid","grid","getGridRowByY","getGridColByX","setGridLocal","subAgents","flock","arrivedLimit","scrW","scrH","scrL","scrT","onLocal","TL","TR","BL","BR","offLocal","ScreenGroup","createAgents","isSpread","isMoving","agentTL","agentTR","agentBL","agentBR","getTargetByLocal","NAV_STATUS","center","radiusLimit","sateRadiusLimit","SatelliteGroup","sates","satesLength","sateAngleDist","sateRadius","angleStep","radiusShrinkSpeed","sateRadiusShrinkSpeed","status","setPage","setStatus","page","sateAngle","checkClick","selected","sateCheck","radiusCheck","getColorByPage","Field","generation","resize","screenGroup","sateGroup","birdGroup","birdBoardWidthRatio","xorGroup","isScreenOn","isArticleOn","drawFlappyBird","drawXOR","toggleArticle","evolveNextGeneration","drawDashboard","nextGeneration","XORGroup","prevProps","spread","fold","expand","CSSTransitionWrapper","children","wrapClassName","classNames","timeout","nodeRef","useRef","enter","exit","SectionTransition","CSSTransition","className","SlowCSSTransitionWrapper","SlowTransition","QuoteCSSTransitionWrapper","QuoteTransition","Navigation","state","sectionIndex","isBackBtnOn","addSectionIndex","setState","subtractSectionIndex","showBackBtn","handleBackBtn","styles","TransitionGroup","component","appear","onEntered","onExited","secText","greeting","guide","btn","onClick","Quiz","inner","secTitle","title","secDesc","desc","sentences","sentenceIndex","sentence","Midas","image","src","JobsImage","alt","imageGuide","btnGuide","playBtn","rel","href","cx","bind","Wizlab","toggleVideoZoom","isVideoZoom","toggleVideoMuted","isVideoMuted","videoRef","setVideoRef","element","video","controls","playsInline","autoPlay","muted","controlsList","onContextMenu","e","preventDefault","wizlabVideo","XOR","App","Article","ArticleQuiz","ArticleXOR","ArticleBird","ArticleMidas","ArticleWizlab","NavContainer","FieldContainer","ArticleContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8865ccf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Navigation_body__3RA0K\",\"greeting\":\"Navigation_greeting__37R44\",\"guide\":\"Navigation_guide__21JEZ\",\"btn\":\"Navigation_btn__2aJAk\",\"blink\":\"Navigation_blink__2lSFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Quiz_body__17b8Y\",\"inner\":\"Quiz_inner__2xcm6\",\"secTitle\":\"Quiz_secTitle__1Byj1\",\"title\":\"Quiz_title__1P4uR\",\"secDesc\":\"Quiz_secDesc__2gfRP\",\"image\":\"Quiz_image__Odpyq\",\"scaleUp\":\"Quiz_scaleUp__pzi8p\",\"imageGuide\":\"Quiz_imageGuide__1mkDM\",\"desc\":\"Quiz_desc__32Gqu\",\"btnGuide\":\"Quiz_btnGuide__1AUNy\",\"playBtn\":\"Quiz_playBtn__1uRol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Bird_body__3Fjy7\",\"inner\":\"Bird_inner__1EZ1m\",\"secTitle\":\"Bird_secTitle__3Gb1Y\",\"title\":\"Bird_title__1iAXp\",\"secDesc\":\"Bird_secDesc__3x1X8\",\"sentence\":\"Bird_sentence__3kwc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3CoMz\",\"NavContainer\":\"App_NavContainer__9sVfA\",\"FieldContainer\":\"App_FieldContainer__1ZNgd\",\"ArticleContainer\":\"App_ArticleContainer__1IaIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"SectionTransition_appear__3P0Bm\",\"appearActive\":\"SectionTransition_appearActive__1Uqyq\",\"appearDone\":\"SectionTransition_appearDone__3u-L3\",\"enter\":\"SectionTransition_enter__3YDd6\",\"enterActive\":\"SectionTransition_enterActive__FWhxb\",\"enterDone\":\"SectionTransition_enterDone__3iPXv\",\"exit\":\"SectionTransition_exit__2bV5i\",\"exitActive\":\"SectionTransition_exitActive__1wnWw\",\"exitDone\":\"SectionTransition_exitDone__cx6YN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"SlowTransition_appear__2yWY0\",\"appearActive\":\"SlowTransition_appearActive__3_XPm\",\"appearDone\":\"SlowTransition_appearDone__XJc6h\",\"enter\":\"SlowTransition_enter__9n2sR\",\"enterActive\":\"SlowTransition_enterActive__1CK8T\",\"enterDone\":\"SlowTransition_enterDone__10ad_\",\"exit\":\"SlowTransition_exit__Oc-xF\",\"exitActive\":\"SlowTransition_exitActive__1-07C\",\"exitDone\":\"SlowTransition_exitDone__1h2uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"QuoteTransition_appear__2YaKN\",\"appearActive\":\"QuoteTransition_appearActive__2JwB0\",\"appearDone\":\"QuoteTransition_appearDone__3ZRWY\",\"enter\":\"QuoteTransition_enter__YshAd\",\"enterActive\":\"QuoteTransition_enterActive__LAEVY\",\"enterDone\":\"QuoteTransition_enterDone__2T37a\",\"exit\":\"QuoteTransition_exit__vXFuz\",\"exitActive\":\"QuoteTransition_exitActive__3xxwR\",\"exitDone\":\"QuoteTransition_exitDone__2i9y_\"};","import React, { Component } from \"react\";\r\n\r\nexport default class Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.mouseObj = {\r\n      mouseX: undefined,\r\n      mouseY: undefined,\r\n      isMouseOverCanvas: false,\r\n      isMouseMoving: false,\r\n      clicked: false,\r\n      clickedFrame: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this._frameId) {\r\n      // initiate properties\r\n      this._cvs = this.canvasRef.current;\r\n      this._ctx = this._cvs.getContext(\"2d\");\r\n      this._frameCnt = 0;\r\n      this._cvs.addEventListener(\"click\", this.clickEventHandler);\r\n      // start loop\r\n      // console.log(\"start loop\");\r\n      this.loop();\r\n    }\r\n    window.addEventListener(\"resize\", this.resizeEventHandler);\r\n    this.resizeEventHandler();\r\n    document.addEventListener(\"mousemove\", this.mousemoveEventHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // console.log(\"cancel loop\");\r\n    window.cancelAnimationFrame(this._frameId);\r\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\r\n    document.removeEventListener(\"mousemove\", this.mousemoveEventHandler);\r\n    if (this._cvs) {\r\n      this._cvs.removeEventListener(\"click\", this.clickEventHandler);\r\n    }\r\n  }\r\n\r\n  resizeEventHandler = (event) => {\r\n    // console.log(\"canvas, resizeEventHandler\");\r\n    this._cvs.width = window.innerWidth || document.body.clientWidth;\r\n    this._cvs.height = window.innerHeight || document.body.clientHeight;\r\n  };\r\n\r\n  mousemoveEventHandler = (event) => {\r\n    // console.log(\"canvas, mousemove\");\r\n    this.setMouseLocal(event);\r\n    this.mouseObj.isMouseMoving = true;\r\n  };\r\n\r\n  clickEventHandler = (event) => {\r\n    // console.log(\"canvas, mouse click\");\r\n    this.setMouseLocal(event);\r\n    this.mouseObj.clicked = true;\r\n    this.mouseObj.clickedFrame = this._frameCnt;\r\n  };\r\n\r\n  resetMouseObj = () => {\r\n    this.mouseObj.isMouseMoving = false;\r\n    this.mouseObj.clicked = false;\r\n    this.mouseObj.clickedFrame = undefined;\r\n  };\r\n\r\n  setMouseLocal = (event) => {\r\n    // https://stackoverflow.com/questions/17130395/real-mouse-position-in-canvas\r\n    let rect = this._cvs.getBoundingClientRect();\r\n    let borderWidth = 0; // temp\r\n\r\n    let scaleX = this._cvs.width / (rect.width - borderWidth * 2);\r\n    let scaleY = this._cvs.height / (rect.height - borderWidth * 2);\r\n\r\n    let mouseX = (event.clientX - (rect.left + borderWidth)) * scaleX;\r\n    let mouseY = (event.clientY - (rect.top + borderWidth)) * scaleY;\r\n\r\n    let padding = 10;\r\n    let isMouseOverCanvas =\r\n      mouseX >= padding &&\r\n      mouseX <= this._cvs.width - padding &&\r\n      mouseY >= padding &&\r\n      mouseY <= this._cvs.height - padding;\r\n\r\n    this.mouseObj.mouseX = mouseX;\r\n    this.mouseObj.mouseY = mouseY;\r\n    this.mouseObj.isMouseOverCanvas = isMouseOverCanvas;\r\n\r\n    return {\r\n      mouseX,\r\n      mouseY,\r\n      isMouseOverCanvas,\r\n    };\r\n  };\r\n\r\n  loop = () => {\r\n    this._frameCnt += 1;\r\n    let { draw, isLooped = true } = this.props;\r\n    draw(this._ctx, this._frameCnt, this.mouseObj);\r\n    this.resetMouseObj();\r\n    if (isLooped) {\r\n      this._frameId = window.requestAnimationFrame(this.loop);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { width = 300, height = 300 } = this.props;\r\n    return (\r\n      <canvas\r\n        ref={this.canvasRef}\r\n        width={width}\r\n        height={height}\r\n        style={{\r\n          display: \"block\",\r\n          // border: \"1px solid black\"\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as tf from \"@tensorflow/tfjs\";\r\n// import * as tfvis from \"@tensorflow/tfjs-vis\";\r\n\r\nexport default class Brain {\r\n  constructor(model) {\r\n    if (model instanceof tf.Sequential) {\r\n      this.model = model;\r\n    } else {\r\n      this.model = this.createModel();\r\n    }\r\n  }\r\n\r\n  createModel() {\r\n    // Create a sequential model\r\n    const model = tf.sequential();\r\n\r\n    // Add a single input layer\r\n    model.add(\r\n      tf.layers.dense({ inputShape: [6], units: 8, activation: \"sigmoid\" })\r\n    );\r\n\r\n    // Add an output layer\r\n    model.add(tf.layers.dense({ units: 2, activation: \"softmax\" }));\r\n\r\n    // tfvis.show.modelSummary({ name: \"Model Summary\" }, model);\r\n\r\n    return model;\r\n  }\r\n\r\n  predict(input) {\r\n    return tf.tidy(() => {\r\n      let xs = tf.tensor2d([input]);\r\n      let ys = this.model.predict(xs);\r\n      let outputs = ys.dataSync();\r\n      return outputs;\r\n    });\r\n  }\r\n\r\n  copy() {\r\n    return tf.tidy(() => {\r\n      let weights = this.model.getWeights();\r\n      let copied = [];\r\n      weights.forEach((w) => copied.push(w.clone()));\r\n\r\n      let newBrain = new Brain();\r\n      newBrain.model.setWeights(copied);\r\n      return newBrain;\r\n    });\r\n  }\r\n\r\n  mutate(rate = 0.1) {\r\n    tf.tidy(() => {\r\n      let weights = this.model.getWeights();\r\n      let mutated = weights.map((weight) => {\r\n        let shape = weight.shape;\r\n        let array = weight.dataSync().slice();\r\n        for (let i = 0; i < array.length; i++) {\r\n          if (Math.random() < rate) {\r\n            let randNum = tf.randomNormal([1]).arraySync()[0];\r\n            array[i] += randNum;\r\n          }\r\n        }\r\n        return tf.tensor(array, shape);\r\n      });\r\n      this.model.setWeights(mutated);\r\n    });\r\n  }\r\n\r\n  dispose() {\r\n    this.model.dispose();\r\n  }\r\n}\r\n","// import Vector2D from \"../../Tool/Vector2D\"\r\nimport Brain from \"./Brain\";\r\n\r\nexport default class Bird {\r\n  constructor(props = {}) {\r\n    this.setting = props.setting;\r\n    this.y = props.y;\r\n\r\n    this.width = 30;\r\n    this.height = 15;\r\n\r\n    let x = this.setting.x;\r\n    this.left = x;\r\n    this.right = x + this.width;\r\n    this.updateTopBottom(this.y, this.height);\r\n\r\n    this.velY = 0;\r\n    this.accY = 0;\r\n    this.jumpForce = -1;\r\n\r\n    this.maxVelY = 20;\r\n\r\n    this.score = 0;\r\n\r\n    this.transplantBrain(props.brain);\r\n  }\r\n\r\n  transplantBrain(brain) {\r\n    if (brain instanceof Brain) {\r\n      //   console.log(\"transplanted!\");\r\n      this.brain = brain;\r\n    } else {\r\n      //   console.log(\"new brain..\");\r\n      this.brain = new Brain();\r\n    }\r\n  }\r\n\r\n  extractBrain() {\r\n    return this.brain.copy();\r\n  }\r\n\r\n  disposeBrain() {\r\n    this.brain.dispose();\r\n  }\r\n\r\n  think(pipes) {\r\n    // todo\r\n    // make input for neural network\r\n\r\n    let { boardWidth, boardHeight } = this.setting;\r\n    let pipe = pipes[0];\r\n\r\n    let inputs = [];\r\n    inputs[0] = this.y / boardHeight;\r\n    inputs[1] = this.velY / this.maxVelY;\r\n    inputs[2] = pipe.left / boardWidth;\r\n    inputs[3] = pipe.right / boardWidth;\r\n    inputs[4] = pipe.top / boardHeight;\r\n    inputs[5] = pipe.bottom / boardHeight;\r\n\r\n    let outputs = this.brain.predict(inputs);\r\n    if (outputs[0] > outputs[1]) {\r\n      this.jump();\r\n    }\r\n  }\r\n\r\n  jump() {\r\n    this.accY += this.jumpForce;\r\n  }\r\n\r\n  applyForceY(v) {\r\n    this.accY += v;\r\n  }\r\n\r\n  update(ctx) {\r\n    this.velY += this.accY;\r\n    this.velY = Math.min(this.velY, this.maxVelY);\r\n    this.y += this.velY;\r\n    this.accY = 0;\r\n\r\n    this.updateTopBottom();\r\n    // this.checkEdges(ctx);\r\n  }\r\n\r\n  addScore() {\r\n    this.score++;\r\n  }\r\n\r\n  display(ctx) {\r\n    if (this.top <= 0) return;\r\n    if (this.bottom >= this.setting.boardHeight) return;\r\n\r\n    ctx.save();\r\n    let { originX, originY } = this.setting;\r\n    ctx.translate(originX, originY);\r\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n    ctx.strokeRect(this.setting.x, this.y, this.width, this.height);\r\n    ctx.restore();\r\n  }\r\n\r\n  updateTopBottom(y = this.y, height = this.height) {\r\n    this.top = y;\r\n    this.bottom = y + height;\r\n  }\r\n\r\n  collidesWith(pipe) {\r\n    // console.log(\"BIRD:\", this.left, this.right, this.top, this.bottom);\r\n    // console.log(\"PIPE:\", pipe.left, pipe.right, pipe.top, pipe.bottom);\r\n    let checkX = this.right > pipe.left && this.left < pipe.right;\r\n    let checkY = this.top < pipe.top || this.bottom > pipe.bottom;\r\n    if (checkX && checkY) {\r\n      //   console.log(\"HIT\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isOutOfStage(ctx) {\r\n    let { boardHeight } = this.setting;\r\n\r\n    // // weaker criteria could be,\r\n    // this.top < -this.height / 2 ||\r\n    // this.bottom > boardHeight + this.height / 2\r\n\r\n    if (this.top < 0 || this.bottom > boardHeight) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export const PAGES = {\r\n  MAIN: \"PAGE_MAIN\",\r\n  CANDY: \"PAGE_CANDY\",\r\n  QUIZ: \"PAGE_QUIZ\",\r\n  XOR: \"PAGE_XOR\",\r\n  BIRD: \"PAGE_BIRD\",\r\n  MIDAS: \"PAGE_MIDAS\",\r\n  WIZLAB: \"PAGE_WIZLAB\",\r\n};\r\n\r\nexport const SCREEN_SIZE = {\r\n  HORI32: { ratio: { w: 3, h: 2 }, max: { w: 840, h: 560 } }, // 3:2\r\n  VERT169: { ratio: { w: 9, h: 16 }, max: { w: 360, h: 640 } }, // 9:16\r\n  BIRD400: { max: { h: 400 } },\r\n  FULL: {},\r\n};\r\n\r\nexport const getScreenRect = (stageWidth, stageHeight, currentPage) => {\r\n  // bird view\r\n  if (currentPage === PAGES.BIRD) {\r\n    let width = stageWidth * 1; // todo: apply birdBoardWidthRatio\r\n    let height = SCREEN_SIZE.BIRD400.max.h;\r\n    let left = (stageWidth - width) / 2;\r\n    let top = (stageHeight - height) / 2;\r\n    return { width, height, left, top };\r\n  }\r\n  // xor view, full screen\r\n  if (currentPage === PAGES.XOR) {\r\n    let width = stageWidth;\r\n    let height = stageHeight;\r\n    let left = (stageWidth - width) / 2;\r\n    let top = (stageHeight - height) / 2;\r\n    return { width, height, left, top };\r\n  }\r\n  // wizlab view, vertical\r\n  if (currentPage === PAGES.WIZLAB) {\r\n    let widthMax = 840;\r\n    let width = Math.min(stageWidth, widthMax);\r\n    let height = stageHeight;\r\n    let left = (stageWidth - width) / 2;\r\n    let top = (stageHeight - height) / 2;\r\n    return { width, height, left, top };\r\n  }\r\n  // others\r\n  let scrSize = SCREEN_SIZE.HORI32;\r\n  if (currentPage === PAGES.QUIZ) {\r\n    scrSize = SCREEN_SIZE.VERT169;\r\n  } else if (currentPage === PAGES.MIDAS) {\r\n    scrSize = SCREEN_SIZE.VERT169;\r\n  }\r\n\r\n  let ratio = scrSize.ratio;\r\n  let height, width;\r\n  if (stageWidth / stageHeight > ratio.w / ratio.h) {\r\n    // by height\r\n    height = stageHeight * 0.8;\r\n    height = Math.min(height, scrSize.max.h);\r\n    width = height * (ratio.w / ratio.h);\r\n  } else {\r\n    // by width\r\n    width = stageWidth * 0.8;\r\n    width = Math.min(width, scrSize.max.w);\r\n    height = width * (ratio.h / ratio.w);\r\n  }\r\n  let left = (stageWidth - width) / 2;\r\n  let top = (stageHeight - height) / 2;\r\n\r\n  return { width, height, left, top };\r\n};\r\n","import Bird from \"./Bird\";\r\nimport { SCREEN_SIZE } from \"../../Constant\";\r\n\r\nclass Setting {\r\n  constructor(props = {}) {\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    // console.log(\"BirdGroup Setting\", props);\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n\r\n    this.boardWidthRadio = props.boardWidthRadio;\r\n    this.boardWidth = this.cvsWidth * this.boardWidthRadio;\r\n    this.boardHeight = SCREEN_SIZE.BIRD400.max.h;\r\n\r\n    // warning! originX and Y is just for displaying!\r\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\r\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\r\n\r\n    // todo: to locate bird in center of screen, getClosestPipesFrom logic should be refactored.\r\n    // this.x = (this.boardWidth) / 2;\r\n    this.x = 120;\r\n    this.groupSize = 50;\r\n    this.gravity = 0.5;\r\n  }\r\n}\r\n\r\nexport default class BirdGroup {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n    this.survivors = [];\r\n    this.deads = [];\r\n\r\n    this.generationNum = 1;\r\n    this.distance = 0;\r\n    this.createBirds();\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n  }\r\n\r\n  createBirds() {\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      let bird = new Bird({\r\n        setting: this.setting,\r\n        y: this.getRandomY(),\r\n      });\r\n      this.survivors.push(bird);\r\n    }\r\n  }\r\n\r\n  getRandomY() {\r\n    let { boardHeight } = this.setting;\r\n    let y = boardHeight * 0.1;\r\n    y += Math.floor(Math.random() * (boardHeight * 0.8));\r\n    return y;\r\n  }\r\n\r\n  run(ctx, pipeGroup) {\r\n    // get the target pipes\r\n    let subPipes = pipeGroup.getClosestPipesFrom(this.setting.x, 2);\r\n    // console.log(subPipes[0].id, subPipes[1].id);\r\n\r\n    for (let i = this.survivors.length - 1; i >= 0; i--) {\r\n      let bird = this.survivors[i];\r\n\r\n      // check whether the bird is kill by pipes,\r\n      // and if not dead, return inputs for 'think' method.\r\n      let isDead = bird.collidesWith(subPipes[0]);\r\n      isDead = isDead || bird.isOutOfStage(ctx);\r\n      if (isDead) {\r\n        let dropout = this.survivors.splice(i, 1);\r\n        this.deads.push(dropout[0]);\r\n        continue;\r\n      }\r\n\r\n      // only if the bird survives,\r\n      bird.addScore();\r\n      bird.think(subPipes);\r\n      bird.applyForceY(this.setting.gravity);\r\n      bird.update(ctx);\r\n      bird.display(ctx);\r\n    }\r\n\r\n    this.distance++;\r\n  }\r\n\r\n  drawDashboard(ctx) {\r\n    // guide text\r\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\r\n    ctx.font = \"12px NanumSquareRound, sans-serif\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    let x = this.setting.originX + 20;\r\n    let y = this.setting.originY + this.setting.boardHeight - 50;\r\n\r\n    ctx.fillText(`Gen : ${this.generationNum}`, x, y);\r\n    ctx.fillText(\r\n      `Bird : ${this.survivors.length} / ${this.setting.groupSize}`,\r\n      x,\r\n      y + 12\r\n    );\r\n    ctx.fillText(`Dist : ${this.distance}`, x, y + 23);\r\n  }\r\n\r\n  evolveNextGeneration() {\r\n    // selection: calculate fitness\r\n    let sum = 0;\r\n    let largest = 0;\r\n    this.deads.forEach((bird) => {\r\n      bird.score = bird.score * bird.score;\r\n      sum += bird.score;\r\n    });\r\n    this.deads.forEach((bird) => {\r\n      bird.fitness = bird.score / sum;\r\n      if (bird.fitness > largest) {\r\n        largest = bird.fitness;\r\n      }\r\n    });\r\n    // console.log(\"FITNESS\", sum, largest);\r\n\r\n    // reproduction:\r\n    if (this.survivors.length > 0) {\r\n      throw new Error(\"there is a ghost bird!!!\");\r\n    }\r\n\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      // pick one parent with probability according to relative fitness\r\n      let parent = this.pickOne();\r\n      // and copy it (rather than crossover)\r\n      let brain = parent.extractBrain(); // get new brain object\r\n      // mutate\r\n      brain.mutate(0.1);\r\n      let child = new Bird({\r\n        setting: this.setting,\r\n        y: this.getRandomY(),\r\n        brain: brain,\r\n      });\r\n\r\n      this.survivors.push(child);\r\n    }\r\n\r\n    // dispose deads\r\n    for (let i = 0; i < this.deads.length; i++) {\r\n      let dead = this.deads[i];\r\n      dead.disposeBrain();\r\n    }\r\n    this.deads = [];\r\n\r\n    this.generationNum++;\r\n    this.distance = 0;\r\n  }\r\n\r\n  pickOne() {\r\n    let idx = 0;\r\n    let r = Math.random();\r\n    while (r > 0) {\r\n      r -= this.deads[idx].fitness;\r\n      idx++;\r\n    }\r\n    idx--;\r\n    let picked = this.deads[idx];\r\n    return picked;\r\n  }\r\n}\r\n","export default class Pipe {\r\n  constructor(props) {\r\n    this.setting = props.setting;\r\n    this.x = props.x;\r\n    this.top = props.top;\r\n\r\n    this.updateTopBottom(this.top);\r\n    this.updateLeftRight(this.x);\r\n\r\n    this.outStage = false;\r\n  }\r\n\r\n  update(ctx) {\r\n    this.x += this.setting.velX;\r\n    this.updateLeftRight(this.x);\r\n    this.checkEdges(ctx);\r\n  }\r\n\r\n  display(ctx) {\r\n    ctx.save();\r\n\r\n    let { originX, originY, pipeWidth, boardHeight } = this.setting;\r\n    ctx.translate(originX, originY);\r\n    ctx.fillStyle = \"rgba(0,0,0,0.3)\";\r\n    ctx.fillRect(this.x, 0, pipeWidth, this.top);\r\n    ctx.fillRect(this.x, this.bottom, pipeWidth, boardHeight - this.bottom);\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  checkEdges(ctx) {\r\n    // 처음 x 설정 시 originX 없이 0을 기준으로 boardWidth만 사용하기 때문에,\r\n    // display 할 때만 originX 가 활용되고, checkEdge 할 때는 originX를 고민하지 않아도 됨\r\n    if (this.x < -this.setting.pipeWidth) {\r\n      this.outStage = true;\r\n    }\r\n  }\r\n\r\n  updateTopBottom(top) {\r\n    this.top = top;\r\n    this.bottom = top + this.setting.pipeGap;\r\n  }\r\n\r\n  updateLeftRight(x) {\r\n    this.left = x;\r\n    this.right = x + this.setting.pipeWidth;\r\n  }\r\n}\r\n","import Pipe from \"./Pipe\";\r\nimport { SCREEN_SIZE } from \"../../Constant\";\r\n\r\nclass Setting {\r\n  constructor(props = {}) {\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    // console.log(\"PipeGroup Setting\", props);\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n\r\n    this.boardWidthRadio = props.boardWidthRadio;\r\n    this.boardWidth = this.cvsWidth * this.boardWidthRadio;\r\n    this.boardHeight = SCREEN_SIZE.BIRD400.max.h;\r\n\r\n    // warning! originX and Y is just for displaying!\r\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\r\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\r\n\r\n    // todo: update pipe related values by screen size\r\n    this.interval = 160;\r\n    this.pipeWidth = 80;\r\n    this.pipeGap = 100;\r\n    this.velX = -5;\r\n  }\r\n}\r\n\r\nexport default class PipeGroup {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n    this.restart();\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n    this.restart();\r\n  }\r\n\r\n  restart() {\r\n    this.pipes = [];\r\n    let { boardWidth, interval, pipeWidth } = this.setting;\r\n\r\n    let intervalWidth = interval + pipeWidth;\r\n\r\n    let startPoint = boardWidth;\r\n    let pipeCnt = Math.ceil(boardWidth / intervalWidth);\r\n    pipeCnt += 2;\r\n    this.frontIndex = 0;\r\n    // console.log(\"pipeCnt: \", pipeCnt);\r\n\r\n    for (let i = 0; i < pipeCnt; i++) {\r\n      let x = startPoint + intervalWidth * i;\r\n      let top = this.getRandomTop();\r\n      let pipe = new Pipe({ setting: this.setting, x, top });\r\n      // for debug\r\n      pipe.id = i;\r\n      this.pipes.push(pipe);\r\n    }\r\n  }\r\n\r\n  run(ctx) {\r\n    let { interval, pipeWidth, pipeGap } = this.setting;\r\n\r\n    for (let i = 0; i < this.pipes.length; i++) {\r\n      let pipe = this.pipes[i];\r\n      if (pipe.outStage) {\r\n        this.frontIndex = i < this.pipes.length - 1 ? i + 1 : 0;\r\n        let prev = i > 0 ? i - 1 : this.pipes.length - 1;\r\n        // console.log(i, prev, this.frontIndex);\r\n        prev = this.pipes[prev];\r\n        pipe.x = prev.x + pipeWidth + interval;\r\n        pipe.updateTopBottom(this.getRandomTop(), pipeGap);\r\n        pipe.outStage = false;\r\n      }\r\n      pipe.update(ctx);\r\n      pipe.display(ctx);\r\n    }\r\n  }\r\n\r\n  getRandomTop() {\r\n    let { boardHeight, pipeGap } = this.setting;\r\n    let top = 0;\r\n    top += boardHeight * 0.1;\r\n    top += Math.floor(Math.random() * (boardHeight * 0.8 - pipeGap));\r\n    return top;\r\n  }\r\n\r\n  getClosestPipesFrom(x, num = 1) {\r\n    num = Math.min(num, this.pipes.length);\r\n    let subPipes = [];\r\n    let idx = this.frontIndex;\r\n    if (this.pipes[this.frontIndex].right < x) {\r\n      idx = idx < this.pipes.length - 1 ? idx + 1 : 0;\r\n    }\r\n    for (let i = 0; i < num; i++) {\r\n      subPipes.push(this.pipes[idx]);\r\n      idx = idx < this.pipes.length - 1 ? idx + 1 : 0;\r\n    }\r\n    return subPipes;\r\n  }\r\n}\r\n","import { NODE_TYPE } from \"./Genome\";\r\n\r\nexport class Gene {\r\n  // constructor() {}\r\n\r\n  getInitValue() {\r\n    // TODO: add option to make value with random gaussian\r\n    return Math.random() * 2 - 1;\r\n  }\r\n\r\n  getDeltaValue() {\r\n    // TODO: add option to make value with random gaussian\r\n    return (Math.random() * 2 - 1) / 5;\r\n  }\r\n}\r\n\r\nexport class NodeGene extends Gene {\r\n  constructor(props = {}) {\r\n    super(props);\r\n    this.nodeNum = props.nodeNum;\r\n    this.type = props.type;\r\n    this.layer = props.layer || 0;\r\n\r\n    this.fromHereConns = [];\r\n    this.toHereConns = [];\r\n\r\n    if (props.type !== NODE_TYPE.I) {\r\n      this.initBias();\r\n    }\r\n    this.activation = props.activation || \"identity\";\r\n    this.outValue = 0;\r\n  }\r\n\r\n  initBias() {\r\n    this.bias = this.getInitValue();\r\n  }\r\n\r\n  mutateBias() {\r\n    if (Math.random() < 0.9) {\r\n      // uniformly perturbed\r\n      this.bias += this.getDeltaValue();\r\n    } else {\r\n      // assigned a new random variable\r\n      this.initBias();\r\n    }\r\n  }\r\n\r\n  mutateActivation() {}\r\n\r\n  copy() {\r\n    let copied = new NodeGene({\r\n      nodeNum: this.nodeNum,\r\n      type: this.type,\r\n      layer: this.layer,\r\n      activation: this.activation,\r\n    });\r\n    copied.fromHereConns = this.fromHereConns.slice();\r\n    copied.toHereConns = this.toHereConns.slice();\r\n    copied.bias = this.bias;\r\n    // copied.outValue = this.outValue;\r\n\r\n    return copied;\r\n  }\r\n}\r\n\r\nexport class ConnectionGene extends Gene {\r\n  constructor(props = {}) {\r\n    super(props);\r\n    this.invNum = props.invNum;\r\n    this.type = props.type;\r\n    this.from = props.from;\r\n    this.to = props.to;\r\n\r\n    this.enabled = true;\r\n    this.initWeight(props.weight);\r\n  }\r\n\r\n  initWeight(weight) {\r\n    this.weight = weight || this.getInitValue();\r\n  }\r\n\r\n  mutateWeight() {\r\n    if (Math.random() < 0.9) {\r\n      // uniformly perturbed\r\n      this.weight += this.getDeltaValue();\r\n    } else {\r\n      // assigned a new random variable\r\n      this.initWeight();\r\n    }\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false;\r\n  }\r\n\r\n  copy() {\r\n    let copied = new ConnectionGene({\r\n      invNum: this.invNum,\r\n      type: this.type,\r\n      from: this.from,\r\n      to: this.to,\r\n    });\r\n    copied.weight = this.weight;\r\n    copied.enabled = this.enabled;\r\n\r\n    return copied;\r\n  }\r\n}\r\n","const Activation = {\r\n  identity: (x) => x,\r\n  sigmoid: (x) => 1 / (1 + Math.pow(Math.E, -1 * x)),\r\n  modifiedSigmoid: (x) => 1 / (1 + Math.pow(Math.E, -4.9 * x)),\r\n  step: (x) => (x > 0 ? 1 : 0),\r\n};\r\n\r\nexport default Activation;\r\n","import { NodeGene, ConnectionGene } from \"./Gene\";\r\nimport Activation from \"./Activation\";\r\n\r\nexport const NODE_TYPE = {\r\n  I: \"NODE_INPUT\",\r\n  H: \"NODE_HIDDEN\",\r\n  O: \"NODE_OUTPUT\",\r\n};\r\n\r\nexport const CONN_TYPE = {\r\n  F: \"CONN_FORWARD\",\r\n  R: \"CONN_RECURRENT\",\r\n};\r\n\r\nexport default class Genome {\r\n  constructor(props) {\r\n    this.setting = props.setting;\r\n    this.inputSize = this.setting.inputSize;\r\n    this.outputSize = this.setting.outputSize;\r\n\r\n    // nodes is orders of calculation\r\n    this.nodes = [];\r\n    this.nodeMap = {};\r\n    this.connMap = {};\r\n\r\n    if (props.isPrimal) {\r\n      this.createPrimal();\r\n    }\r\n  }\r\n\r\n  initNode(props) {\r\n    let { nodeNum, order } = props;\r\n    let node = new NodeGene(props);\r\n    if (order === undefined) {\r\n      order = this.nodes.length;\r\n    }\r\n    this.nodes.splice(order, 0, nodeNum);\r\n    this.nodeMap[nodeNum] = node;\r\n\r\n    return node;\r\n  }\r\n\r\n  initConn(props) {\r\n    let { invNum, from, to } = props;\r\n    let conn = new ConnectionGene(props);\r\n    this.connMap[invNum] = conn;\r\n\r\n    this.nodeMap[from].fromHereConns.push(invNum);\r\n    this.nodeMap[to].toHereConns.push(invNum);\r\n\r\n    return conn;\r\n  }\r\n\r\n  createPrimal() {\r\n    for (let i = 0; i < this.inputSize; i++) {\r\n      let nodeNum = this.setting.addLastNodeNum();\r\n      this.initNode({\r\n        nodeNum,\r\n        type: NODE_TYPE.I,\r\n        layer: 0,\r\n      });\r\n    }\r\n    for (let i = 0; i < this.outputSize; i++) {\r\n      let nodeNum = this.setting.addLastNodeNum();\r\n      this.initNode({\r\n        nodeNum,\r\n        type: NODE_TYPE.O,\r\n        layer: 1,\r\n        activation: \"modifiedSigmoid\",\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this.inputSize; i++) {\r\n      for (let j = this.inputSize; j < this.inputSize + this.outputSize; j++) {\r\n        let invNum = this.setting.addLastInvNum();\r\n        this.initConn({ invNum, type: CONN_TYPE.F, from: i, to: j });\r\n      }\r\n    }\r\n  }\r\n\r\n  predict(input) {\r\n    let output = [];\r\n\r\n    // make outValue of each node\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      let nodeNum = this.nodes[i];\r\n      let node = this.nodeMap[nodeNum];\r\n\r\n      if (node.type === NODE_TYPE.I) {\r\n        node.outValue = input[i];\r\n        continue;\r\n      }\r\n\r\n      let weightedSum = 0;\r\n      for (let k = 0; k < node.toHereConns.length; k++) {\r\n        let invNum = node.toHereConns[k];\r\n        let conn = this.connMap[invNum];\r\n        if (conn.enabled) {\r\n          weightedSum += this.nodeMap[conn.from].outValue * conn.weight;\r\n        }\r\n      }\r\n      let func = Activation[node.activation];\r\n      node.outValue = func(weightedSum + node.bias);\r\n      if (node.type === NODE_TYPE.O) {\r\n        output.push(node.outValue);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  copy() {\r\n    let copied = new Genome({ setting: this.setting });\r\n    copied.nodes = this.nodes.slice();\r\n\r\n    for (let nodeNum in this.nodeMap) {\r\n      copied.nodeMap[nodeNum] = this.nodeMap[nodeNum].copy();\r\n    }\r\n\r\n    for (let invNum in this.connMap) {\r\n      copied.connMap[invNum] = this.connMap[invNum].copy();\r\n    }\r\n\r\n    return copied;\r\n  }\r\n\r\n  calculateFitness() {}\r\n\r\n  crossover(partner) {\r\n    // compare the fitness score of this and partner,\r\n    // and set to parent1 and parent2, where parent1 is more fit one.\r\n    let parent1, parent2;\r\n    // console.log(\"crossover:\", this.fitness > partner.fitness);\r\n    if (this.fitness > partner.fitness) {\r\n      parent1 = this;\r\n      parent2 = partner;\r\n    } else {\r\n      parent1 = partner;\r\n      parent2 = this;\r\n    }\r\n\r\n    let child = new Genome({ setting: this.setting });\r\n    child.nodes = parent1.nodes.slice();\r\n    // set nodes\r\n    // just copy from more fit parent\r\n    // 이 때 layer 복사를 랜덤으로 하면 topology가 꼬인다\r\n    for (let nodeNum in parent1.nodeMap) {\r\n      child.nodeMap[nodeNum] = parent1.nodeMap[nodeNum].copy();\r\n      if (nodeNum in parent2.nodeMap) {\r\n        if (Math.random() > 0.5) {\r\n          child.nodeMap[nodeNum].bias = parent2.nodeMap[nodeNum].bias;\r\n        }\r\n      }\r\n    }\r\n    // set conns\r\n    for (let invNum in parent1.connMap) {\r\n      child.connMap[invNum] = parent1.connMap[invNum].copy();\r\n      if (invNum in parent2.connMap) {\r\n        if (Math.random() > 0.5) {\r\n          //   child.connMap[invNum].weight = parent2.connMap[invNum].weight;\r\n          //   child.connMap[invNum].enabled = parent2.connMap[invNum].enabled;\r\n          child.connMap[invNum] = parent2.connMap[invNum].copy();\r\n        }\r\n      }\r\n    }\r\n\r\n    return child;\r\n  }\r\n\r\n  mutate(keepStructure = false) {\r\n    for (let invNum in this.connMap) {\r\n      let conn = this.connMap[invNum];\r\n      if (Math.random() < 0.8) conn.mutateWeight();\r\n    }\r\n    for (let nodeNum in this.nodeMap) {\r\n      let node = this.nodeMap[nodeNum];\r\n      if (Math.random() < 0.8) node.mutateBias();\r\n      //   if (Math.random() < 0.01) node.mutateActivation();\r\n    }\r\n\r\n    if (keepStructure) return;\r\n    if (Math.random() < 0.03) this.addNode();\r\n    if (Math.random() < 0.05) this.addConn();\r\n\r\n    // // // DEBUG CODE\r\n    // if (Math.random() < 0.5) this.addNode();\r\n    // else {\r\n    //   this.addNode();\r\n    //   this.addConn();\r\n    // }\r\n  }\r\n\r\n  getNodeFromNodeIndex(idx) {\r\n    return this.nodeMap[this.nodes[idx]];\r\n  }\r\n\r\n  selectEnabledConn() {\r\n    let candidates = [];\r\n    for (let invNum in this.connMap) {\r\n      let conn = this.connMap[invNum];\r\n      if (conn.enabled) candidates.push(invNum);\r\n    }\r\n    if (candidates.length <= 0) {\r\n      return undefined;\r\n    }\r\n    return candidates[Math.floor(Math.random() * candidates.length)];\r\n  }\r\n\r\n  selectNewConn(blockRecurrent = false) {\r\n    // the layers of fromNode and toNode should be different.\r\n    // and toNode should not be input layer.\r\n    // check to block recurrent or not\r\n    let candidates = [];\r\n    for (let to in this.nodeMap) {\r\n      to = parseInt(to);\r\n      let toNode = this.nodeMap[to];\r\n      if (toNode.layer === 0) continue;\r\n      let used = toNode.toHereConns.map((invNum) => {\r\n        return this.connMap[invNum].from;\r\n      });\r\n      for (let from in this.nodeMap) {\r\n        from = parseInt(from);\r\n        let fromNode = this.nodeMap[from];\r\n        if (fromNode.layer === toNode.layer) continue;\r\n        if (used.indexOf(from) === -1) {\r\n          let type;\r\n          if (toNode.layer > fromNode.layer) {\r\n            type = CONN_TYPE.F;\r\n          } else {\r\n            if (blockRecurrent) continue;\r\n            type = CONN_TYPE.R;\r\n          }\r\n          candidates.push({ from, to, type });\r\n        }\r\n      }\r\n    }\r\n    if (candidates.length <= 0) {\r\n      return undefined;\r\n    }\r\n    return candidates[Math.floor(Math.random() * candidates.length)];\r\n  }\r\n\r\n  addNode() {\r\n    // should report the structural innovation to setting\r\n    // to check whether the same structural innovation\r\n    // in the current generation occurs.\r\n\r\n    // select an existing conn which is not disabled\r\n    let oldInvNum = this.selectEnabledConn();\r\n    if (oldInvNum === undefined) return false;\r\n    let oldConn = this.connMap[oldInvNum];\r\n\r\n    // check the conn is already innovated in current generation\r\n    let invResult = this.setting.addInvResult({\r\n      toSplit: oldConn.invNum,\r\n      from: oldConn.from,\r\n      to: oldConn.to,\r\n    });\r\n    // console.log(\"addNode: invResult\", invResult);\r\n\r\n    // // innovate structure\r\n    // select layer\r\n    let fromNode = this.nodeMap[oldConn.from];\r\n    let toNode = this.nodeMap[oldConn.to];\r\n\r\n    let lowLayer, highLayer;\r\n    if (toNode.layer > fromNode.layer) {\r\n      // oldConn.type === CONN_TYPE.F\r\n      lowLayer = fromNode.layer;\r\n      highLayer = toNode.layer;\r\n    } else {\r\n      // oldConn.type === CONN_TYPE.R\r\n      lowLayer = toNode.layer;\r\n      highLayer = fromNode.layer;\r\n    }\r\n    let layerDist = highLayer - lowLayer;\r\n    let layer = lowLayer + 1; // if this line is changed, many things should be changed.\r\n\r\n    // console.log(\"addNode: layerDist\", oldConn.type, layerDist);\r\n    // console.log(\"addNode: newNodeLayer\", layer);\r\n\r\n    // update other nodes' layer\r\n    let spliceIndex;\r\n    for (let i = 0; i < this.nodes.length; i++) {\r\n      let node = this.getNodeFromNodeIndex(i);\r\n      if (node.layer >= layer) {\r\n        spliceIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    // console.log(\"addNode: spliceIndex\", spliceIndex);\r\n    if (layerDist <= 1) {\r\n      for (let i = spliceIndex; i < this.nodes.length; i++) {\r\n        let node = this.getNodeFromNodeIndex(i);\r\n        node.layer++;\r\n      }\r\n    }\r\n\r\n    // make Node\r\n    let { nodeNum, invNum1, invNum2 } = invResult;\r\n    this.initNode({\r\n      nodeNum,\r\n      type: NODE_TYPE.H,\r\n      layer,\r\n      order: spliceIndex,\r\n      activation: \"modifiedSigmoid\",\r\n    });\r\n\r\n    // make Conns\r\n    this.initConn({\r\n      invNum: invNum1,\r\n      type: oldConn.type,\r\n      from: oldConn.from,\r\n      to: nodeNum,\r\n      weight: 1,\r\n    });\r\n    this.initConn({\r\n      invNum: invNum2,\r\n      type: oldConn.type,\r\n      from: nodeNum,\r\n      to: oldConn.to,\r\n      weight: oldConn.weight,\r\n    });\r\n    // disable oldConn\r\n    oldConn.disable();\r\n  }\r\n\r\n  addConn() {\r\n    // select new conn\r\n    let newConn = this.selectNewConn(this.setting.blockRecurrent);\r\n    // if there is no more room for new conn, return false\r\n    if (newConn === undefined) return false;\r\n    let { from, to, type } = newConn;\r\n    // console.log(\"addConn:\", from, to, type);\r\n\r\n    // check the conn is already innovated in current generation\r\n    let invResult = this.setting.addInvResult({ from, to });\r\n    // console.log(\"addConn: invResult\", invResult);\r\n    // innovate structure\r\n    let { invNum } = invResult;\r\n    this.initConn({\r\n      invNum,\r\n      type,\r\n      from,\r\n      to,\r\n    });\r\n  }\r\n\r\n  measureDist(other) {\r\n    if (!(other instanceof Genome)) {\r\n      throw new Error(\r\n        \"To measure distance, other should be instance of Genome.\"\r\n      );\r\n    }\r\n\r\n    let matching = [];\r\n    let myLeft = [];\r\n    let otherLeft = [];\r\n    for (let invNum in this.connMap) {\r\n      invNum = parseInt(invNum);\r\n      if (invNum in other.connMap) {\r\n        matching.push(invNum);\r\n      } else {\r\n        myLeft.push(invNum);\r\n      }\r\n    }\r\n    for (let invNum in other.connMap) {\r\n      invNum = parseInt(invNum);\r\n      if (!(invNum in this.connMap)) {\r\n        otherLeft.push(invNum);\r\n      }\r\n    }\r\n    let N = matching.length + Math.max(myLeft.length, otherLeft.length);\r\n    let matchingMax = Math.max(...matching);\r\n\r\n    let disjointCnt = 0;\r\n    let excessCnt = 0;\r\n    for (let i = 0; i < myLeft.length; i++) {\r\n      let invNum = myLeft[i];\r\n      if (invNum < matchingMax) disjointCnt++;\r\n      else excessCnt++;\r\n    }\r\n    for (let i = 0; i < otherLeft.length; i++) {\r\n      let invNum = otherLeft[i];\r\n      if (invNum < matchingMax) disjointCnt++;\r\n      else excessCnt++;\r\n    }\r\n\r\n    let weightDiff = 0;\r\n    for (let i = 0; i < matching.length; i++) {\r\n      let invNum = matching[i];\r\n      let myWeight = this.connMap[invNum].weight;\r\n      let otherWeight = other.connMap[invNum].weight;\r\n      weightDiff += Math.abs(myWeight - otherWeight);\r\n    }\r\n\r\n    // console.log(Object.keys(this.connMap), Object.keys(other.connMap));\r\n    // console.log(\"arrays\", matching, myLeft, otherLeft);\r\n    // console.log(\"matching\", N, matchingMax, disjointCnt, excessCnt, weightDiff);\r\n\r\n    let { distC1, distC2, distC3 } = this.setting;\r\n    let result = (distC1 * excessCnt) / N;\r\n    result += (distC2 * disjointCnt) / N;\r\n    if (matching.length > 0) result += (distC3 * weightDiff) / matching.length;\r\n    // console.log(\"result\", result);\r\n    return result;\r\n  }\r\n}\r\n","import Genome, { CONN_TYPE } from \"./Genome\";\r\n\r\nexport default class Agent {\r\n  constructor(props) {\r\n    let { setting, isPrimal = false } = props;\r\n    this.setting = setting;\r\n    this.agentId = undefined;\r\n    this.speciesNum = undefined;\r\n\r\n    this.xor = [];\r\n    this.score = 0;\r\n    this.adjustedScore = undefined;\r\n    if (isPrimal) {\r\n      this.isPrimal = isPrimal;\r\n      this.genome = new Genome({ setting, isPrimal });\r\n      // console.log(\"primal genome\", this.genome);\r\n    }\r\n  }\r\n\r\n  setId(id) {\r\n    this.agentId = id;\r\n  }\r\n  getId() {\r\n    return this.agentId;\r\n  }\r\n  setSpecies(speciesNum) {\r\n    this.speciesNum = speciesNum;\r\n  }\r\n  getSpecies() {\r\n    return this.speciesNum;\r\n  }\r\n\r\n  asexual(keepStructure = false) {\r\n    // asexual reproduction\r\n    // console.log(\"Agent: reproduce asexually\");\r\n    let child = new Agent({ setting: this.setting });\r\n    child.genome = this.genome.copy();\r\n    child.genome.mutate(keepStructure);\r\n    return child;\r\n  }\r\n\r\n  sexual(partner) {\r\n    if (!(partner instanceof Agent)) {\r\n      throw new Error(\"sexual reproduction needs partner\");\r\n    }\r\n    // console.log(\"Agent: reproduce with partner\");\r\n    let child = new Agent({ setting: this.setting });\r\n    child.genome = this.genome.crossover(partner.genome);\r\n    return child;\r\n  }\r\n\r\n  geneticDist(other) {\r\n    return this.genome.measureDist(other.genome);\r\n  }\r\n\r\n  think(ctx, frameCnt) {\r\n    // just in case, reset values\r\n    this.xor.splice(0, this.xor.length);\r\n    this.score = 0;\r\n\r\n    let xs = [\r\n      [0, 0],\r\n      [0, 1],\r\n      [1, 0],\r\n      [1, 1],\r\n    ];\r\n    let ys = [0, 1, 1, 0];\r\n\r\n    for (let i = 0; i < xs.length; i++) {\r\n      let x = xs[i];\r\n      let y = ys[i];\r\n      let output = this.genome.predict(x)[0];\r\n      this.xor.push(output);\r\n      this.score += 1 - (y - output) * (y - output);\r\n    }\r\n\r\n    // console.log(`Agent ${this.agentId}:`, this.score, this.xor);\r\n  }\r\n\r\n  run(ctx, local) {\r\n    if (typeof this.agentId !== \"number\") {\r\n      return; // TODO\r\n    }\r\n\r\n    ctx.save();\r\n    let boardWidth = this.setting.boardWidth;\r\n    let areaWidth = this.setting.areaWidth;\r\n    let areaHeight = this.setting.areaHeight;\r\n\r\n    let colCnt = Math.floor(boardWidth / areaWidth);\r\n\r\n    let agentX = (local % colCnt) * areaWidth;\r\n    let agentY = Math.floor(local / colCnt) * areaHeight;\r\n\r\n    ctx.translate(agentX, agentY);\r\n\r\n    // draw nodes by layer\r\n    let nodeMap = this.genome.nodeMap;\r\n    let connMap = this.genome.connMap;\r\n    let layers = {};\r\n    for (let nodeNum in nodeMap) {\r\n      let node = nodeMap[nodeNum];\r\n      let layer = node.layer;\r\n      if (!(layer in layers)) {\r\n        layers[layer] = [];\r\n      }\r\n      layers[layer].push(node);\r\n    }\r\n    let layersLength = Object.keys(layers).length;\r\n\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.font = \"8px\";\r\n    ctx.globalCompositeOperation = \"destination-over\";\r\n\r\n    ctx.strokeStyle = `rgba(0, 0, 0, 0.2)`;\r\n    ctx.strokeRect(0, 0, areaWidth, areaHeight);\r\n\r\n    let nodeLocal = {};\r\n    for (let layer in layers) {\r\n      let layerNodes = layers[layer];\r\n      for (let i = 0; i < layerNodes.length; i++) {\r\n        let node = layerNodes[i];\r\n        let nodeX = ((parseInt(layer) + 1) * areaWidth) / (layersLength + 1);\r\n        let nodeY = ((i + 1) * areaHeight) / (layerNodes.length + 1);\r\n        if (layer % 2 === 1) nodeY -= areaHeight / (layerNodes.length + 1) / 2;\r\n        nodeLocal[node.nodeNum] = [nodeX, nodeY];\r\n        ctx.save();\r\n        ctx.translate(nodeX, nodeY);\r\n\r\n        ctx.fillText(`${node.nodeNum}`, 0, 0);\r\n\r\n        ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n        ctx.fillStyle = `rgba(255, 255, 255, 1)`;\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 8, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    // connect them\r\n    for (let invNum in connMap) {\r\n      let conn = connMap[invNum];\r\n      if (!conn.enabled) continue;\r\n      let fromNode = nodeLocal[conn.from];\r\n      let toNode = nodeLocal[conn.to];\r\n      if (conn.type === CONN_TYPE.R) {\r\n        ctx.save();\r\n        ctx.strokeStyle = this.connStyle(conn.weight);\r\n        ctx.beginPath();\r\n        ctx.moveTo(fromNode[0], fromNode[1]);\r\n        ctx.setLineDash([3, 2]);\r\n        ctx.quadraticCurveTo(\r\n          (fromNode[0] + toNode[0]) / 2,\r\n          toNode[1],\r\n          toNode[0],\r\n          toNode[1]\r\n        );\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      } else {\r\n        ctx.save();\r\n        ctx.strokeStyle = this.connStyle(conn.weight);\r\n        ctx.beginPath();\r\n        ctx.moveTo(fromNode[0], fromNode[1]);\r\n        ctx.lineTo(toNode[0], toNode[1]);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    // console.log(\"Agent run: genome\", this.genome);\r\n    ctx.textAlign = \"left\";\r\n    ctx.fillText(`S${this.speciesNum}`, 5, 10);\r\n    let scoreText = Math.round(this.score * 100) / 100;\r\n    ctx.fillText(`${scoreText}`, 5, 20);\r\n\r\n    ctx.fillStyle = `rgba(0,0,0,${0.1 * this.speciesNum - 0.1})`;\r\n    ctx.fillRect(0, 0, areaWidth, areaHeight);\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  connStyle(weight) {\r\n    let alpha = Math.min(Math.abs(weight), 1);\r\n    if (weight > 0) {\r\n      return `rgba(235, 0, 74, ${alpha})`;\r\n    } else {\r\n      return `rgba(0, 140, 252, ${alpha})`;\r\n    }\r\n  }\r\n\r\n  update(ctx) {}\r\n\r\n  display(ctx) {}\r\n}\r\n","export default class Species {\r\n  constructor(props) {\r\n    this.setting = props.setting;\r\n    this.speciesNum = props.speciesNum;\r\n    this.initGenNum = props.initGenNum;\r\n\r\n    this.representative = props.agent;\r\n    this.agents = [];\r\n    this.nextAgents = [];\r\n    this.isSorted = false;\r\n\r\n    this.avgFitness = 0.01; // TODO: initial avgFitness\r\n    this.isExtinct = false;\r\n\r\n    this.ancestors = [];\r\n  }\r\n\r\n  adjustFitness() {\r\n    let size = this.agents.length;\r\n    let average = 0;\r\n    for (let i = 0; i < this.agents.length; i++) {\r\n      let agent = this.agents[i];\r\n      agent.adjustedScore = agent.score / size;\r\n      average += agent.adjustedScore;\r\n    }\r\n    average = Math.max(average, 0.01); // temp\r\n    this.avgFitness = average;\r\n    return average;\r\n  }\r\n\r\n  sortByFitness() {\r\n    this.agents.sort((a, b) => {\r\n      return b.score - a.score;\r\n    });\r\n    this.isSorted = true;\r\n  }\r\n\r\n  eliminateLowest() {\r\n    this.sortByFitness();\r\n    let survivalRate = 1 - this.setting.eliminationRate;\r\n    let limit = Math.floor(this.agents.length * survivalRate);\r\n    limit = Math.max(limit, 2);\r\n    this.agents = this.agents.slice(0, limit);\r\n  }\r\n\r\n  getHighest() {\r\n    if (this.isExtinct) {\r\n      return undefined;\r\n    }\r\n    if (!this.isSorted) {\r\n      this.sortByFitness();\r\n    }\r\n    return this.agents[0];\r\n  }\r\n\r\n  getSpeciesSize() {\r\n    return this.agents.length;\r\n  }\r\n\r\n  setExtinction() {\r\n    this.isExtinct = true;\r\n    this.avgFitness = 0;\r\n  }\r\n\r\n  setAvgFitness(fitness) {\r\n    this.avgFitness = fitness;\r\n  }\r\n\r\n  getRepresentative() {\r\n    return this.representative;\r\n  }\r\n\r\n  setRepresentative(criteria) {\r\n    // todo: set representative by fitness\r\n    let index = Math.floor(Math.random() * this.agents.length);\r\n    this.representative = this.agents[index];\r\n    return this.representative;\r\n  }\r\n\r\n  getSingleParent() {\r\n    let index = Math.floor(Math.random() * this.agents.length);\r\n    return this.agents[index];\r\n  }\r\n\r\n  keepNextAgent(agent) {\r\n    // console.log(\r\n    //   \"Species: keepNextAgent,\",\r\n    //   \"species\",\r\n    //   this.speciesNum,\r\n    //   \"agentId\",\r\n    //   agentId\r\n    // );\r\n    this.nextAgents.push(agent);\r\n  }\r\n\r\n  update() {\r\n    // if (this.initGenNum <= this.setting.getGenerationNum()) {\r\n    //   let curr = {\r\n    //     generationNum: this.setting.getGenerationNum(),\r\n    //     representative: this.representative,\r\n    //     agents: this.agents.slice(),\r\n    //     avgFitness: this.avgFitness,\r\n    //   };\r\n    //   this.ancestors.push(curr);\r\n    // }\r\n\r\n    this.representative = undefined;\r\n    this.agents = this.nextAgents;\r\n    this.isSorted = false;\r\n    this.nextAgents = [];\r\n  }\r\n}\r\n","export default class GenerationSetting {\r\n  constructor(props = {}) {\r\n    this.groupSize = 36;\r\n    this.generationNum = 0;\r\n    this.lastSpeciesNum = 0;\r\n    this.lastAgentId = 0;\r\n\r\n    this.inputSize = 2;\r\n    this.outputSize = 1;\r\n    this.lastNodeNum = -1;\r\n    this.lastInvNum = -1;\r\n\r\n    this.blockRecurrent = false;\r\n\r\n    this.distC1 = 1.0;\r\n    this.distC2 = 1.0;\r\n    this.distC3 = 0.4;\r\n    this.compatibilityThreshold = 3.0;\r\n    this.eliminationRate = 0.5;\r\n\r\n    this.areaWidth = 120;\r\n    this.areaHeight = 80;\r\n\r\n    this.generationLimit = 2000;\r\n\r\n    // reset every generation\r\n    this.invResults = [];\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    // console.log(\"BirdGroup Setting\", props);\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n\r\n    this.boardWidth = this.cvsWidth - (this.cvsWidth % this.areaWidth);\r\n    this.boardWidth = Math.min(this.boardWidth, this.areaWidth * 6);\r\n    let colCnt = Math.floor(this.boardWidth / this.areaWidth);\r\n    this.boardHeight = this.cvsHeight - (this.cvsHeight % this.areaHeight);\r\n    let rowCnt = Math.floor(this.groupSize / colCnt);\r\n    this.boardHeight = Math.min(this.boardHeight, this.areaHeight * rowCnt);\r\n\r\n    // warning! originX and Y is just for displaying!\r\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\r\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\r\n  }\r\n\r\n  getGenerationNum() {\r\n    return this.generationNum;\r\n  }\r\n  addGenerationNum() {\r\n    this.generationNum++;\r\n    return this.generationNum;\r\n  }\r\n\r\n  getLastSpeciesNum() {\r\n    return this.lastSpeciesNum;\r\n  }\r\n  addLastSpeciesNum(size = 1) {\r\n    this.lastSpeciesNum += size;\r\n    return this.lastSpeciesNum;\r\n  }\r\n\r\n  getLastAgentId() {\r\n    return this.lastAgentId;\r\n  }\r\n  addLastAgentId() {\r\n    this.lastAgentId++;\r\n    return this.lastAgentId;\r\n  }\r\n\r\n  getLastNodeNum() {\r\n    return this.lastNodeNum;\r\n  }\r\n  addLastNodeNum(size = 1) {\r\n    this.lastNodeNum += size;\r\n    return this.lastNodeNum;\r\n  }\r\n\r\n  getLastInvNum() {\r\n    return this.lastInvNum;\r\n  }\r\n  addLastInvNum(size = 1) {\r\n    this.lastInvNum += size;\r\n    return this.lastInvNum;\r\n  }\r\n\r\n  addInvResult(curr) {\r\n    // check the same location is already innovated.\r\n    for (let i = 0; i < this.invResults.length; i++) {\r\n      let prev = this.invResults[i];\r\n      // if so, return the prev innovation result.\r\n      if (prev.from === curr.from && prev.to === curr.to) {\r\n        if (prev.toSplit === curr.toSplit) {\r\n          // console.log(\"addInvResult, return prev\");\r\n          return prev;\r\n        }\r\n      }\r\n    }\r\n    // if not, make and return result with new invNum\r\n    if (curr.toSplit !== undefined) {\r\n      // addNode\r\n      curr.nodeNum = this.addLastNodeNum();\r\n      curr.invNum1 = this.addLastInvNum();\r\n      curr.invNum2 = this.addLastInvNum();\r\n      this.invResults.push(curr);\r\n    } else {\r\n      // addConn\r\n      curr.invNum = this.addLastInvNum();\r\n      this.invResults.push(curr);\r\n    }\r\n\r\n    return curr;\r\n  }\r\n}\r\n","import Agent from \"./Agent\";\r\nimport Species from \"./Species\";\r\nimport Setting from \"./Setting\";\r\n\r\nexport default class Generation {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n    this.ancestors = [];\r\n    this.agentMap = {};\r\n    this.speciesMap = {};\r\n\r\n    this.initGeneration();\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n  }\r\n\r\n  initSpecies(props) {\r\n    let { speciesNum } = props;\r\n    let species = new Species(props);\r\n    if (speciesNum in this.speciesMap) {\r\n      console.error(\r\n        `Generation initSpecies: speciesNum ${speciesNum} is already taken.`\r\n      );\r\n      return this.speciesMap[speciesNum];\r\n    }\r\n    this.speciesMap[speciesNum] = species;\r\n\r\n    return species;\r\n  }\r\n\r\n  initGeneration() {\r\n    let primal = new Agent({ setting: this.setting, isPrimal: true });\r\n    let agentId = this.setting.addLastAgentId();\r\n    primal.setId(agentId);\r\n    let speciesNum = this.setting.addLastSpeciesNum();\r\n    let species = this.initSpecies({\r\n      setting: this.setting,\r\n      initGenNum: this.setting.getGenerationNum() + 1,\r\n      speciesNum,\r\n      agent: primal,\r\n    });\r\n    primal.setSpecies(speciesNum);\r\n\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      let child = primal.asexual(true); // keepStructure true\r\n      let agentId = this.setting.addLastAgentId();\r\n      child.setId(agentId);\r\n      child.setSpecies(speciesNum);\r\n      species.agents.push(child);\r\n      this.agentMap[agentId] = child;\r\n    }\r\n\r\n    this.speciesMap[speciesNum] = species;\r\n    this.setting.addGenerationNum();\r\n\r\n    // console.log(`GENERATION ${this.setting.getGenerationNum()}: reproduced`);\r\n    // console.log(this.speciesMap);\r\n  }\r\n\r\n  nextGeneration() {\r\n    // 각 species의 avgFitness 구하기\r\n    // 이와 더불어 각 species에서 낮은 점수의 agent 탈락\r\n    let avgFitnessTotal = 0;\r\n    let representativeMap = {};\r\n    for (let speciesNum in this.speciesMap) {\r\n      let species = this.speciesMap[speciesNum];\r\n      if (species.isExtinct) continue;\r\n\r\n      let avgFitness = species.adjustFitness();\r\n      avgFitnessTotal += avgFitness;\r\n      species.eliminateLowest();\r\n\r\n      // species의 대표 agent를 representativeMap에 저장\r\n      let representative = species.setRepresentative();\r\n      representativeMap[speciesNum] = representative;\r\n    }\r\n    // console.log(\"nextGeneration: avgFitnessTotal\", avgFitnessTotal);\r\n    // console.log(representativeMap);\r\n\r\n    // for (let speciesNum in representativeMap) {\r\n    //   let species = this.speciesMap[speciesNum];\r\n    //   let highest = species.getHighest();\r\n    //   console.log(\r\n    //     `GENERATION ${this.setting.getGenerationNum()}: `,\r\n    //     speciesNum,\r\n    //     highest.score\r\n    //   );\r\n    //   if (highest.score >= 3.9) {\r\n    //     console.log(\"HIT!\", highest);\r\n    //   }\r\n    // }\r\n\r\n    // 각 species의 할당량을 구해 allotment 생성\r\n    let allotment = [];\r\n    for (let speciesNum in representativeMap) {\r\n      speciesNum = parseInt(speciesNum);\r\n      let species = this.speciesMap[speciesNum];\r\n      let proportion = species.avgFitness / avgFitnessTotal;\r\n      let size = Math.ceil(proportion * this.setting.groupSize);\r\n      // allotment에 할당된 수만큼 speciesNum 추가\r\n      for (let i = 0; i < size; i++) {\r\n        allotment.push(speciesNum);\r\n      }\r\n    }\r\n    // allotment의 길이가 groupSize에 미치지 못하거나 초과할 시 조정\r\n    if (allotment.length < this.setting.groupSize) {\r\n      let diff = this.setting.groupSize - allotment.length;\r\n      for (let i = 0; i < diff; i++) {\r\n        let index = Math.floor(Math.random() * allotment.length);\r\n        let speciesNum = allotment[index];\r\n        allotment.push(speciesNum);\r\n      }\r\n    } else {\r\n      allotment = allotment.slice(0, this.setting.groupSize);\r\n    }\r\n    // console.log(\"nextGeneration: allotment\", allotment);\r\n\r\n    // allotment에 맞게 새로운 agent 생성하고, species를 배정\r\n    let newAgentMap = {};\r\n    let speciesReproduced = {};\r\n    for (let i = 0; i < allotment.length; i++) {\r\n      // speciesNum를 기준으로 child 생성\r\n      let speciesNum = allotment[i];\r\n      let species = this.speciesMap[speciesNum];\r\n      let parent1 = species.getSingleParent();\r\n      let parent2 = species.getSingleParent();\r\n      let child;\r\n      if (parent1 === parent2 || Math.random() < 0.25) {\r\n        child = parent1.asexual(false);\r\n      } else {\r\n        child = parent1.sexual(parent2);\r\n      }\r\n      // child에 AgentId 배정\r\n      let agentId = this.setting.addLastAgentId();\r\n      child.setId(agentId);\r\n      // child가 기존 종들 중 어디에 속하는지 결정\r\n      for (let speciesNum in representativeMap) {\r\n        speciesNum = parseInt(speciesNum);\r\n        let species = this.speciesMap[speciesNum];\r\n        let representative = representativeMap[speciesNum];\r\n        let dist = child.geneticDist(representative);\r\n        // console.log(\"DIST\", speciesNum, child.agentId, dist);\r\n        if (dist < this.setting.compatibilityThreshold) {\r\n          child.setSpecies(speciesNum);\r\n          species.keepNextAgent(child);\r\n          speciesReproduced[speciesNum] = true;\r\n          break;\r\n        }\r\n      }\r\n      // 배정된 종이 없을 경우, 새로운 종을 생성\r\n      if (child.getSpecies() === undefined) {\r\n        let speciesNum = this.setting.addLastSpeciesNum();\r\n        let species = this.initSpecies({\r\n          setting: this.setting,\r\n          initGenNum: this.setting.getGenerationNum() + 1,\r\n          speciesNum,\r\n          agent: child,\r\n        });\r\n        child.setSpecies(speciesNum);\r\n        species.keepNextAgent(child);\r\n        speciesReproduced[speciesNum] = true;\r\n        representativeMap[speciesNum] = child;\r\n        this.speciesMap[speciesNum] = species;\r\n      }\r\n\r\n      newAgentMap[agentId] = child;\r\n    }\r\n    // 개체를 배정받지 못한 종은 멸종 처리\r\n    for (let speciesNum in representativeMap) {\r\n      if (!speciesReproduced[speciesNum]) {\r\n        this.speciesMap[speciesNum].setExtinction();\r\n      }\r\n    }\r\n\r\n    // 현재 세대를 ancestor로 넘김\r\n    let ancestor = {\r\n      generationNum: this.setting.getGenerationNum(),\r\n      agentMap: this.agentMap,\r\n    };\r\n    this.ancestors.push(ancestor);\r\n    // species 업데이트\r\n    for (let speciesNum in representativeMap) {\r\n      let species = this.speciesMap[speciesNum];\r\n      species.update();\r\n    }\r\n    // generationNum 업데이트\r\n    this.setting.addGenerationNum();\r\n    // 새로운 agentMap으로 변경\r\n    this.agentMap = newAgentMap;\r\n    // console.log(`GENERATION ${this.setting.getGenerationNum()}: reproduced`);\r\n    // console.log(this.speciesMap);\r\n  }\r\n\r\n  run(ctx, frameCnt) {\r\n    ctx.save();\r\n    let { originX, originY } = this.setting;\r\n    ctx.translate(originX, originY);\r\n    ctx.clearRect(0, 0, this.setting.boardWidth, this.setting.boardHeight);\r\n    ctx.strokeRect(0, 0, this.setting.boardWidth, this.setting.boardHeight);\r\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\r\n\r\n    ctx.save();\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\r\n    ctx.font = \"40px NanumSquareRound, sans-serif\";\r\n    ctx.fillText(\r\n      `Gen`,\r\n      this.setting.boardWidth / 2,\r\n      this.setting.boardHeight / 2 - 23\r\n    );\r\n    ctx.fillText(\r\n      `${this.setting.generationNum}`,\r\n      this.setting.boardWidth / 2,\r\n      this.setting.boardHeight / 2 + 23\r\n    );\r\n    ctx.restore();\r\n\r\n    let local = 0;\r\n    for (let agentId in this.agentMap) {\r\n      let agent = this.agentMap[agentId];\r\n      agent.think(ctx, frameCnt);\r\n      agent.run(ctx, local);\r\n      local++;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","class Vector2D {\r\n  constructor(x = 0, y = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  add(v) {\r\n    if (v instanceof Vector2D) {\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n    } else {\r\n      // v is considered as scalar\r\n      this.x += v;\r\n      this.y += v;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  sub(v) {\r\n    if (v instanceof Vector2D) {\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n    } else {\r\n      // v is considered as scalar\r\n      this.x -= v;\r\n      this.y -= v;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mult(v) {\r\n    if (v instanceof Vector2D) {\r\n      this.x *= v.x;\r\n      this.y *= v.y;\r\n    } else {\r\n      // v is considered as scalar\r\n      this.x *= v;\r\n      this.y *= v;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  div(v) {\r\n    if (v instanceof Vector2D) {\r\n      this.x /= v.x;\r\n      this.y /= v.y;\r\n    } else {\r\n      // v is considered as scalar\r\n      this.x /= v;\r\n      this.y /= v;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  equals(v) {\r\n    return this.x === v.x && this.y === v.y;\r\n  }\r\n\r\n  dot(v) {\r\n    return this.x * v.x + this.y * v.y;\r\n  }\r\n\r\n  getMag() {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  getMagSq() {\r\n    return this.x * this.x + this.y * this.y;\r\n  }\r\n\r\n  setMag(v) {\r\n    this.normalize();\r\n    this.mult(v);\r\n    return this;\r\n  }\r\n\r\n  normalize() {\r\n    let m = this.getMag();\r\n    if (m === 0) {\r\n      this.x = 1;\r\n      this.y = 0;\r\n    } else {\r\n      this.div(m);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  limit(maximum) {\r\n    if (this.getMag() > maximum) {\r\n      this.setMag(maximum);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new Vector2D(this.x, this.y);\r\n  }\r\n\r\n  static add(a, b) {\r\n    if (b instanceof Vector2D) {\r\n      return new Vector2D(a.x + b.x, a.y + b.y);\r\n    } else {\r\n      return new Vector2D(a.x + b, a.y + b);\r\n    }\r\n  }\r\n\r\n  static sub(a, b) {\r\n    if (b instanceof Vector2D) {\r\n      return new Vector2D(a.x - b.x, a.y - b.y);\r\n    } else {\r\n      return new Vector2D(a.x - b, a.y - b);\r\n    }\r\n  }\r\n\r\n  static mult(a, b) {\r\n    if (b instanceof Vector2D) {\r\n      return new Vector2D(a.x * b.x, a.y * b.y);\r\n    } else {\r\n      return new Vector2D(a.x * b, a.y * b);\r\n    }\r\n  }\r\n\r\n  static div(a, b) {\r\n    if (b instanceof Vector2D) {\r\n      return new Vector2D(a.x / b.x, a.y / b.y);\r\n    } else {\r\n      return new Vector2D(a.x / b, a.y / b);\r\n    }\r\n  }\r\n\r\n  static dist(a, b) {\r\n    // let d = Vector2D.sub(a, b);\r\n    // return d.getMag();\r\n    let dx = a.x - b.x;\r\n    let dy = a.y - b.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n}\r\n\r\nexport default Vector2D;\r\n","import Vector2D from \"../Tool/Vector2D\";\r\n\r\nexport default class Particle {\r\n  constructor(location, angle) {\r\n    this.location = location.clone();\r\n    this.angle = angle;\r\n\r\n    let mag = 0.5;\r\n\r\n    let xVel = -1 * Math.cos(angle) * mag + (Math.random() - 0.5) * 2.0;\r\n    let yVel = -1 * Math.sin(angle) * mag + (Math.random() - 0.5) * 2.0;\r\n\r\n    this.velocity = new Vector2D(xVel, yVel);\r\n    this.acceleration = new Vector2D(0, 0);\r\n    this.radius = 2;\r\n    this.lifespan = 20;\r\n  }\r\n\r\n  run(ctx) {\r\n    this.update(ctx);\r\n    this.display(ctx);\r\n  }\r\n\r\n  update(ctx) {\r\n    this.velocity.add(this.acceleration);\r\n    this.location.add(this.velocity);\r\n    this.lifespan -= 1;\r\n  }\r\n\r\n  display(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = `rgba(255,90,0, ${this.lifespan / 20})`;\r\n    ctx.beginPath();\r\n    ctx.arc(this.location.x, this.location.y, this.radius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  isDead() {\r\n    return this.lifespan < 0;\r\n  }\r\n}\r\n","// import Vector2D from \"../Tool/Vector2D\";\r\nimport Particle from \"./Particle\";\r\n\r\nexport default class Fumes {\r\n  constructor(origin, angle) {\r\n    this.origin = origin.clone();\r\n    this.angle = angle;\r\n    this.particles = [];\r\n  }\r\n\r\n  addParticle() {\r\n    this.particles.push(new Particle(this.origin, this.angle));\r\n  }\r\n\r\n  setLocation(x, y, angle) {\r\n    this.origin.x = x;\r\n    this.origin.y = y;\r\n    this.angle = angle;\r\n  }\r\n\r\n  run(ctx) {\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      let p = this.particles[i];\r\n      p.run(ctx);\r\n      if (p.isDead()) {\r\n        this.particles.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Vector2D from \"../Tool/Vector2D\";\r\nimport Fumes from \"./Fumes\";\r\n\r\nexport const AGENT_TYPE = {\r\n  WANDERER: \"AGENT_WANDERER\",\r\n  SCREEN: \"AGENT_SCREEN\",\r\n};\r\n\r\nexport default class Asteroid {\r\n  constructor(props = {}) {\r\n    this.setting = props.setting;\r\n    this.agentType = this.setting.agentType;\r\n    this.location = this.getRandomLocation();\r\n    this.velocity = new Vector2D(0, 0);\r\n    this.acceleration = new Vector2D(0, 0);\r\n\r\n    if (this.agentType === AGENT_TYPE.SCREEN) {\r\n      this.maxSpeed = 10;\r\n      this.maxForce = 0.5;\r\n    } else {\r\n      this.maxSpeed = 4;\r\n      this.maxForce = 0.2;\r\n    }\r\n\r\n    this.defaultAngle = -Math.PI / 2;\r\n    this.angle = this.defaultAngle;\r\n    this.angStep = 0.05;\r\n\r\n    this.seekLimit = 50;\r\n    this.desiredSeparation = 20;\r\n    this.wanderTarget = this.location.clone();\r\n    this.warderRelocationPct = 0.01;\r\n    this.wanderSpeedRatio = 0.1;\r\n\r\n    // this.separationWeight = 0.6;\r\n    // this.seekWeight = 0.4;\r\n    this.gridLocal = {};\r\n\r\n    this.isAccelerated = false;\r\n    this.leftFumes = new Fumes(this.location, this.angle);\r\n    this.rightFumes = new Fumes(this.location, this.angle);\r\n  }\r\n\r\n  turnLeft() {\r\n    this.angle -= this.angStep;\r\n  }\r\n\r\n  turnRight() {\r\n    this.angle += this.angStep;\r\n  }\r\n\r\n  moveForward() {\r\n    let mag = 0.1;\r\n    let x = Math.cos(this.angle) * mag;\r\n    let y = Math.sin(this.angle) * mag;\r\n    this.acceleration.x = x;\r\n    this.acceleration.y = y;\r\n  }\r\n\r\n  flock(agents, mouseObj) {\r\n    let separation, seek;\r\n\r\n    // exclude oneself\r\n    if (agents.length > 1) {\r\n      separation = this.separate(agents);\r\n      this.applyForce(separation);\r\n    }\r\n\r\n    if (mouseObj.isMouseOverCanvas && this.isCandyOn) {\r\n      seek = this.seekMouse(mouseObj);\r\n      this.applyForce(seek);\r\n    } else {\r\n      if (Math.random() < this.warderRelocationPct) {\r\n        this.wanderTarget = this.getRandomLocation();\r\n      }\r\n      seek = this.seek(this.wanderTarget);\r\n      seek.mult(this.wanderSpeedRatio);\r\n      this.applyForce(seek);\r\n    }\r\n  }\r\n\r\n  getRandomLocation() {\r\n    let x = Math.floor(Math.random() * this.setting.cvsWidth);\r\n    let y = Math.floor(Math.random() * this.setting.cvsHeight);\r\n    return new Vector2D(x, y);\r\n  }\r\n\r\n  separate(agents) {\r\n    let sum = new Vector2D();\r\n    let count = 0;\r\n    for (let i = 0; i < agents.length; i++) {\r\n      let agent = agents[i];\r\n      let diff = Vector2D.sub(this.location, agent.location);\r\n      let distance = diff.getMagSq();\r\n      if (\r\n        distance > 0 &&\r\n        distance < this.desiredSeparation * this.desiredSeparation\r\n      ) {\r\n        // diff.normalize();\r\n        // diff.div(distance);\r\n        diff.setMag(1 / distance);\r\n        sum.add(diff);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    if (count > 0) {\r\n      // sum.div(count);\r\n      sum.setMag(this.maxSpeed);\r\n      sum.sub(this.velocity); // steer\r\n      sum.limit(this.maxSpeed);\r\n      return sum;\r\n    } else {\r\n      return sum;\r\n    }\r\n  }\r\n\r\n  seek(target) {\r\n    let desired = Vector2D.sub(target, this.location);\r\n    let dX = this.location.x - target.x;\r\n    let dY = this.location.y - target.y;\r\n    let angleBase = Math.atan2(dY, dX) - Math.PI;\r\n\r\n    let d = desired.getMag();\r\n    desired.normalize();\r\n    let dLimit = this.seekLimit;\r\n    if (d < dLimit) {\r\n      let m = (d / dLimit) * this.maxSpeed;\r\n      let dA = this.defaultAngle;\r\n      desired.mult(m);\r\n      this.angle = dA - (dA - angleBase) * (d / dLimit);\r\n    } else {\r\n      desired.mult(this.maxSpeed);\r\n      this.angle = angleBase;\r\n    }\r\n    desired.sub(this.velocity); // steer\r\n    desired.limit(this.maxForce);\r\n\r\n    return desired;\r\n    // this.applyForce(desired);\r\n  }\r\n\r\n  seekMouse(mouseObj) {\r\n    let target = new Vector2D(mouseObj.mouseX, mouseObj.mouseY);\r\n    return this.seek(target);\r\n  }\r\n\r\n  setGridLocal(row, col) {\r\n    this.gridLocal.row = row;\r\n    this.gridLocal.col = col;\r\n  }\r\n\r\n  applyForce(force) {\r\n    this.acceleration.add(force);\r\n  }\r\n\r\n  update(ctx) {\r\n    this.velocity.add(this.acceleration);\r\n    this.velocity.limit(this.maxSpeed);\r\n    this.velocity.mult(0.99);\r\n    this.location.add(this.velocity);\r\n    this.acceleration.mult(0);\r\n\r\n    if (this.agentType === AGENT_TYPE.WANDERER) {\r\n      this.checkEdges(ctx);\r\n    }\r\n    this.updateFumes(ctx);\r\n  }\r\n\r\n  updateFumes(ctx) {\r\n    let angSize = Math.PI / 5;\r\n    let dist = 10;\r\n\r\n    let leftAngle = this.angle + angSize;\r\n    let leftX = this.location.x + -1 * dist * Math.cos(leftAngle);\r\n    let leftY = this.location.y + -1 * dist * Math.sin(leftAngle);\r\n    this.leftFumes.setLocation(leftX, leftY, leftAngle);\r\n\r\n    let rightAngle = this.angle - angSize;\r\n    let rightX = this.location.x + -1 * dist * Math.cos(rightAngle);\r\n    let rightY = this.location.y + -1 * dist * Math.sin(rightAngle);\r\n    this.rightFumes.setLocation(rightX, rightY, rightAngle);\r\n  }\r\n\r\n  getColor() {\r\n    if (this.agentType === AGENT_TYPE.SCREEN) {\r\n      // return `rgba(57, 65, 86, 1)`;\r\n      return `rgba(210, 210, 210, 1)`;\r\n    } else {\r\n      return `rgba(255, 255, 255, 1)`;\r\n    }\r\n  }\r\n\r\n  display(ctx, mouseObj) {\r\n    ctx.save();\r\n    ctx.translate(this.location.x, this.location.y);\r\n    ctx.rotate(this.angle);\r\n\r\n    // triangle\r\n    ctx.save();\r\n    ctx.fillStyle = this.getColor();\r\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n    ctx.beginPath();\r\n    ctx.moveTo(30, 0);\r\n    ctx.lineTo(-5, -15);\r\n    ctx.lineTo(-5, 15);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    let { mouseX, mouseY } = mouseObj;\r\n    let dX = this.location.x - mouseX;\r\n    let dY = this.location.y - mouseY;\r\n    let eyeAngle = Math.atan2(dY, dX) - this.angle + Math.PI / 2;\r\n    let pupil = 2;\r\n    // console.log((this.angle * 180) / Math.PI, (eyeAngle * 180) / Math.PI);\r\n\r\n    let eyeStyle = `rgba(255, 255, 255, 1)`;\r\n    let pupilStyle = `rgba(0, 0, 0, 1)`;\r\n\r\n    // left eyes\r\n    ctx.save();\r\n    ctx.translate(12, -7);\r\n    ctx.rotate(eyeAngle);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, 5, 0, Math.PI * 2);\r\n    ctx.fillStyle = eyeStyle;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(0, pupil, 2, 0, Math.PI * 2);\r\n    ctx.fillStyle = pupilStyle;\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n    // right eyes\r\n    ctx.save();\r\n    ctx.translate(12, 7);\r\n    ctx.rotate(eyeAngle);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, 5, 0, Math.PI * 2);\r\n    ctx.fillStyle = eyeStyle;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(0, pupil, 2, 0, Math.PI * 2);\r\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n    // exhaust\r\n    if (this.isAccelerated) {\r\n      ctx.fillStyle = `rgba(200, 0, 0, 1)`;\r\n    } else {\r\n      ctx.fillStyle = `rgba(255, 255, 255, 1)`;\r\n    }\r\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, 2, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(-6, -6, 3, -Math.PI / 2, Math.PI / 2, true);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(-6, 6, 3, -Math.PI / 2, Math.PI / 2, true);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n\r\n    if (this.isAccelerated) {\r\n      this.leftFumes.addParticle();\r\n      this.rightFumes.addParticle();\r\n    }\r\n    this.leftFumes.run(ctx);\r\n    this.rightFumes.run(ctx);\r\n  }\r\n\r\n  checkEdges(ctx) {\r\n    let canvasWidth = ctx.canvas.width;\r\n    let canvasHeight = ctx.canvas.height;\r\n    let x = this.location.x;\r\n    let y = this.location.y;\r\n\r\n    if (x < 0) {\r\n      this.location.x = canvasWidth;\r\n    } else if (x > canvasWidth) {\r\n      this.location.x = 0;\r\n    }\r\n\r\n    if (y < 0) {\r\n      this.location.y = canvasHeight;\r\n    } else if (y > canvasHeight) {\r\n      this.location.y = 0;\r\n    }\r\n  }\r\n}\r\n","import Agent, { AGENT_TYPE } from \"./Asteroid\";\r\n\r\nclass Setting {\r\n  constructor(props = {}) {\r\n    this.agentType = AGENT_TYPE.WANDERER;\r\n    this.groupSize = 10;\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    // console.log(\"Generation Setting\", props);\r\n    this.gridSize = 100;\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n    this.gridRowCnt = Math.ceil(this.cvsHeight / this.gridSize);\r\n    this.gridColCnt = Math.ceil(this.cvsWidth / this.gridSize);\r\n  }\r\n}\r\n\r\nexport default class Generation {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n    this.agents = [];\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      let agent = new Agent({ setting: this.setting });\r\n      this.agents.push(agent);\r\n    }\r\n    this.makeGrid();\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n  }\r\n\r\n  makeGrid() {\r\n    let { gridRowCnt, gridColCnt } = this.setting;\r\n    this.grid = [];\r\n    for (let i = 0; i < gridRowCnt; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < gridColCnt; j++) {\r\n        row.push([]);\r\n      }\r\n      this.grid.push(row);\r\n    }\r\n  }\r\n\r\n  getGridRowByY(y) {\r\n    let row = Math.floor(y / this.setting.gridSize);\r\n    return Math.max(0, Math.min(row, this.setting.gridRowCnt - 1));\r\n  }\r\n\r\n  getGridColByX(x) {\r\n    let col = Math.floor(x / this.setting.gridSize);\r\n    return Math.max(0, Math.min(col, this.setting.gridColCnt - 1));\r\n  }\r\n\r\n  run(ctx, frameCnt, mouseObj) {\r\n    this.makeGrid();\r\n    // set grid\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      let agent = this.agents[i];\r\n      let row = this.getGridRowByY(agent.location.y);\r\n      let col = this.getGridColByX(agent.location.x);\r\n      agent.setGridLocal(row, col);\r\n      this.grid[row][col].push(agent);\r\n    }\r\n\r\n    for (let i = 0; i < this.setting.groupSize; i++) {\r\n      let agent = this.agents[i];\r\n      let { row, col } = agent.gridLocal;\r\n      let subAgents = this.grid[row][col];\r\n\r\n      agent.flock(subAgents, mouseObj);\r\n      agent.update(ctx);\r\n      agent.display(ctx, mouseObj);\r\n    }\r\n  }\r\n}\r\n","import Agent, { AGENT_TYPE } from \"./Asteroid\";\r\nimport Vector2D from \"../Tool/Vector2D\";\r\n\r\nimport { getScreenRect } from \"../Constant\";\r\n\r\nclass Setting {\r\n  constructor(props = {}) {\r\n    this.agentType = AGENT_TYPE.SCREEN;\r\n    this.arrivedLimit = 0.01;\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    // console.log(\"Screen Group Setting\", props);\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n    this.currentPage = props.currentPage;\r\n\r\n    let rect = getScreenRect(this.cvsWidth, this.cvsHeight, this.currentPage);\r\n    this.scrW = rect.width;\r\n    this.scrH = rect.height;\r\n    this.scrL = rect.left;\r\n    this.scrT = rect.top;\r\n\r\n    this.onLocal = {\r\n      TL: new Vector2D(this.scrL, this.scrT),\r\n      TR: new Vector2D(this.scrL, this.scrT + this.scrH),\r\n      BL: new Vector2D(this.scrL + this.scrW, this.scrT),\r\n      BR: new Vector2D(this.scrL + this.scrW, this.scrT + this.scrH),\r\n    };\r\n    this.offLocal = {\r\n      TL: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\r\n      TR: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\r\n      BL: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\r\n      BR: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\r\n    };\r\n  }\r\n}\r\n\r\nexport default class ScreenGroup {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n    this.createAgents();\r\n    this.isSpread = false;\r\n    this.isMoving = false;\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n  }\r\n\r\n  createAgents() {\r\n    this.agentMap = {};\r\n    this.agentMap[\"TL\"] = new Agent({ setting: this.setting });\r\n    this.agentMap[\"TR\"] = new Agent({ setting: this.setting });\r\n    this.agentMap[\"BL\"] = new Agent({ setting: this.setting });\r\n    this.agentMap[\"BR\"] = new Agent({ setting: this.setting });\r\n  }\r\n\r\n  getTargetByLocal(local) {\r\n    if (this.isSpread) {\r\n      return this.setting.onLocal[local];\r\n    } else {\r\n      return this.setting.offLocal[local];\r\n    }\r\n  }\r\n\r\n  spread() {\r\n    this.isSpread = true;\r\n    this.isMoving = true;\r\n  }\r\n\r\n  fold() {\r\n    this.isSpread = false;\r\n    this.isMoving = true;\r\n  }\r\n\r\n  run(ctx, frameCnt, mouseObj) {\r\n    ctx.save();\r\n    // check for isMoving\r\n    if (this.isSpread) {\r\n      let agentTL = this.agentMap[\"TL\"];\r\n      let agentTR = this.agentMap[\"TR\"];\r\n      let agentBL = this.agentMap[\"BL\"];\r\n      let agentBR = this.agentMap[\"BR\"];\r\n      ctx.fillStyle = `rgba(255, 255, 255, 1)`;\r\n      ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n      ctx.beginPath();\r\n      ctx.moveTo(agentTL.location.x, agentTL.location.y);\r\n      ctx.lineTo(agentTR.location.x, agentTR.location.y);\r\n      ctx.lineTo(agentBR.location.x, agentBR.location.y);\r\n      ctx.lineTo(agentBL.location.x, agentBL.location.y);\r\n      ctx.closePath();\r\n      // ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n\r\n    ctx.save();\r\n    let isMoving = false;\r\n    for (let local in this.agentMap) {\r\n      let agent = this.agentMap[local];\r\n      let target = this.getTargetByLocal(local);\r\n      let distSq = Vector2D.sub(agent.location, target).getMagSq();\r\n      if (distSq > this.setting.arrivedLimit) {\r\n        // console.log(\"Screen is moving..\");\r\n        isMoving = true;\r\n      }\r\n      let force = agent.seek(target);\r\n      agent.applyForce(force);\r\n      agent.update(ctx);\r\n      agent.display(ctx, mouseObj);\r\n    }\r\n    this.isMoving = isMoving;\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Vector2D from \"../Tool/Vector2D\";\r\nimport { PAGES } from \"../Constant\";\r\n\r\nconst NAV_STATUS = {\r\n  UNFOLDED: \"NAV_UNFOLDED\",\r\n  FOLDED: \"NAV_FOLDED\",\r\n  BACK: \"NAV_BACK\",\r\n\r\n  SHRINK: \"NAV_SHRINK\",\r\n  EXPAND: \"NAV_EXPAND\",\r\n};\r\n\r\nclass Setting {\r\n  constructor(props = {}) {\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n\r\n    this.center = new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2);\r\n    this.updateSize(props);\r\n  }\r\n\r\n  updateSize(props) {\r\n    this.cvsWidth = props.cvsWidth;\r\n    this.cvsHeight = props.cvsHeight;\r\n\r\n    this.center.x = this.cvsWidth / 2;\r\n    this.center.y = this.cvsHeight / 2;\r\n\r\n    // todo: update radius by screen size\r\n    this.radiusLimit = 100;\r\n    this.sateRadiusLimit = 25;\r\n  }\r\n}\r\n\r\nexport default class SatelliteGroup {\r\n  constructor(props) {\r\n    this.setting = new Setting(props);\r\n\r\n    this.sates = [PAGES.WIZLAB, PAGES.MIDAS, PAGES.BIRD, PAGES.XOR];\r\n\r\n    this.satesLength = this.sates.length; // temp\r\n    this.sateAngleDist = (Math.PI * 2) / this.satesLength;\r\n\r\n    this.radius = this.setting.radiusLimit;\r\n    this.sateRadius = this.setting.sateRadiusLimit;\r\n\r\n    this.angle = 0;\r\n    this.angleStep = 0.005;\r\n    this.radiusShrinkSpeed = 3;\r\n    this.sateRadiusShrinkSpeed = 1;\r\n\r\n    this.status = NAV_STATUS.UNFOLDED;\r\n\r\n    this.setPage = props.setPage;\r\n  }\r\n\r\n  resize(props) {\r\n    this.setting.updateSize(props);\r\n  }\r\n\r\n  run(ctx, frameCnt, mouseObj) {\r\n    this.update(ctx, frameCnt, mouseObj);\r\n    this.display(ctx, frameCnt, mouseObj);\r\n  }\r\n\r\n  setStatus(status) {\r\n    this.status = status;\r\n  }\r\n\r\n  expand() {\r\n    this.setStatus(NAV_STATUS.EXPAND);\r\n  }\r\n\r\n  checkClick(mouseObj) {\r\n    // 만약 클릭이 되었을 때, 모두 펼쳐져 있을 때만\r\n    if (this.status === NAV_STATUS.UNFOLDED && mouseObj.clicked) {\r\n      let { mouseX, mouseY } = mouseObj;\r\n      for (let i = 0; i < this.satesLength; i++) {\r\n        let page = this.sates[i];\r\n        if (!page) continue;\r\n        // polar to cartasian\r\n        let sateAngle = this.angle + i * this.sateAngleDist;\r\n        let r = this.radius;\r\n        let dx = r * Math.cos(sateAngle);\r\n        let dy = r * Math.sin(sateAngle);\r\n        let center = this.setting.center;\r\n        let x = center.x + dx;\r\n        let y = center.y + dy;\r\n        // calculate distance\r\n        let sateRadius = this.sateRadius;\r\n        let distSq = (x - mouseX) ** 2 + (y - mouseY) ** 2;\r\n        if (distSq < sateRadius * sateRadius) {\r\n          // console.log(\"clicked\", page);\r\n          return page;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  update(ctx, frameCnt, mouseObj) {\r\n    if (this.status === NAV_STATUS.UNFOLDED) {\r\n      let page = this.checkClick(mouseObj);\r\n      if (page) {\r\n        this.selected = page;\r\n        this.setStatus(NAV_STATUS.SHRINK);\r\n      }\r\n\r\n      this.angle += this.angleStep;\r\n      this.angle = this.angle % (Math.PI * 2);\r\n\r\n      if (this.radius < this.setting.radiusLimit) {\r\n        this.radius++;\r\n      } else if (this.radius > this.setting.radiusLimit) {\r\n        this.radius--;\r\n      }\r\n\r\n      if (this.sateRadius < this.setting.sateRadiusLimit) {\r\n        this.sateRadius++;\r\n      } else if (this.sateRadius > this.setting.sateRadiusLimit) {\r\n        this.sateRadius--;\r\n      }\r\n    } else if (this.status === NAV_STATUS.SHRINK) {\r\n      this.radius -= this.radiusShrinkSpeed;\r\n      this.sateRadius -= this.sateRadiusShrinkSpeed;\r\n      this.angle += this.angleStep * 20;\r\n      this.angle = this.angle % (Math.PI * 2);\r\n\r\n      let sateCheck = this.sateRadius <= 0;\r\n      let radiusCheck = this.radius <= 0;\r\n\r\n      if (sateCheck) this.sateRadius = 0;\r\n      if (radiusCheck) this.radius = 0;\r\n      if (sateCheck && radiusCheck) {\r\n        this.setStatus(NAV_STATUS.FOLDED);\r\n        this.setPage(this.selected);\r\n      }\r\n    } else if (this.status === NAV_STATUS.EXPAND) {\r\n      this.radius += this.radiusShrinkSpeed;\r\n      this.sateRadius += this.sateRadiusShrinkSpeed;\r\n      this.angle -= this.angleStep * 20;\r\n      this.angle = this.angle % (Math.PI * 2);\r\n\r\n      let sateCheck = this.sateRadius >= this.setting.sateRadiusLimit;\r\n      let radiusCheck = this.radius >= this.setting.radiusLimit;\r\n\r\n      if (sateCheck) this.sateRadius = this.setting.sateRadiusLimit;\r\n      if (radiusCheck) this.radius = this.setting.radiusLimit;\r\n      if (sateCheck && radiusCheck) {\r\n        this.setStatus(NAV_STATUS.UNFOLDED);\r\n      }\r\n    }\r\n  }\r\n\r\n  display(ctx, frameCnt, mouseObj) {\r\n    ctx.save();\r\n    let center = this.setting.center;\r\n    let radius = this.radius;\r\n    let sateRadius = this.sateRadius;\r\n    ctx.translate(center.x, center.y);\r\n    ctx.beginPath();\r\n    // ctx.arc(0, 0, 1, 0, Math.PI * 2);\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = `rgba(255, 255, 255, 1)`;\r\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\r\n\r\n    for (let i = 0; i < this.satesLength; i++) {\r\n      let page = this.sates[i];\r\n      ctx.save();\r\n      ctx.rotate(this.angle + i * this.sateAngleDist);\r\n      ctx.translate(radius, 0);\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, sateRadius, 0, Math.PI * 2);\r\n      ctx.fillStyle = this.getColorByPage(page);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  getColorByPage(page) {\r\n    switch (page) {\r\n      case PAGES.WIZLAB:\r\n        return \"#23d8af\";\r\n      case PAGES.MIDAS:\r\n        return \"#23395d\";\r\n      case PAGES.BIRD:\r\n        return \"rgba(100, 100, 100, 1)\";\r\n      default:\r\n        return `rgba(255, 255, 255, 1)`;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../Component/Canvas\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport BirdGroup from \"./FlappyBird/BirdGroup\";\r\nimport PipeGroup from \"./FlappyBird/PipeGroup\";\r\n\r\nimport XORGroup from \"./NEAT/Generation\";\r\n\r\nimport Generation from \"./Generation\";\r\nimport ScreenGroup from \"./ScreenGroup\";\r\nimport SatelliteGroup from \"./SatelliteGroup\";\r\nimport { PAGES } from \"../Constant\";\r\n\r\nexport default class Field extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resizeEventHandler);\r\n    this.resizeEventHandler();\r\n\r\n    this.generation = new Generation({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n    });\r\n    this.sateGroup = new SatelliteGroup({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n      setPage: this.props.setPage,\r\n    });\r\n    this.screenGroup = new ScreenGroup({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n      currentPage: this.props.currentPage,\r\n    });\r\n\r\n    let tfBackend = \"cpu\";\r\n    await tf.setBackend(tfBackend);\r\n    // console.log(\"Tensorflow backend is\", tfBackend);\r\n\r\n    this.birdBoardWidthRatio = 1;\r\n    this.birdGroup = new BirdGroup({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n      boardWidthRadio: this.birdBoardWidthRatio,\r\n    });\r\n    this.pipeGroup = new PipeGroup({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n      boardWidthRadio: this.birdBoardWidthRatio,\r\n    });\r\n\r\n    this.xorGroup = new XORGroup({\r\n      cvsWidth: this.stageWidth,\r\n      cvsHeight: this.stageHeight,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isScreenOn !== this.props.isScreenOn) {\r\n      if (this.props.isScreenOn) {\r\n        // console.log(\"spread the screen\");\r\n        this.screenGroup.resize({\r\n          cvsWidth: this.stageWidth,\r\n          cvsHeight: this.stageHeight,\r\n          currentPage: this.props.currentPage,\r\n        });\r\n        this.screenGroup.spread();\r\n      } else {\r\n        // console.log(\"fold the screen\");\r\n        this.screenGroup.fold();\r\n      }\r\n    }\r\n\r\n    if (prevProps.currentPage !== this.props.currentPage) {\r\n      if (this.props.currentPage === PAGES.MAIN) {\r\n        this.sateGroup.expand();\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeEventHandler = (event) => {\r\n    // console.log(\"index, resizeEventHandler\");\r\n    // console.log(window.innerWidth, window.innerHeight);\r\n\r\n    this.stageWidth = window.innerWidth || document.body.clientWidth;\r\n    this.stageHeight = window.innerHeight || document.body.clientHeight;\r\n\r\n    if (this.generation !== undefined) {\r\n      this.generation.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n      });\r\n    }\r\n    if (this.screenGroup !== undefined) {\r\n      this.screenGroup.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n        currentPage: this.props.currentPage,\r\n      });\r\n    }\r\n    if (this.sateGroup !== undefined) {\r\n      this.sateGroup.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n      });\r\n    }\r\n    if (this.birdGroup !== undefined) {\r\n      this.birdGroup.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n        boardWidthRadio: this.birdBoardWidthRatio,\r\n      });\r\n    }\r\n    if (this.pipeGroup !== undefined) {\r\n      this.pipeGroup.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n        boardWidthRadio: this.birdBoardWidthRatio,\r\n      });\r\n    }\r\n    if (this.xorGroup !== undefined) {\r\n      this.xorGroup.resize({\r\n        cvsWidth: this.stageWidth,\r\n        cvsHeight: this.stageHeight,\r\n      });\r\n    }\r\n  };\r\n\r\n  draw = (ctx, frameCnt, mouseObj) => {\r\n    let cvsWidth = ctx.canvas.width;\r\n    let cvsHeight = ctx.canvas.height;\r\n    let { currentPage, isScreenOn, isArticleOn } = this.props;\r\n\r\n    // check initiation\r\n    if (this.generation === undefined) return;\r\n    if (this.screenGroup === undefined) return;\r\n    if (this.sateGroup === undefined) return;\r\n\r\n    ctx.save();\r\n    // clear screen\r\n    ctx.clearRect(0, 0, cvsWidth, cvsHeight);\r\n\r\n    // draw background\r\n    ctx.fillStyle = `rgba(255, 255, 255, 1)`;\r\n    ctx.fillRect(0, 0, cvsWidth, cvsHeight);\r\n\r\n    // draw generation\r\n    // this.generation.run(ctx, frameCnt, mouseObj);\r\n\r\n    // draw navigation\r\n    if (currentPage === PAGES.MAIN) {\r\n      this.sateGroup.run(ctx, frameCnt, mouseObj);\r\n    }\r\n\r\n    // draw flappy bird\r\n    if (currentPage === PAGES.BIRD && isArticleOn) {\r\n      this.drawFlappyBird(ctx, frameCnt, mouseObj);\r\n    }\r\n\r\n    // draw xor\r\n    if (currentPage === PAGES.XOR && isArticleOn) {\r\n      this.drawXOR(ctx, frameCnt, mouseObj);\r\n    }\r\n\r\n    // draw screen\r\n    this.screenGroup.run(ctx, frameCnt, mouseObj);\r\n    if (isScreenOn && !isArticleOn && !this.screenGroup.isMoving) {\r\n      this.props.toggleArticle(true);\r\n    } else if (!isScreenOn && isArticleOn) {\r\n      this.props.toggleArticle(false);\r\n    }\r\n\r\n    ctx.restore();\r\n  };\r\n\r\n  drawFlappyBird = (ctx, frameCnt, mouseObj) => {\r\n    if (this.birdGroup === undefined) return;\r\n    if (this.pipeGroup === undefined) return;\r\n\r\n    ctx.save();\r\n\r\n    if (this.birdGroup.survivors.length <= 0) {\r\n      // console.log(\r\n      //   `GENERATION # ${this.birdGroup.generationNum}, maxDistance: ${this.distance}`\r\n      // );\r\n      this.pipeGroup.restart();\r\n      this.birdGroup.evolveNextGeneration();\r\n\r\n      // check memory loss\r\n      // let memo = tf.memory();\r\n      // console.log(\r\n      //   `numTensors:${memo.numTensors}, numBytes:${memo.numBytes}, numDataBuffers:${memo.numDataBuffers}`\r\n      // );\r\n    }\r\n\r\n    // pipeGroup\r\n    this.pipeGroup.run(ctx);\r\n    // birdGroup\r\n    this.birdGroup.run(ctx, this.pipeGroup);\r\n    this.birdGroup.drawDashboard(ctx);\r\n\r\n    ctx.restore();\r\n  };\r\n\r\n  drawXOR = (ctx, frameCnt, mouseObj) => {\r\n    if (this.xorGroup === undefined) return;\r\n\r\n    ctx.save();\r\n    this.xorGroup.run(ctx, frameCnt);\r\n    if (frameCnt % 5 === 0) {\r\n      if (\r\n        this.xorGroup.setting.getGenerationNum() <\r\n        this.xorGroup.setting.generationLimit\r\n      ) {\r\n        this.xorGroup.nextGeneration();\r\n      }\r\n    }\r\n    ctx.restore();\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"Field\", this.props);\r\n\r\n    return <Canvas draw={this.draw} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport SectionTransition from \"./SectionTransition.module.css\";\r\nimport SlowTransition from \"./SlowTransition.module.css\";\r\nimport QuoteTransition from \"./QuoteTransition.module.css\";\r\n\r\n// https://stackoverflow.com/questions/62187461/using-react-finddomnode-is-deprecated-in-strictmode-is-thrown-as-a-warning-when\r\n\r\nexport const CSSTransitionWrapper = ({\r\n  children,\r\n  wrapClassName,\r\n  classNames,\r\n  timeout,\r\n  ...props\r\n}) => {\r\n  const nodeRef = React.useRef(null);\r\n\r\n  if (timeout === undefined) {\r\n    timeout = {\r\n      enter: 700,\r\n      exit: 300,\r\n    };\r\n  }\r\n  if (classNames === undefined) {\r\n    classNames = SectionTransition;\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      nodeRef={nodeRef}\r\n      timeout={timeout}\r\n      classNames={SectionTransition}\r\n      {...props}\r\n    >\r\n      <div ref={nodeRef} className={wrapClassName}>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport const SlowCSSTransitionWrapper = (props) => {\r\n  return (\r\n    <CSSTransitionWrapper\r\n      timeout={{ enter: 1000, exit: 1000 }}\r\n      classNames={SlowTransition}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport const QuoteCSSTransitionWrapper = (props) => {\r\n  return (\r\n    <CSSTransitionWrapper\r\n      timeout={{ enter: 5000, exit: 1000 }}\r\n      classNames={QuoteTransition}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { PAGES } from \"../../Constant\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport { CSSTransitionWrapper, SlowCSSTransitionWrapper } from \"../Transition\";\r\n\r\nimport styles from \"./index.module.css\";\r\n// import classNames from \"classnames/bind\";\r\n// const cx = classNames.bind(styles);\r\n\r\nexport default class Navigation extends Component {\r\n  state = {\r\n    sectionIndex: 0,\r\n    isBackBtnOn: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.currentPage !== this.props.currentPage) {\r\n      if (this.props.currentPage !== PAGES.MAIN) {\r\n        this.subtractSectionIndex();\r\n      }\r\n    }\r\n  }\r\n\r\n  addSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  showBackBtn = () => {\r\n    this.setState({\r\n      isBackBtnOn: true,\r\n    });\r\n  };\r\n\r\n  handleBackBtn = () => {\r\n    this.props.setPage(PAGES.MAIN);\r\n    this.setState((state) => ({\r\n      isBackBtnOn: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex, isBackBtnOn } = this.state;\r\n\r\n    return (\r\n      <nav className={styles.body}>\r\n        <TransitionGroup component={null}>\r\n          {sectionIndex >= 0 && (\r\n            <SlowCSSTransitionWrapper\r\n              key={0}\r\n              appear={true}\r\n              onEntered={this.addSectionIndex}\r\n              onExited={this.showBackBtn}\r\n              wrapClassName={styles.secText}\r\n            >\r\n              <p className={styles.greeting}>안녕하세요!</p>\r\n            </SlowCSSTransitionWrapper>\r\n          )}\r\n          {sectionIndex >= 1 && (\r\n            <CSSTransitionWrapper\r\n              key={1}\r\n              appear={true}\r\n              // onEntered={this.addSectionIndex}\r\n              onExited={this.subtractSectionIndex}\r\n              wrapClassName={styles.secText}\r\n            >\r\n              <p className={styles.guide}>아래 위성 중 하나를 선택해주세요.</p>\r\n            </CSSTransitionWrapper>\r\n          )}\r\n          {isBackBtnOn && (\r\n            <SlowCSSTransitionWrapper\r\n              key={2}\r\n              appear={true}\r\n              onExited={this.addSectionIndex}\r\n              wrapClassName={styles.secText}\r\n            >\r\n              <div className={styles.btn} onClick={this.handleBackBtn}></div>\r\n            </SlowCSSTransitionWrapper>\r\n          )}\r\n        </TransitionGroup>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\r\n\r\nexport default class Quiz extends Component {\r\n  state = {\r\n    sectionIndex: 0,\r\n  };\r\n\r\n  addSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex } = this.state;\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={styles.inner}>\r\n          <TransitionGroup component={null}>\r\n            {sectionIndex >= 0 && (\r\n              <CSSTransitionWrapper\r\n                key={0}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={() => {}}\r\n                wrapClassName={styles.secTitle}\r\n              >\r\n                <h2 className={styles.title}>QUIZ</h2>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n\r\n            {sectionIndex >= 1 && (\r\n              <CSSTransitionWrapper\r\n                key={1}\r\n                appear={true}\r\n                // onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>준비중!</p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  CSSTransitionWrapper,\r\n  QuoteCSSTransitionWrapper,\r\n} from \"../../Component/Transition\";\r\n\r\nexport default class Bird extends Component {\r\n  state = {\r\n    sectionIndex: 0,\r\n  };\r\n\r\n  sentences = [\r\n    // `저는 자바스크립트를 무척 좋아합니다!`,\r\n    // `저는 상상을 구현하는 사람이 되고 싶습니다!`,\r\n    `이 화면은 간단한 NEAT 알고리즘과\\ntensorflow.js을 활용해 구현되었습니다.`,\r\n    // `Fly with the eagles not the sparrows.`,\r\n    `길은 스스로 찾아야 한다\\n스스로 걸어야 한다\\n모르는 곳으로\\n먼 길이다\\n\\n- 울라브 하우게 -`,\r\n    `어딘가에서 누군가가\\n너를 향해 전속력으로 달려오고 있다\\n믿을 수 없는 속도로\\n낮과 밤을 여행해\\n눈보라와 사막의 열기를 뚫고\\n급류를 건너고\\n좁은 길들을 지나\\n\\n- 존 애쉬베리 -`,\r\n    `가장 훌륭한 시는 아직 씌여지지 않았다\\n가장 아름다운 노래는 아직 불려지지 않았다\\n최고의 날들은 아직 살지 않은 날들\\n...\\n어느 길로 가야 할지 더 이상 알 수 없을 때\\n그때가 비로소 진정한 여행의 시작이다\\n\\n- 나짐 히크메트 -`,\r\n    `넒은 원을 그리며 나는 살아가네\\n그 원은 세상 속에서 점점 넓어져 가네\\n나는 아마도 마지막 원을 완성하지 못할 것이지만\\n그 일에 내 온 존재를 바친다네\\n\\n- 라이너 마리아 릴케 -`,\r\n    `해답은 없다\\n앞으로도 해답은 없을 것이고\\n지금까지도 해답이 없었다\\n이것이 인생의 유일한 해답이다\\n\\n- 거투르드 스타인 -`,\r\n    `당신이 하는 일이 문제가 아니다\\n당신이 하지 않고 남겨 두는 일이 문제다\\n해 질 무렵\\n당신의 마음을 아프게 하는 일이 그것이다\\n잊어버린 부드러운 말\\n쓰지 않은 편지\\n보내지 않은 꽃\\n밤에 당신을 따라다니는 환영들이 그것이다\\n\\n- 마거릿 생스터 -`,\r\n    `철새 떼가, 남쪽에서\\n날아오며\\n도나우강을 건널 때면, 나는 기다린다\\n뒤처진 새를\\n그게 어떤 건지, 내가 안다\\n남들과 발맞출 수 없다는 것\\n어릴 적부터 내가 안다\\n뒤처진 새가 머리 위로 날아 떠나면\\n나는 그에게 내 힘을 보낸다\\n\\n- 라이너 쿤체 -`,\r\n    `당신의 나이는 당신이 아니다\\n당신이 입는 옷의 크기도\\n몸무게와\\n머리 색깔도 당신이 아니다\\n\\n당신은 아침의 잠긴 목소리이고\\n당신이 미처 감추지 못한 미소이다\\n당신은 당신의 웃음 속 사랑스러움이고\\n당신이 흘린 모든 눈물이다\\n\\n- 에린 핸슨 -`,\r\n    `모든 것은 지나간다\\n일출의 장엄함이 아침 내내 계속되진 않으며\\n비가 영원히 내리지도 않는다\\n\\n당신이 살아 있는 동안\\n당신에게 일어나는 일들을 받아들이라\\n모든 것은 지나가 버린다\\n\\n- 세실 프란시스 알렉산더 -`,\r\n    `자기 인생의 의미를 볼 수 없다면\\n지금 여기, 이 순간, 삶의 현재 위치로 오기까지\\n많은 빗나간 길들을 걸어 왔음을 알아야 한다\\n그리고 오랜 세월 동안\\n자신의 영혼이 절벽을 올라왔음도 알아야 한다\\n그 상처, 그 방황, 그 두려움을\\n그 삶의 불모지를 잊지 말아야 한다\\n\\n- 마르타 스목 -`,\r\n    `아무리 어둔 길이라도\\n나 이전에\\n누군가는 이 길을 지나갔을 것이고,\\n아무리 가파른 길이라도\\n나 이전에\\n누군가는 이 길을 통과했을 것이다\\n아무도 걸어가 본 적이 없는\\n그런 길은 없다\\n\\n- 베드로시안 -`,\r\n    `함께 있되 거리를 두라\\n그래서 하늘 바람이 너희 사이에서 춤추게 하라\\n\\n- 칼릴 지브란 -`,\r\n  ];\r\n\r\n  addSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex } = this.state;\r\n    let sentenceIndex = Math.floor(Math.random() * this.sentences.length);\r\n    let sentence = this.sentences[sentenceIndex];\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={styles.inner}>\r\n          <TransitionGroup component={null}>\r\n            {sectionIndex >= 0 && (\r\n              <CSSTransitionWrapper\r\n                key={0}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={() => {}}\r\n                wrapClassName={styles.secTitle}\r\n              >\r\n                <h2 className={styles.title}>\r\n                  A JOURNEY TO<br></br> JAVASCRIPT\r\n                </h2>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 1 && (\r\n              <QuoteCSSTransitionWrapper\r\n                key={1}\r\n                appear={true}\r\n                onEntered={this.subtractSectionIndex}\r\n                onExited={this.addSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.sentence}>{sentence} </p>\r\n              </QuoteCSSTransitionWrapper>\r\n            )}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/johnny_jobs.f829efae.jpg\";","import React, { Component } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\r\n\r\nimport JobsImage from \"../../Asset/Image/johnny_jobs.jpg\";\r\n\r\nexport default class Midas extends Component {\r\n  state = {\r\n    sectionIndex: 0,\r\n  };\r\n\r\n  addSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex } = this.state;\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={styles.inner}>\r\n          <TransitionGroup component={null}>\r\n            {sectionIndex >= 0 && (\r\n              <CSSTransitionWrapper\r\n                key={0}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={() => {}}\r\n                wrapClassName={styles.secTitle}\r\n              >\r\n                <h2 className={styles.title}>PSYCHOMETRIC</h2>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 1 && (\r\n              <CSSTransitionWrapper\r\n                key={1}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <img className={styles.image} src={JobsImage} alt=\"jobs\" />\r\n                <p className={styles.imageGuide}>\r\n                  (주의! 당신의 눈은 소중합니다!)\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 2 && (\r\n              <CSSTransitionWrapper\r\n                key={2}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  저는 2019년 8월부터 현재까지\r\n                  <br />\r\n                  판교의 마이다스아이티라는 회사에서\r\n                  <br />\r\n                  <b>'AI역량검사'</b>를 기획/개발하고 있습니다.\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 3 && (\r\n              <CSSTransitionWrapper\r\n                key={3}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  AI역량검사는 <b>뇌신경과학 기반으로</b>\r\n                  <br />\r\n                  <b>개인의 역량을 측정하는 인재선발도구</b> 입니다.\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 4 && (\r\n              <CSSTransitionWrapper\r\n                key={4}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  새로운 측정 도구를 기획하고 개발하는 일은\r\n                  <br />\r\n                  무척 도전적이고 흥미로운 과제입니다!\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 5 && (\r\n              <CSSTransitionWrapper\r\n                key={5}\r\n                appear={true}\r\n                // onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.btnGuide}>\r\n                  혹시 위 사진의 출처가 궁금하시다면\r\n                </p>\r\n                <a\r\n                  className={styles.playBtn}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={\"https://magazine.hankyung.com/job-joy/article/380291\"}\r\n                  // onClick={this.subtractSectionIndex}\r\n                >\r\n                  기사 보러 가기\r\n                </a>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/johnny_wizlab_demo.8019798a.mp4\";","import React, { Component } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\r\n\r\nimport wizlabVideo from \"../../Asset/Video/johnny_wizlab_demo.mp4\";\r\nimport classNames from \"classnames/bind\";\r\nconst cx = classNames.bind(styles);\r\n\r\nexport default class Wizlab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.videoRef = null;\r\n    this.setVideoRef = (element) => {\r\n      if (!element) return;\r\n      this.videoRef = element;\r\n      //   this.videoRef.addEventListener(\"ended\", this.handleVideoEnded);\r\n      //   this.videoRef.addEventListener(\"play\", this.handleVideoPlay);\r\n    };\r\n    this.state = {\r\n      sectionIndex: 0,\r\n      isVideoMuted: false,\r\n      isVideoZoom: true,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // this.videoRef.removeEventListener(\"ended\", this.handleVideoEnded);\r\n    // this.videoRef.removeEventListener(\"play\", this.handleVideoPlay);\r\n  }\r\n\r\n  addSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  toggleVideoZoom = () => {\r\n    this.setState((state) => ({\r\n      isVideoZoom: !state.isVideoZoom,\r\n    }));\r\n  };\r\n\r\n  toggleVideoMuted = () => {\r\n    this.setState((state) => ({\r\n      isVideoMuted: !state.isVideoMuted,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex, isVideoMuted, isVideoZoom } = this.state;\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={cx(\"inner\", { \"inner--blockScroll\": isVideoZoom })}>\r\n          <TransitionGroup component={null}>\r\n            {sectionIndex >= 0 && (\r\n              <CSSTransitionWrapper\r\n                key={0}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={() => {}}\r\n                wrapClassName={styles.secTitle}\r\n              >\r\n                <h2 className={styles.title}>DEVELOPER JOHNNY !</h2>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n\r\n            {sectionIndex >= 1 && (\r\n              <CSSTransitionWrapper\r\n                key={1}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={cx(\"secVideo\", {\r\n                  \"secVideo--zoom\": isVideoZoom,\r\n                })}\r\n              >\r\n                <video\r\n                  className={styles.video}\r\n                  ref={this.setVideoRef}\r\n                  controls\r\n                  playsInline\r\n                  autoPlay={true}\r\n                  muted={isVideoMuted}\r\n                  controlsList=\"nodownload\"\r\n                  onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    return false;\r\n                  }}\r\n                >\r\n                  <source src={wizlabVideo} />\r\n                </video>\r\n                {/* <div className={cx(\"btnRow\")}>\r\n                  <div\r\n                    className={cx(\"videoBtn\", {\r\n                      \"videoBtn--off\": isVideoZoom,\r\n                      \"videoBtn--on\": !isVideoZoom,\r\n                    })}\r\n                    onClick={this.toggleVideoZoom}\r\n                  >\r\n                    {isVideoZoom ? \"작게 보기\" : \"크게 보기\"}\r\n                  </div>\r\n                  <div\r\n                    className={cx(\"videoBtn\", {\r\n                      \"videoBtn--on\": isVideoMuted,\r\n                      \"videoBtn--off\": !isVideoMuted,\r\n                    })}\r\n                    onClick={this.toggleVideoMuted}\r\n                  >\r\n                    {isVideoMuted ? \"소리 켜기\" : \"소리 끄기\"}\r\n                  </div>\r\n                </div> */}\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 2 && (\r\n              <CSSTransitionWrapper\r\n                key={2}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  저는 2018년 6월부터 2019년 7월까지\r\n                  <br />\r\n                  <b>위즈스쿨</b>이라는 스타트업에서\r\n                  <br />\r\n                  프로그래밍 교육 플랫폼을 기획/개발했습니다.\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 3 && (\r\n              <CSSTransitionWrapper\r\n                key={3}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  <b>누구든 쉽게 상상을 구현할 수 있는 공간</b>을\r\n                  <br />\r\n                  목표로 무척 몰입하여 작업했던 프로젝트입니다!\r\n                </p>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  CSSTransitionWrapper,\r\n  SlowCSSTransitionWrapper,\r\n  QuoteCSSTransitionWrapper,\r\n} from \"../../Component/Transition\";\r\n\r\nexport default class XOR extends Component {\r\n  state = {\r\n    sectionIndex: 0,\r\n    sentenceIndex: -1,\r\n  };\r\n\r\n  sentences = [\r\n    `화면 속 개체들은 세대를 거듭하며 XOR 문제를 풀고 있습니다.\\nStanley의 2002년 논문을 바탕으로 구현했습니다.`,\r\n    `단층 모형으로는 비선형 영역을 분리할 수 없으므로\\n개체들은 새로운 node를 더하는 방향으로 진화해야 합니다.`,\r\n    `각 개체 좌측 상단 첫 번째 줄은 종 번호,\\n두 번째 줄은 문제 풀이 점수입니다.\\n점수는 4점이 되어야 합니다.`,\r\n    `진화는 2,000세대까지 이루어집니다.\\n개체 수가 적어 넉넉하게 잡아보았습니다.`,\r\n    `후속 논문들을 학습하며 계속 개선 중입니다.\\n무척 즐겁게 작업하고 있습니다!`,\r\n    `몇 번째 세대부터\\n목표 점수가 등장하는지 확인해보세요!`,\r\n  ];\r\n\r\n  addSectionIndex = () => {\r\n    let { sectionIndex, sentenceIndex } = this.state;\r\n    if (sectionIndex >= 1 && sentenceIndex < this.sentences.length) {\r\n      this.setState({\r\n        sectionIndex: sectionIndex + 1,\r\n        sentenceIndex: sentenceIndex + 1,\r\n      });\r\n    } else {\r\n      this.setState({ sectionIndex: sectionIndex + 1 });\r\n    }\r\n  };\r\n  subtractSectionIndex = () => {\r\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\r\n  };\r\n\r\n  render() {\r\n    let { sectionIndex, sentenceIndex } = this.state;\r\n    let sentence = this.sentences[sentenceIndex];\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={styles.inner}>\r\n          <TransitionGroup component={null}>\r\n            {sectionIndex >= 0 && (\r\n              <CSSTransitionWrapper\r\n                key={0}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={() => {}}\r\n                wrapClassName={styles.secTitle}\r\n              >\r\n                <h2 className={styles.title}>XOR</h2>\r\n              </CSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 1 && (\r\n              <SlowCSSTransitionWrapper\r\n                key={1}\r\n                appear={true}\r\n                onEntered={this.addSectionIndex}\r\n                onExited={this.subtractSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>\r\n                  {`\"Neuroevolution of augmenting topologies\"`}\r\n                </p>\r\n              </SlowCSSTransitionWrapper>\r\n            )}\r\n            {sectionIndex >= 2 && !!sentence && (\r\n              <QuoteCSSTransitionWrapper\r\n                key={2}\r\n                appear={true}\r\n                onEntered={this.subtractSectionIndex}\r\n                onExited={this.addSectionIndex}\r\n                wrapClassName={styles.secDesc}\r\n              >\r\n                <p className={styles.desc}>{sentence}</p>\r\n              </QuoteCSSTransitionWrapper>\r\n            )}\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Field from \"./Field\";\r\nimport Navigation from \"./Component/Navigation\";\r\n\r\nimport ArticleQuiz from \"./Articles/Quiz\";\r\nimport ArticleBird from \"./Articles/Bird\";\r\nimport ArticleMidas from \"./Articles/Midas\";\r\nimport ArticleWizlab from \"./Articles/Wizlab\";\r\nimport ArticleXOR from \"./Articles/XOR\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nimport { PAGES, getScreenRect } from \"./Constant\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentPage: PAGES.MAIN,\r\n    isScreenOn: false,\r\n    isArticleOn: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resizeEventHandler);\r\n    this.resizeEventHandler();\r\n    // // DEBUG // //\r\n    // this.setPage(PAGES.XOR);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\r\n  }\r\n\r\n  resizeEventHandler = (event) => {\r\n    this.stageWidth = window.innerWidth || document.body.clientWidth;\r\n    this.stageHeight = window.innerHeight || document.body.clientHeight;\r\n    let rect = getScreenRect(\r\n      this.stageWidth,\r\n      this.stageHeight,\r\n      this.state.currentPage\r\n    );\r\n    // console.log(\"resize\", rect);\r\n    this.setState({\r\n      scrW: rect.width,\r\n      scrH: rect.height,\r\n    });\r\n  };\r\n\r\n  setPage = (currentPage) => {\r\n    // console.log(\"setPage\", currentPage);\r\n    if (\r\n      currentPage === PAGES.QUIZ ||\r\n      currentPage === PAGES.XOR ||\r\n      currentPage === PAGES.BIRD ||\r\n      currentPage === PAGES.MIDAS ||\r\n      currentPage === PAGES.WIZLAB\r\n    ) {\r\n      let rect = getScreenRect(this.stageWidth, this.stageHeight, currentPage);\r\n      this.setState({\r\n        currentPage,\r\n        isScreenOn: true,\r\n        scrW: rect.width,\r\n        scrH: rect.height,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentPage,\r\n        isScreenOn: false,\r\n        isArticleOn: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleArticle = (isArticleOn) => {\r\n    this.setState({\r\n      isArticleOn,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { currentPage, isScreenOn, isArticleOn, scrH, scrW } = this.state;\r\n\r\n    let Article;\r\n    if (currentPage === PAGES.QUIZ) Article = ArticleQuiz;\r\n    else if (currentPage === PAGES.XOR) Article = ArticleXOR;\r\n    else if (currentPage === PAGES.BIRD) Article = ArticleBird;\r\n    else if (currentPage === PAGES.MIDAS) Article = ArticleMidas;\r\n    else if (currentPage === PAGES.WIZLAB) Article = ArticleWizlab;\r\n\r\n    return (\r\n      <div className={styles.body}>\r\n        <div className={styles.NavContainer}>\r\n          <Navigation currentPage={currentPage} setPage={this.setPage} />\r\n        </div>\r\n        <div className={styles.FieldContainer}>\r\n          <Field\r\n            currentPage={currentPage}\r\n            isScreenOn={isScreenOn}\r\n            isArticleOn={isArticleOn}\r\n            setPage={this.setPage}\r\n            toggleArticle={this.toggleArticle}\r\n          />\r\n        </div>\r\n        {isArticleOn && (\r\n          <div\r\n            style={{ width: scrW, height: scrH }}\r\n            className={styles.ArticleContainer}\r\n          >\r\n            <Article />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Midas_body__2fvZK\",\"inner\":\"Midas_inner__d-4P6\",\"secTitle\":\"Midas_secTitle__CyAi0\",\"title\":\"Midas_title__1pO3B\",\"secDesc\":\"Midas_secDesc__2C594\",\"image\":\"Midas_image__17urX\",\"scaleUp\":\"Midas_scaleUp__PQ225\",\"imageGuide\":\"Midas_imageGuide__3hUr3\",\"desc\":\"Midas_desc__1lPU9\",\"btnGuide\":\"Midas_btnGuide__3hpKZ\",\"playBtn\":\"Midas_playBtn__35Dav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Wizlab_body__32a22\",\"inner\":\"Wizlab_inner__2GkXR\",\"inner--blockScroll\":\"Wizlab_inner--blockScroll__2OmnD\",\"secTitle\":\"Wizlab_secTitle__2mdLM\",\"title\":\"Wizlab_title__3ikyN\",\"secVideo\":\"Wizlab_secVideo__3Zm2V\",\"secVideo--zoom\":\"Wizlab_secVideo--zoom__3sE8_\",\"video\":\"Wizlab_video__rQoca\",\"secDesc\":\"Wizlab_secDesc__16CJ7\",\"desc\":\"Wizlab_desc__1hW4U\",\"btnRow\":\"Wizlab_btnRow__3ODY7\",\"videoBtn\":\"Wizlab_videoBtn__1x-pE\",\"videoBtn--on\":\"Wizlab_videoBtn--on__2a8BK\",\"videoBtn--off\":\"Wizlab_videoBtn--off__3MuEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"XOR_body__-Teax\",\"inner\":\"XOR_inner__ZQszn\",\"secTitle\":\"XOR_secTitle__1IXxy\",\"title\":\"XOR_title__2uWeP\",\"secDesc\":\"XOR_secDesc__2MHXR\",\"desc\":\"XOR_desc__1w9vu\"};"],"sourceRoot":""}