{"version":3,"sources":["Component/Navigation/index.module.css","Articles/Quiz/index.module.css","Articles/Bird/index.module.css","App.module.css","Component/Transition/SectionTransition.module.css","Component/Transition/SlowTransition.module.css","Component/Transition/QuoteTransition.module.css","Component/Canvas/index.js","Field/FlappyBird/Brain.js","Field/FlappyBird/Bird.js","Constant.js","Field/FlappyBird/BirdGroup.js","Field/FlappyBird/Pipe.js","Field/FlappyBird/PipeGroup.js","Field/NEAT/Gene.js","Field/NEAT/Activation.js","Field/NEAT/Genome.js","Field/NEAT/Agent.js","Field/NEAT/Species.js","Field/NEAT/Setting.js","Field/NEAT/Generation.js","Tool/Vector2D.js","Field/Particle.js","Field/Fumes.js","Field/Asteroid.js","Field/Generation.js","Field/ScreenGroup.js","Field/SatelliteGroup.js","Field/index.js","Component/Transition/index.js","Component/Navigation/index.js","Articles/Quiz/index.js","Articles/Bird/index.js","Asset/Image/johnny_jobs.jpg","Articles/Midas/index.js","Asset/Video/johnny_wizlab_demo.mp4","Articles/Wizlab/index.js","Articles/XOR/index.js","App.js","reportWebVitals.js","index.js","Articles/Midas/index.module.css","Articles/Wizlab/index.module.css","Articles/XOR/index.module.css"],"names":["module","exports","Canvas","props","resizeEventHandler","event","_cvs","width","window","innerWidth","document","body","clientWidth","height","innerHeight","clientHeight","mousemoveEventHandler","setMouseLocal","mouseObj","isMouseMoving","clickEventHandler","clicked","clickedFrame","_frameCnt","resetMouseObj","undefined","rect","getBoundingClientRect","scaleX","borderWidth","scaleY","mouseX","clientX","left","mouseY","clientY","top","isMouseOverCanvas","loop","draw","isLooped","_ctx","_frameId","requestAnimationFrame","canvasRef","React","createRef","this","current","getContext","addEventListener","cancelAnimationFrame","removeEventListener","ref","Component","Brain","model","tf","createModel","add","dense","inputShape","units","activation","input","xs","predict","dataSync","weights","getWeights","copied","forEach","w","push","clone","newBrain","setWeights","rate","mutated","map","weight","shape","array","slice","i","length","Math","random","randNum","arraySync","dispose","Bird","setting","y","x","right","updateTopBottom","velY","accY","jumpForce","maxVelY","score","transplantBrain","brain","copy","pipes","boardWidth","boardHeight","pipe","inputs","bottom","outputs","jump","v","ctx","min","save","originX","originY","translate","strokeStyle","strokeRect","restore","checkX","checkY","PAGES","SCREEN_SIZE","ratio","h","max","getScreenRect","stageWidth","stageHeight","currentPage","scrSize","Setting","updateSize","cvsWidth","cvsHeight","boardWidthRadio","groupSize","gravity","BirdGroup","survivors","deads","generationNum","distance","createBirds","bird","getRandomY","floor","pipeGroup","subPipes","getClosestPipesFrom","isDead","collidesWith","isOutOfStage","dropout","splice","addScore","think","applyForceY","update","display","fillStyle","font","textBaseline","fillText","sum","largest","fitness","Error","pickOne","extractBrain","mutate","child","disposeBrain","idx","r","Pipe","updateLeftRight","outStage","velX","checkEdges","pipeWidth","fillRect","pipeGap","interval","PipeGroup","restart","intervalWidth","startPoint","pipeCnt","ceil","frontIndex","getRandomTop","id","prev","num","Gene","NodeGene","nodeNum","type","layer","fromHereConns","toHereConns","NODE_TYPE","I","initBias","outValue","bias","getInitValue","getDeltaValue","ConnectionGene","invNum","from","to","enabled","initWeight","Activation","identity","sigmoid","pow","E","modifiedSigmoid","step","H","O","CONN_TYPE","Genome","inputSize","outputSize","nodes","nodeMap","connMap","isPrimal","createPrimal","order","node","conn","addLastNodeNum","initNode","j","addLastInvNum","initConn","output","weightedSum","k","func","partner","parent1","parent2","keepStructure","mutateWeight","mutateBias","addNode","addConn","candidates","blockRecurrent","parseInt","toNode","used","fromNode","indexOf","oldInvNum","selectEnabledConn","lowLayer","highLayer","oldConn","invResult","addInvResult","toSplit","spliceIndex","layerDist","getNodeFromNodeIndex","invNum1","invNum2","disable","newConn","selectNewConn","other","matching","myLeft","otherLeft","N","matchingMax","disjointCnt","excessCnt","weightDiff","myWeight","otherWeight","abs","distC1","distC2","distC3","result","Agent","agentId","speciesNum","xor","adjustedScore","genome","crossover","measureDist","frameCnt","ys","local","areaWidth","areaHeight","colCnt","agentX","agentY","layers","layersLength","Object","keys","textAlign","globalCompositeOperation","nodeLocal","layerNodes","nodeX","nodeY","beginPath","arc","PI","stroke","fill","connStyle","moveTo","setLineDash","quadraticCurveTo","lineTo","scoreText","round","alpha","Species","initGenNum","representative","agent","agents","nextAgents","isSorted","avgFitness","isExtinct","ancestors","size","average","sort","a","b","sortByFitness","survivalRate","eliminationRate","limit","criteria","index","GenerationSetting","lastSpeciesNum","lastAgentId","lastNodeNum","lastInvNum","compatibilityThreshold","generationLimit","invResults","rowCnt","curr","Generation","agentMap","speciesMap","initGeneration","species","console","error","primal","addLastAgentId","setId","addLastSpeciesNum","initSpecies","getGenerationNum","setSpecies","asexual","addGenerationNum","avgFitnessTotal","representativeMap","adjustFitness","eliminateLowest","setRepresentative","allotment","proportion","diff","newAgentMap","speciesReproduced","getSingleParent","sexual","geneticDist","keepNextAgent","getSpecies","setExtinction","ancestor","clearRect","run","Vector2D","sqrt","normalize","mult","m","getMag","div","maximum","setMag","dx","dy","Particle","location","angle","xVel","cos","yVel","sin","velocity","acceleration","radius","lifespan","Fumes","origin","particles","p","AGENT_TYPE","Asteroid","agentType","getRandomLocation","maxSpeed","maxForce","defaultAngle","angStep","seekLimit","desiredSeparation","wanderTarget","warderRelocationPct","wanderSpeedRatio","gridLocal","isAccelerated","leftFumes","rightFumes","separation","seek","separate","applyForce","isCandyOn","seekMouse","count","sub","getMagSq","target","desired","dX","dY","angleBase","atan2","d","dLimit","dA","row","col","force","updateFumes","angSize","leftAngle","leftX","leftY","setLocation","rightAngle","rightX","rightY","rotate","getColor","closePath","eyeAngle","eyeStyle","addParticle","canvasWidth","canvas","canvasHeight","gridSize","gridRowCnt","gridColCnt","makeGrid","grid","getGridRowByY","getGridColByX","setGridLocal","subAgents","flock","arrivedLimit","scrW","scrH","scrL","scrT","onLocal","TL","TR","BL","BR","offLocal","ScreenGroup","createAgents","isSpread","isMoving","agentTL","agentTR","agentBL","agentBR","getTargetByLocal","NAV_STATUS","center","radiusLimit","sateRadiusLimit","SatelliteGroup","sates","satesLength","sateAngleDist","sateRadius","angleStep","radiusShrinkSpeed","sateRadiusShrinkSpeed","status","setPage","setStatus","page","sateAngle","checkClick","selected","sateCheck","radiusCheck","getColorByPage","Field","generation","resize","screenGroup","sateGroup","birdGroup","birdBoardWidthRatio","xorGroup","isScreenOn","isArticleOn","drawFlappyBird","drawXOR","toggleArticle","evolveNextGeneration","drawDashboard","nextGeneration","XORGroup","prevProps","spread","fold","expand","CSSTransitionWrapper","children","wrapClassName","classNames","timeout","nodeRef","useRef","enter","exit","SectionTransition","CSSTransition","className","SlowCSSTransitionWrapper","SlowTransition","QuoteCSSTransitionWrapper","QuoteTransition","Navigation","state","sectionIndex","isBackBtnOn","addSectionIndex","setState","subtractSectionIndex","showBackBtn","handleBackBtn","styles","TransitionGroup","component","appear","onEntered","onExited","secText","greeting","guide","btn","onClick","Quiz","inner","secTitle","title","secDesc","desc","sentences","sentenceIndex","sentence","Midas","image","src","JobsImage","alt","imageGuide","btnGuide","playBtn","rel","href","cx","bind","Wizlab","toggleVideoZoom","isVideoZoom","toggleVideoMuted","isVideoMuted","videoRef","setVideoRef","element","video","controls","playsInline","autoPlay","muted","controlsList","onContextMenu","e","preventDefault","wizlabVideo","XOR","App","Article","ArticleQuiz","ArticleXOR","ArticleBird","ArticleMidas","ArticleWizlab","NavContainer","FieldContainer","style","ArticleContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae5c52ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Navigation_body__zs8wR\",\"greeting\":\"Navigation_greeting__CfyoG\",\"guide\":\"Navigation_guide__3pN78\",\"btn\":\"Navigation_btn__wK8H5\",\"blink\":\"Navigation_blink__1IbKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Quiz_body__5IQl_\",\"inner\":\"Quiz_inner__1uZrv\",\"secTitle\":\"Quiz_secTitle__1hFKd\",\"title\":\"Quiz_title__1jTRO\",\"secDesc\":\"Quiz_secDesc__cGazz\",\"image\":\"Quiz_image__1JGIH\",\"scaleUp\":\"Quiz_scaleUp__1cqAA\",\"imageGuide\":\"Quiz_imageGuide__17AUu\",\"desc\":\"Quiz_desc__3sC_e\",\"btnGuide\":\"Quiz_btnGuide__20bR-\",\"playBtn\":\"Quiz_playBtn__3kWef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Bird_body__3SsDj\",\"inner\":\"Bird_inner__Uezve\",\"secTitle\":\"Bird_secTitle__2JNW0\",\"title\":\"Bird_title__9fs1I\",\"secDesc\":\"Bird_secDesc__w2Ctq\",\"sentence\":\"Bird_sentence__3fswd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"NavContainer\":\"App_NavContainer__hse34\",\"FieldContainer\":\"App_FieldContainer__36Rno\",\"ArticleContainer\":\"App_ArticleContainer__1uAMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"SectionTransition_appear__2rI5o\",\"appearActive\":\"SectionTransition_appearActive__OV50C\",\"appearDone\":\"SectionTransition_appearDone__1Nr9_\",\"enter\":\"SectionTransition_enter__34y6a\",\"enterActive\":\"SectionTransition_enterActive__3HT0e\",\"enterDone\":\"SectionTransition_enterDone__2Wrju\",\"exit\":\"SectionTransition_exit__2GGKK\",\"exitActive\":\"SectionTransition_exitActive__1GNCu\",\"exitDone\":\"SectionTransition_exitDone__2W372\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"SlowTransition_appear__39OPK\",\"appearActive\":\"SlowTransition_appearActive__3oMTy\",\"appearDone\":\"SlowTransition_appearDone__3wOVs\",\"enter\":\"SlowTransition_enter__3Kyvu\",\"enterActive\":\"SlowTransition_enterActive__-4cde\",\"enterDone\":\"SlowTransition_enterDone__1KwRx\",\"exit\":\"SlowTransition_exit__1FAum\",\"exitActive\":\"SlowTransition_exitActive__1DSQv\",\"exitDone\":\"SlowTransition_exitDone__SJoJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"QuoteTransition_appear__2Ay5I\",\"appearActive\":\"QuoteTransition_appearActive__2oSYD\",\"appearDone\":\"QuoteTransition_appearDone__yuK93\",\"enter\":\"QuoteTransition_enter__1nwV_\",\"enterActive\":\"QuoteTransition_enterActive__18jKe\",\"enterDone\":\"QuoteTransition_enterDone__2vcZc\",\"exit\":\"QuoteTransition_exit__2C9Wv\",\"exitActive\":\"QuoteTransition_exitActive__2ddwf\",\"exitDone\":\"QuoteTransition_exitDone__1CRpT\"};","import React, { Component } from \"react\";\n\nexport default class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.mouseObj = {\n      mouseX: undefined,\n      mouseY: undefined,\n      isMouseOverCanvas: false,\n      isMouseMoving: false,\n      clicked: false,\n      clickedFrame: undefined,\n    };\n  }\n\n  componentDidMount() {\n    if (!this._frameId) {\n      // initiate properties\n      this._cvs = this.canvasRef.current;\n      this._ctx = this._cvs.getContext(\"2d\");\n      this._frameCnt = 0;\n      this._cvs.addEventListener(\"click\", this.clickEventHandler);\n      // start loop\n      // console.log(\"start loop\");\n      this.loop();\n    }\n    window.addEventListener(\"resize\", this.resizeEventHandler);\n    this.resizeEventHandler();\n    document.addEventListener(\"mousemove\", this.mousemoveEventHandler);\n  }\n\n  componentWillUnmount() {\n    // console.log(\"cancel loop\");\n    window.cancelAnimationFrame(this._frameId);\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\n    document.removeEventListener(\"mousemove\", this.mousemoveEventHandler);\n    if (this._cvs) {\n      this._cvs.removeEventListener(\"click\", this.clickEventHandler);\n    }\n  }\n\n  resizeEventHandler = (event) => {\n    // console.log(\"canvas, resizeEventHandler\");\n    this._cvs.width = window.innerWidth || document.body.clientWidth;\n    this._cvs.height = window.innerHeight || document.body.clientHeight;\n  };\n\n  mousemoveEventHandler = (event) => {\n    // console.log(\"canvas, mousemove\");\n    this.setMouseLocal(event);\n    this.mouseObj.isMouseMoving = true;\n  };\n\n  clickEventHandler = (event) => {\n    // console.log(\"canvas, mouse click\");\n    this.setMouseLocal(event);\n    this.mouseObj.clicked = true;\n    this.mouseObj.clickedFrame = this._frameCnt;\n  };\n\n  resetMouseObj = () => {\n    this.mouseObj.isMouseMoving = false;\n    this.mouseObj.clicked = false;\n    this.mouseObj.clickedFrame = undefined;\n  };\n\n  setMouseLocal = (event) => {\n    // https://stackoverflow.com/questions/17130395/real-mouse-position-in-canvas\n    let rect = this._cvs.getBoundingClientRect();\n    let borderWidth = 0; // temp\n\n    let scaleX = this._cvs.width / (rect.width - borderWidth * 2);\n    let scaleY = this._cvs.height / (rect.height - borderWidth * 2);\n\n    let mouseX = (event.clientX - (rect.left + borderWidth)) * scaleX;\n    let mouseY = (event.clientY - (rect.top + borderWidth)) * scaleY;\n\n    let padding = 10;\n    let isMouseOverCanvas =\n      mouseX >= padding &&\n      mouseX <= this._cvs.width - padding &&\n      mouseY >= padding &&\n      mouseY <= this._cvs.height - padding;\n\n    this.mouseObj.mouseX = mouseX;\n    this.mouseObj.mouseY = mouseY;\n    this.mouseObj.isMouseOverCanvas = isMouseOverCanvas;\n\n    return {\n      mouseX,\n      mouseY,\n      isMouseOverCanvas,\n    };\n  };\n\n  loop = () => {\n    this._frameCnt += 1;\n    let { draw, isLooped = true } = this.props;\n    draw(this._ctx, this._frameCnt, this.mouseObj);\n    this.resetMouseObj();\n    if (isLooped) {\n      this._frameId = window.requestAnimationFrame(this.loop);\n    }\n  };\n\n  render() {\n    let { width = 300, height = 300 } = this.props;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        width={width}\n        height={height}\n        // style={{ border: \"1px solid black\" }}\n      />\n    );\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\n// import * as tfvis from \"@tensorflow/tfjs-vis\";\n\nexport default class Brain {\n  constructor(model) {\n    if (model instanceof tf.Sequential) {\n      this.model = model;\n    } else {\n      this.model = this.createModel();\n    }\n  }\n\n  createModel() {\n    // Create a sequential model\n    const model = tf.sequential();\n\n    // Add a single input layer\n    model.add(\n      tf.layers.dense({ inputShape: [6], units: 8, activation: \"sigmoid\" })\n    );\n\n    // Add an output layer\n    model.add(tf.layers.dense({ units: 2, activation: \"softmax\" }));\n\n    // tfvis.show.modelSummary({ name: \"Model Summary\" }, model);\n\n    return model;\n  }\n\n  predict(input) {\n    return tf.tidy(() => {\n      let xs = tf.tensor2d([input]);\n      let ys = this.model.predict(xs);\n      let outputs = ys.dataSync();\n      return outputs;\n    });\n  }\n\n  copy() {\n    return tf.tidy(() => {\n      let weights = this.model.getWeights();\n      let copied = [];\n      weights.forEach((w) => copied.push(w.clone()));\n\n      let newBrain = new Brain();\n      newBrain.model.setWeights(copied);\n      return newBrain;\n    });\n  }\n\n  mutate(rate = 0.1) {\n    tf.tidy(() => {\n      let weights = this.model.getWeights();\n      let mutated = weights.map((weight) => {\n        let shape = weight.shape;\n        let array = weight.dataSync().slice();\n        for (let i = 0; i < array.length; i++) {\n          if (Math.random() < rate) {\n            let randNum = tf.randomNormal([1]).arraySync()[0];\n            array[i] += randNum;\n          }\n        }\n        return tf.tensor(array, shape);\n      });\n      this.model.setWeights(mutated);\n    });\n  }\n\n  dispose() {\n    this.model.dispose();\n  }\n}\n","// import Vector2D from \"../../Tool/Vector2D\"\nimport Brain from \"./Brain\";\n\nexport default class Bird {\n  constructor(props = {}) {\n    this.setting = props.setting;\n    this.y = props.y;\n\n    this.width = 30;\n    this.height = 15;\n\n    let x = this.setting.x;\n    this.left = x;\n    this.right = x + this.width;\n    this.updateTopBottom(this.y, this.height);\n\n    this.velY = 0;\n    this.accY = 0;\n    this.jumpForce = -1;\n\n    this.maxVelY = 20;\n\n    this.score = 0;\n\n    this.transplantBrain(props.brain);\n  }\n\n  transplantBrain(brain) {\n    if (brain instanceof Brain) {\n      //   console.log(\"transplanted!\");\n      this.brain = brain;\n    } else {\n      //   console.log(\"new brain..\");\n      this.brain = new Brain();\n    }\n  }\n\n  extractBrain() {\n    return this.brain.copy();\n  }\n\n  disposeBrain() {\n    this.brain.dispose();\n  }\n\n  think(pipes) {\n    // todo\n    // make input for neural network\n\n    let { boardWidth, boardHeight } = this.setting;\n    let pipe = pipes[0];\n\n    let inputs = [];\n    inputs[0] = this.y / boardHeight;\n    inputs[1] = this.velY / this.maxVelY;\n    inputs[2] = pipe.left / boardWidth;\n    inputs[3] = pipe.right / boardWidth;\n    inputs[4] = pipe.top / boardHeight;\n    inputs[5] = pipe.bottom / boardHeight;\n\n    let outputs = this.brain.predict(inputs);\n    if (outputs[0] > outputs[1]) {\n      this.jump();\n    }\n  }\n\n  jump() {\n    this.accY += this.jumpForce;\n  }\n\n  applyForceY(v) {\n    this.accY += v;\n  }\n\n  update(ctx) {\n    this.velY += this.accY;\n    this.velY = Math.min(this.velY, this.maxVelY);\n    this.y += this.velY;\n    this.accY = 0;\n\n    this.updateTopBottom();\n    // this.checkEdges(ctx);\n  }\n\n  addScore() {\n    this.score++;\n  }\n\n  display(ctx) {\n    if (this.top <= 0) return;\n    if (this.bottom >= this.setting.boardHeight) return;\n\n    ctx.save();\n    let { originX, originY } = this.setting;\n    ctx.translate(originX, originY);\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n    ctx.strokeRect(this.setting.x, this.y, this.width, this.height);\n    ctx.restore();\n  }\n\n  updateTopBottom(y = this.y, height = this.height) {\n    this.top = y;\n    this.bottom = y + height;\n  }\n\n  collidesWith(pipe) {\n    // console.log(\"BIRD:\", this.left, this.right, this.top, this.bottom);\n    // console.log(\"PIPE:\", pipe.left, pipe.right, pipe.top, pipe.bottom);\n    let checkX = this.right > pipe.left && this.left < pipe.right;\n    let checkY = this.top < pipe.top || this.bottom > pipe.bottom;\n    if (checkX && checkY) {\n      //   console.log(\"HIT\");\n      return true;\n    }\n    return false;\n  }\n\n  isOutOfStage(ctx) {\n    let { boardHeight } = this.setting;\n\n    // // weaker criteria could be,\n    // this.top < -this.height / 2 ||\n    // this.bottom > boardHeight + this.height / 2\n\n    if (this.top < 0 || this.bottom > boardHeight) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","export const PAGES = {\n  MAIN: \"PAGE_MAIN\",\n  CANDY: \"PAGE_CANDY\",\n  QUIZ: \"PAGE_QUIZ\",\n  XOR: \"PAGE_XOR\",\n  BIRD: \"PAGE_BIRD\",\n  MIDAS: \"PAGE_MIDAS\",\n  WIZLAB: \"PAGE_WIZLAB\",\n};\n\nexport const SCREEN_SIZE = {\n  HORI32: { ratio: { w: 3, h: 2 }, max: { w: 840, h: 560 } }, // 3:2\n  VERT169: { ratio: { w: 9, h: 16 }, max: { w: 360, h: 640 } }, // 9:16\n  BIRD400: { max: { h: 400 } },\n  FULL: {},\n};\n\nexport const getScreenRect = (stageWidth, stageHeight, currentPage) => {\n  // bird view\n  if (currentPage === PAGES.BIRD) {\n    let width = stageWidth * 1; // todo: apply birdBoardWidthRatio\n    let height = SCREEN_SIZE.BIRD400.max.h;\n    let left = (stageWidth - width) / 2;\n    let top = (stageHeight - height) / 2;\n    return { width, height, left, top };\n  }\n\n  // xor view, full screen\n  if (currentPage === PAGES.XOR) {\n    let width = stageWidth;\n    let height = stageHeight;\n    let left = (stageWidth - width) / 2;\n    let top = (stageHeight - height) / 2;\n    return { width, height, left, top };\n  }\n\n  // others\n  let scrSize = SCREEN_SIZE.HORI32;\n  if (currentPage === PAGES.QUIZ) {\n    scrSize = SCREEN_SIZE.VERT169;\n  } else if (currentPage === PAGES.MIDAS) {\n    scrSize = SCREEN_SIZE.VERT169;\n  } else if (currentPage === PAGES.WIZLAB) {\n    scrSize = SCREEN_SIZE.HORI32;\n  }\n\n  let ratio = scrSize.ratio;\n  let height, width;\n  if (stageWidth / stageHeight > ratio.w / ratio.h) {\n    // by height\n    height = stageHeight * 0.8;\n    height = Math.min(height, scrSize.max.h);\n    width = height * (ratio.w / ratio.h);\n  } else {\n    // by width\n    width = stageWidth * 0.8;\n    width = Math.min(width, scrSize.max.w);\n    height = width * (ratio.h / ratio.w);\n  }\n  let left = (stageWidth - width) / 2;\n  let top = (stageHeight - height) / 2;\n\n  return { width, height, left, top };\n};\n","import Bird from \"./Bird\";\nimport { SCREEN_SIZE } from \"../../Constant\";\n\nclass Setting {\n  constructor(props = {}) {\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    // console.log(\"BirdGroup Setting\", props);\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n\n    this.boardWidthRadio = props.boardWidthRadio;\n    this.boardWidth = this.cvsWidth * this.boardWidthRadio;\n    this.boardHeight = SCREEN_SIZE.BIRD400.max.h;\n\n    // warning! originX and Y is just for displaying!\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\n\n    // todo: to locate bird in center of screen, getClosestPipesFrom logic should be refactored.\n    // this.x = (this.boardWidth) / 2;\n    this.x = 120;\n    this.groupSize = 50;\n    this.gravity = 0.5;\n  }\n}\n\nexport default class BirdGroup {\n  constructor(props) {\n    this.setting = new Setting(props);\n    this.survivors = [];\n    this.deads = [];\n\n    this.generationNum = 1;\n    this.distance = 0;\n    this.createBirds();\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n  }\n\n  createBirds() {\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      let bird = new Bird({\n        setting: this.setting,\n        y: this.getRandomY(),\n      });\n      this.survivors.push(bird);\n    }\n  }\n\n  getRandomY() {\n    let { boardHeight } = this.setting;\n    let y = boardHeight * 0.1;\n    y += Math.floor(Math.random() * (boardHeight * 0.8));\n    return y;\n  }\n\n  run(ctx, pipeGroup) {\n    // get the target pipes\n    let subPipes = pipeGroup.getClosestPipesFrom(this.setting.x, 2);\n    // console.log(subPipes[0].id, subPipes[1].id);\n\n    for (let i = this.survivors.length - 1; i >= 0; i--) {\n      let bird = this.survivors[i];\n\n      // check whether the bird is kill by pipes,\n      // and if not dead, return inputs for 'think' method.\n      let isDead = bird.collidesWith(subPipes[0]);\n      isDead = isDead || bird.isOutOfStage(ctx);\n      if (isDead) {\n        let dropout = this.survivors.splice(i, 1);\n        this.deads.push(dropout[0]);\n        continue;\n      }\n\n      // only if the bird survives,\n      bird.addScore();\n      bird.think(subPipes);\n      bird.applyForceY(this.setting.gravity);\n      bird.update(ctx);\n      bird.display(ctx);\n    }\n\n    this.distance++;\n  }\n\n  drawDashboard(ctx) {\n    // guide text\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\n    ctx.font = \"12px NanumSquareRound, sans-serif\";\n    ctx.textBaseline = \"top\";\n\n    let x = this.setting.originX + 20;\n    let y = this.setting.originY + this.setting.boardHeight - 50;\n\n    ctx.fillText(`Gen : ${this.generationNum}`, x, y);\n    ctx.fillText(\n      `Bird : ${this.survivors.length} / ${this.setting.groupSize}`,\n      x,\n      y + 12\n    );\n    ctx.fillText(`Dist : ${this.distance}`, x, y + 23);\n  }\n\n  evolveNextGeneration() {\n    // selection: calculate fitness\n    let sum = 0;\n    let largest = 0;\n    this.deads.forEach((bird) => {\n      bird.score = bird.score * bird.score;\n      sum += bird.score;\n    });\n    this.deads.forEach((bird) => {\n      bird.fitness = bird.score / sum;\n      if (bird.fitness > largest) {\n        largest = bird.fitness;\n      }\n    });\n    // console.log(\"FITNESS\", sum, largest);\n\n    // reproduction:\n    if (this.survivors.length > 0) {\n      throw new Error(\"there is a ghost bird!!!\");\n    }\n\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      // pick one parent with probability according to relative fitness\n      let parent = this.pickOne();\n      // and copy it (rather than crossover)\n      let brain = parent.extractBrain(); // get new brain object\n      // mutate\n      brain.mutate(0.1);\n      let child = new Bird({\n        setting: this.setting,\n        y: this.getRandomY(),\n        brain: brain,\n      });\n\n      this.survivors.push(child);\n    }\n\n    // dispose deads\n    for (let i = 0; i < this.deads.length; i++) {\n      let dead = this.deads[i];\n      dead.disposeBrain();\n    }\n    this.deads = [];\n\n    this.generationNum++;\n    this.distance = 0;\n  }\n\n  pickOne() {\n    let idx = 0;\n    let r = Math.random();\n    while (r > 0) {\n      r -= this.deads[idx].fitness;\n      idx++;\n    }\n    idx--;\n    let picked = this.deads[idx];\n    return picked;\n  }\n}\n","export default class Pipe {\n  constructor(props) {\n    this.setting = props.setting;\n    this.x = props.x;\n    this.top = props.top;\n\n    this.updateTopBottom(this.top);\n    this.updateLeftRight(this.x);\n\n    this.outStage = false;\n  }\n\n  update(ctx) {\n    this.x += this.setting.velX;\n    this.updateLeftRight(this.x);\n    this.checkEdges(ctx);\n  }\n\n  display(ctx) {\n    ctx.save();\n\n    let { originX, originY, pipeWidth, boardHeight } = this.setting;\n    ctx.translate(originX, originY);\n    ctx.fillStyle = \"rgba(0,0,0,0.3)\";\n    ctx.fillRect(this.x, 0, pipeWidth, this.top);\n    ctx.fillRect(this.x, this.bottom, pipeWidth, boardHeight - this.bottom);\n\n    ctx.restore();\n  }\n\n  checkEdges(ctx) {\n    // 처음 x 설정 시 originX 없이 0을 기준으로 boardWidth만 사용하기 때문에,\n    // display 할 때만 originX 가 활용되고, checkEdge 할 때는 originX를 고민하지 않아도 됨\n    if (this.x < -this.setting.pipeWidth) {\n      this.outStage = true;\n    }\n  }\n\n  updateTopBottom(top) {\n    this.top = top;\n    this.bottom = top + this.setting.pipeGap;\n  }\n\n  updateLeftRight(x) {\n    this.left = x;\n    this.right = x + this.setting.pipeWidth;\n  }\n}\n","import Pipe from \"./Pipe\";\nimport { SCREEN_SIZE } from \"../../Constant\";\n\nclass Setting {\n  constructor(props = {}) {\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    // console.log(\"PipeGroup Setting\", props);\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n\n    this.boardWidthRadio = props.boardWidthRadio;\n    this.boardWidth = this.cvsWidth * this.boardWidthRadio;\n    this.boardHeight = SCREEN_SIZE.BIRD400.max.h;\n\n    // warning! originX and Y is just for displaying!\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\n\n    // todo: update pipe related values by screen size\n    this.interval = 160;\n    this.pipeWidth = 80;\n    this.pipeGap = 100;\n    this.velX = -5;\n  }\n}\n\nexport default class PipeGroup {\n  constructor(props) {\n    this.setting = new Setting(props);\n    this.restart();\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n    this.restart();\n  }\n\n  restart() {\n    this.pipes = [];\n    let { boardWidth, interval, pipeWidth } = this.setting;\n\n    let intervalWidth = interval + pipeWidth;\n\n    let startPoint = boardWidth;\n    let pipeCnt = Math.ceil(boardWidth / intervalWidth);\n    pipeCnt += 2;\n    this.frontIndex = 0;\n    // console.log(\"pipeCnt: \", pipeCnt);\n\n    for (let i = 0; i < pipeCnt; i++) {\n      let x = startPoint + intervalWidth * i;\n      let top = this.getRandomTop();\n      let pipe = new Pipe({ setting: this.setting, x, top });\n      // for debug\n      pipe.id = i;\n      this.pipes.push(pipe);\n    }\n  }\n\n  run(ctx) {\n    let { interval, pipeWidth, pipeGap } = this.setting;\n\n    for (let i = 0; i < this.pipes.length; i++) {\n      let pipe = this.pipes[i];\n      if (pipe.outStage) {\n        this.frontIndex = i < this.pipes.length - 1 ? i + 1 : 0;\n        let prev = i > 0 ? i - 1 : this.pipes.length - 1;\n        // console.log(i, prev, this.frontIndex);\n        prev = this.pipes[prev];\n        pipe.x = prev.x + pipeWidth + interval;\n        pipe.updateTopBottom(this.getRandomTop(), pipeGap);\n        pipe.outStage = false;\n      }\n      pipe.update(ctx);\n      pipe.display(ctx);\n    }\n  }\n\n  getRandomTop() {\n    let { boardHeight, pipeGap } = this.setting;\n    let top = 0;\n    top += boardHeight * 0.1;\n    top += Math.floor(Math.random() * (boardHeight * 0.8 - pipeGap));\n    return top;\n  }\n\n  getClosestPipesFrom(x, num = 1) {\n    num = Math.min(num, this.pipes.length);\n    let subPipes = [];\n    let idx = this.frontIndex;\n    if (this.pipes[this.frontIndex].right < x) {\n      idx = idx < this.pipes.length - 1 ? idx + 1 : 0;\n    }\n    for (let i = 0; i < num; i++) {\n      subPipes.push(this.pipes[idx]);\n      idx = idx < this.pipes.length - 1 ? idx + 1 : 0;\n    }\n    return subPipes;\n  }\n}\n","import { NODE_TYPE } from \"./Genome\";\n\nexport class Gene {\n  // constructor() {}\n\n  getInitValue() {\n    // TODO: add option to make value with random gaussian\n    return Math.random() * 2 - 1;\n  }\n\n  getDeltaValue() {\n    // TODO: add option to make value with random gaussian\n    return (Math.random() * 2 - 1) / 5;\n  }\n}\n\nexport class NodeGene extends Gene {\n  constructor(props = {}) {\n    super(props);\n    this.nodeNum = props.nodeNum;\n    this.type = props.type;\n    this.layer = props.layer || 0;\n\n    this.fromHereConns = [];\n    this.toHereConns = [];\n\n    if (props.type !== NODE_TYPE.I) {\n      this.initBias();\n    }\n    this.activation = props.activation || \"identity\";\n    this.outValue = 0;\n  }\n\n  initBias() {\n    this.bias = this.getInitValue();\n  }\n\n  mutateBias() {\n    if (Math.random() < 0.9) {\n      // uniformly perturbed\n      this.bias += this.getDeltaValue();\n    } else {\n      // assigned a new random variable\n      this.initBias();\n    }\n  }\n\n  mutateActivation() {}\n\n  copy() {\n    let copied = new NodeGene({\n      nodeNum: this.nodeNum,\n      type: this.type,\n      layer: this.layer,\n      activation: this.activation,\n    });\n    copied.fromHereConns = this.fromHereConns.slice();\n    copied.toHereConns = this.toHereConns.slice();\n    copied.bias = this.bias;\n    // copied.outValue = this.outValue;\n\n    return copied;\n  }\n}\n\nexport class ConnectionGene extends Gene {\n  constructor(props = {}) {\n    super(props);\n    this.invNum = props.invNum;\n    this.type = props.type;\n    this.from = props.from;\n    this.to = props.to;\n\n    this.enabled = true;\n    this.initWeight(props.weight);\n  }\n\n  initWeight(weight) {\n    this.weight = weight || this.getInitValue();\n  }\n\n  mutateWeight() {\n    if (Math.random() < 0.9) {\n      // uniformly perturbed\n      this.weight += this.getDeltaValue();\n    } else {\n      // assigned a new random variable\n      this.initWeight();\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  copy() {\n    let copied = new ConnectionGene({\n      invNum: this.invNum,\n      type: this.type,\n      from: this.from,\n      to: this.to,\n    });\n    copied.weight = this.weight;\n    copied.enabled = this.enabled;\n\n    return copied;\n  }\n}\n","const Activation = {\n  identity: (x) => x,\n  sigmoid: (x) => 1 / (1 + Math.pow(Math.E, -1 * x)),\n  modifiedSigmoid: (x) => 1 / (1 + Math.pow(Math.E, -4.9 * x)),\n  step: (x) => (x > 0 ? 1 : 0),\n};\n\nexport default Activation;\n","import { NodeGene, ConnectionGene } from \"./Gene\";\nimport Activation from \"./Activation\";\n\nexport const NODE_TYPE = {\n  I: \"NODE_INPUT\",\n  H: \"NODE_HIDDEN\",\n  O: \"NODE_OUTPUT\",\n};\n\nexport const CONN_TYPE = {\n  F: \"CONN_FORWARD\",\n  R: \"CONN_RECURRENT\",\n};\n\nexport default class Genome {\n  constructor(props) {\n    this.setting = props.setting;\n    this.inputSize = this.setting.inputSize;\n    this.outputSize = this.setting.outputSize;\n\n    // nodes is orders of calculation\n    this.nodes = [];\n    this.nodeMap = {};\n    this.connMap = {};\n\n    if (props.isPrimal) {\n      this.createPrimal();\n    }\n  }\n\n  initNode(props) {\n    let { nodeNum, order } = props;\n    let node = new NodeGene(props);\n    if (order === undefined) {\n      order = this.nodes.length;\n    }\n    this.nodes.splice(order, 0, nodeNum);\n    this.nodeMap[nodeNum] = node;\n\n    return node;\n  }\n\n  initConn(props) {\n    let { invNum, from, to } = props;\n    let conn = new ConnectionGene(props);\n    this.connMap[invNum] = conn;\n\n    this.nodeMap[from].fromHereConns.push(invNum);\n    this.nodeMap[to].toHereConns.push(invNum);\n\n    return conn;\n  }\n\n  createPrimal() {\n    for (let i = 0; i < this.inputSize; i++) {\n      let nodeNum = this.setting.addLastNodeNum();\n      this.initNode({\n        nodeNum,\n        type: NODE_TYPE.I,\n        layer: 0,\n      });\n    }\n    for (let i = 0; i < this.outputSize; i++) {\n      let nodeNum = this.setting.addLastNodeNum();\n      this.initNode({\n        nodeNum,\n        type: NODE_TYPE.O,\n        layer: 1,\n        activation: \"modifiedSigmoid\",\n      });\n    }\n\n    for (let i = 0; i < this.inputSize; i++) {\n      for (let j = this.inputSize; j < this.inputSize + this.outputSize; j++) {\n        let invNum = this.setting.addLastInvNum();\n        this.initConn({ invNum, type: CONN_TYPE.F, from: i, to: j });\n      }\n    }\n  }\n\n  predict(input) {\n    let output = [];\n\n    // make outValue of each node\n    for (let i = 0; i < this.nodes.length; i++) {\n      let nodeNum = this.nodes[i];\n      let node = this.nodeMap[nodeNum];\n\n      if (node.type === NODE_TYPE.I) {\n        node.outValue = input[i];\n        continue;\n      }\n\n      let weightedSum = 0;\n      for (let k = 0; k < node.toHereConns.length; k++) {\n        let invNum = node.toHereConns[k];\n        let conn = this.connMap[invNum];\n        if (conn.enabled) {\n          weightedSum += this.nodeMap[conn.from].outValue * conn.weight;\n        }\n      }\n      let func = Activation[node.activation];\n      node.outValue = func(weightedSum + node.bias);\n      if (node.type === NODE_TYPE.O) {\n        output.push(node.outValue);\n      }\n    }\n\n    return output;\n  }\n\n  copy() {\n    let copied = new Genome({ setting: this.setting });\n    copied.nodes = this.nodes.slice();\n\n    for (let nodeNum in this.nodeMap) {\n      copied.nodeMap[nodeNum] = this.nodeMap[nodeNum].copy();\n    }\n\n    for (let invNum in this.connMap) {\n      copied.connMap[invNum] = this.connMap[invNum].copy();\n    }\n\n    return copied;\n  }\n\n  calculateFitness() {}\n\n  crossover(partner) {\n    // compare the fitness score of this and partner,\n    // and set to parent1 and parent2, where parent1 is more fit one.\n    let parent1, parent2;\n    // console.log(\"crossover:\", this.fitness > partner.fitness);\n    if (this.fitness > partner.fitness) {\n      parent1 = this;\n      parent2 = partner;\n    } else {\n      parent1 = partner;\n      parent2 = this;\n    }\n\n    let child = new Genome({ setting: this.setting });\n    child.nodes = parent1.nodes.slice();\n    // set nodes\n    // just copy from more fit parent\n    // 이 때 layer 복사를 랜덤으로 하면 topology가 꼬인다\n    for (let nodeNum in parent1.nodeMap) {\n      child.nodeMap[nodeNum] = parent1.nodeMap[nodeNum].copy();\n      if (nodeNum in parent2.nodeMap) {\n        if (Math.random() > 0.5) {\n          child.nodeMap[nodeNum].bias = parent2.nodeMap[nodeNum].bias;\n        }\n      }\n    }\n    // set conns\n    for (let invNum in parent1.connMap) {\n      child.connMap[invNum] = parent1.connMap[invNum].copy();\n      if (invNum in parent2.connMap) {\n        if (Math.random() > 0.5) {\n          //   child.connMap[invNum].weight = parent2.connMap[invNum].weight;\n          //   child.connMap[invNum].enabled = parent2.connMap[invNum].enabled;\n          child.connMap[invNum] = parent2.connMap[invNum].copy();\n        }\n      }\n    }\n\n    return child;\n  }\n\n  mutate(keepStructure = false) {\n    for (let invNum in this.connMap) {\n      let conn = this.connMap[invNum];\n      if (Math.random() < 0.8) conn.mutateWeight();\n    }\n    for (let nodeNum in this.nodeMap) {\n      let node = this.nodeMap[nodeNum];\n      if (Math.random() < 0.8) node.mutateBias();\n      //   if (Math.random() < 0.01) node.mutateActivation();\n    }\n\n    if (keepStructure) return;\n    if (Math.random() < 0.03) this.addNode();\n    if (Math.random() < 0.05) this.addConn();\n\n    // // // DEBUG CODE\n    // if (Math.random() < 0.5) this.addNode();\n    // else {\n    //   this.addNode();\n    //   this.addConn();\n    // }\n  }\n\n  getNodeFromNodeIndex(idx) {\n    return this.nodeMap[this.nodes[idx]];\n  }\n\n  selectEnabledConn() {\n    let candidates = [];\n    for (let invNum in this.connMap) {\n      let conn = this.connMap[invNum];\n      if (conn.enabled) candidates.push(invNum);\n    }\n    if (candidates.length <= 0) {\n      return undefined;\n    }\n    return candidates[Math.floor(Math.random() * candidates.length)];\n  }\n\n  selectNewConn(blockRecurrent = false) {\n    // the layers of fromNode and toNode should be different.\n    // and toNode should not be input layer.\n    // check to block recurrent or not\n    let candidates = [];\n    for (let to in this.nodeMap) {\n      to = parseInt(to);\n      let toNode = this.nodeMap[to];\n      if (toNode.layer === 0) continue;\n      let used = toNode.toHereConns.map((invNum) => {\n        return this.connMap[invNum].from;\n      });\n      for (let from in this.nodeMap) {\n        from = parseInt(from);\n        let fromNode = this.nodeMap[from];\n        if (fromNode.layer === toNode.layer) continue;\n        if (used.indexOf(from) === -1) {\n          let type;\n          if (toNode.layer > fromNode.layer) {\n            type = CONN_TYPE.F;\n          } else {\n            if (blockRecurrent) continue;\n            type = CONN_TYPE.R;\n          }\n          candidates.push({ from, to, type });\n        }\n      }\n    }\n    if (candidates.length <= 0) {\n      return undefined;\n    }\n    return candidates[Math.floor(Math.random() * candidates.length)];\n  }\n\n  addNode() {\n    // should report the structural innovation to setting\n    // to check whether the same structural innovation\n    // in the current generation occurs.\n\n    // select an existing conn which is not disabled\n    let oldInvNum = this.selectEnabledConn();\n    if (oldInvNum === undefined) return false;\n    let oldConn = this.connMap[oldInvNum];\n\n    // check the conn is already innovated in current generation\n    let invResult = this.setting.addInvResult({\n      toSplit: oldConn.invNum,\n      from: oldConn.from,\n      to: oldConn.to,\n    });\n    // console.log(\"addNode: invResult\", invResult);\n\n    // // innovate structure\n    // select layer\n    let fromNode = this.nodeMap[oldConn.from];\n    let toNode = this.nodeMap[oldConn.to];\n\n    let lowLayer, highLayer;\n    if (toNode.layer > fromNode.layer) {\n      // oldConn.type === CONN_TYPE.F\n      lowLayer = fromNode.layer;\n      highLayer = toNode.layer;\n    } else {\n      // oldConn.type === CONN_TYPE.R\n      lowLayer = toNode.layer;\n      highLayer = fromNode.layer;\n    }\n    let layerDist = highLayer - lowLayer;\n    let layer = lowLayer + 1; // if this line is changed, many things should be changed.\n\n    // console.log(\"addNode: layerDist\", oldConn.type, layerDist);\n    // console.log(\"addNode: newNodeLayer\", layer);\n\n    // update other nodes' layer\n    let spliceIndex;\n    for (let i = 0; i < this.nodes.length; i++) {\n      let node = this.getNodeFromNodeIndex(i);\n      if (node.layer >= layer) {\n        spliceIndex = i;\n        break;\n      }\n    }\n    // console.log(\"addNode: spliceIndex\", spliceIndex);\n    if (layerDist <= 1) {\n      for (let i = spliceIndex; i < this.nodes.length; i++) {\n        let node = this.getNodeFromNodeIndex(i);\n        node.layer++;\n      }\n    }\n\n    // make Node\n    let { nodeNum, invNum1, invNum2 } = invResult;\n    this.initNode({\n      nodeNum,\n      type: NODE_TYPE.H,\n      layer,\n      order: spliceIndex,\n      activation: \"modifiedSigmoid\",\n    });\n\n    // make Conns\n    this.initConn({\n      invNum: invNum1,\n      type: oldConn.type,\n      from: oldConn.from,\n      to: nodeNum,\n      weight: 1,\n    });\n    this.initConn({\n      invNum: invNum2,\n      type: oldConn.type,\n      from: nodeNum,\n      to: oldConn.to,\n      weight: oldConn.weight,\n    });\n    // disable oldConn\n    oldConn.disable();\n  }\n\n  addConn() {\n    // select new conn\n    let newConn = this.selectNewConn(this.setting.blockRecurrent);\n    // if there is no more room for new conn, return false\n    if (newConn === undefined) return false;\n    let { from, to, type } = newConn;\n    // console.log(\"addConn:\", from, to, type);\n\n    // check the conn is already innovated in current generation\n    let invResult = this.setting.addInvResult({ from, to });\n    // console.log(\"addConn: invResult\", invResult);\n    // innovate structure\n    let { invNum } = invResult;\n    this.initConn({\n      invNum,\n      type,\n      from,\n      to,\n    });\n  }\n\n  measureDist(other) {\n    if (!(other instanceof Genome)) {\n      throw new Error(\n        \"To measure distance, other should be instance of Genome.\"\n      );\n    }\n\n    let matching = [];\n    let myLeft = [];\n    let otherLeft = [];\n    for (let invNum in this.connMap) {\n      invNum = parseInt(invNum);\n      if (invNum in other.connMap) {\n        matching.push(invNum);\n      } else {\n        myLeft.push(invNum);\n      }\n    }\n    for (let invNum in other.connMap) {\n      invNum = parseInt(invNum);\n      if (!(invNum in this.connMap)) {\n        otherLeft.push(invNum);\n      }\n    }\n    let N = matching.length + Math.max(myLeft.length, otherLeft.length);\n    let matchingMax = Math.max(...matching);\n\n    let disjointCnt = 0;\n    let excessCnt = 0;\n    for (let i = 0; i < myLeft.length; i++) {\n      let invNum = myLeft[i];\n      if (invNum < matchingMax) disjointCnt++;\n      else excessCnt++;\n    }\n    for (let i = 0; i < otherLeft.length; i++) {\n      let invNum = otherLeft[i];\n      if (invNum < matchingMax) disjointCnt++;\n      else excessCnt++;\n    }\n\n    let weightDiff = 0;\n    for (let i = 0; i < matching.length; i++) {\n      let invNum = matching[i];\n      let myWeight = this.connMap[invNum].weight;\n      let otherWeight = other.connMap[invNum].weight;\n      weightDiff += Math.abs(myWeight - otherWeight);\n    }\n\n    // console.log(Object.keys(this.connMap), Object.keys(other.connMap));\n    // console.log(\"arrays\", matching, myLeft, otherLeft);\n    // console.log(\"matching\", N, matchingMax, disjointCnt, excessCnt, weightDiff);\n\n    let { distC1, distC2, distC3 } = this.setting;\n    let result = (distC1 * excessCnt) / N;\n    result += (distC2 * disjointCnt) / N;\n    if (matching.length > 0) result += (distC3 * weightDiff) / matching.length;\n    // console.log(\"result\", result);\n    return result;\n  }\n}\n","import Genome, { CONN_TYPE } from \"./Genome\";\n\nexport default class Agent {\n  constructor(props) {\n    let { setting, isPrimal = false } = props;\n    this.setting = setting;\n    this.agentId = undefined;\n    this.speciesNum = undefined;\n\n    this.xor = [];\n    this.score = 0;\n    this.adjustedScore = undefined;\n    if (isPrimal) {\n      this.isPrimal = isPrimal;\n      this.genome = new Genome({ setting, isPrimal });\n      // console.log(\"primal genome\", this.genome);\n    }\n  }\n\n  setId(id) {\n    this.agentId = id;\n  }\n  getId() {\n    return this.agentId;\n  }\n  setSpecies(speciesNum) {\n    this.speciesNum = speciesNum;\n  }\n  getSpecies() {\n    return this.speciesNum;\n  }\n\n  asexual(keepStructure = false) {\n    // asexual reproduction\n    // console.log(\"Agent: reproduce asexually\");\n    let child = new Agent({ setting: this.setting });\n    child.genome = this.genome.copy();\n    child.genome.mutate(keepStructure);\n    return child;\n  }\n\n  sexual(partner) {\n    if (!(partner instanceof Agent)) {\n      throw new Error(\"sexual reproduction needs partner\");\n    }\n    // console.log(\"Agent: reproduce with partner\");\n    let child = new Agent({ setting: this.setting });\n    child.genome = this.genome.crossover(partner.genome);\n    return child;\n  }\n\n  geneticDist(other) {\n    return this.genome.measureDist(other.genome);\n  }\n\n  think(ctx, frameCnt) {\n    // just in case, reset values\n    this.xor.splice(0, this.xor.length);\n    this.score = 0;\n\n    let xs = [\n      [0, 0],\n      [0, 1],\n      [1, 0],\n      [1, 1],\n    ];\n    let ys = [0, 1, 1, 0];\n\n    for (let i = 0; i < xs.length; i++) {\n      let x = xs[i];\n      let y = ys[i];\n      let output = this.genome.predict(x)[0];\n      this.xor.push(output);\n      this.score += 1 - (y - output) * (y - output);\n    }\n\n    // console.log(`Agent ${this.agentId}:`, this.score, this.xor);\n  }\n\n  run(ctx, local) {\n    if (typeof this.agentId !== \"number\") {\n      return; // TODO\n    }\n\n    ctx.save();\n    let boardWidth = this.setting.boardWidth;\n    let areaWidth = this.setting.areaWidth;\n    let areaHeight = this.setting.areaHeight;\n\n    let colCnt = Math.floor(boardWidth / areaWidth);\n\n    let agentX = (local % colCnt) * areaWidth;\n    let agentY = Math.floor(local / colCnt) * areaHeight;\n\n    ctx.translate(agentX, agentY);\n\n    // draw nodes by layer\n    let nodeMap = this.genome.nodeMap;\n    let connMap = this.genome.connMap;\n    let layers = {};\n    for (let nodeNum in nodeMap) {\n      let node = nodeMap[nodeNum];\n      let layer = node.layer;\n      if (!(layer in layers)) {\n        layers[layer] = [];\n      }\n      layers[layer].push(node);\n    }\n    let layersLength = Object.keys(layers).length;\n\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.font = \"8px\";\n    ctx.globalCompositeOperation = \"destination-over\";\n\n    ctx.strokeStyle = `rgba(0, 0, 0, 0.2)`;\n    ctx.strokeRect(0, 0, areaWidth, areaHeight);\n\n    let nodeLocal = {};\n    for (let layer in layers) {\n      let layerNodes = layers[layer];\n      for (let i = 0; i < layerNodes.length; i++) {\n        let node = layerNodes[i];\n        let nodeX = ((parseInt(layer) + 1) * areaWidth) / (layersLength + 1);\n        let nodeY = ((i + 1) * areaHeight) / (layerNodes.length + 1);\n        if (layer % 2 === 1) nodeY -= areaHeight / (layerNodes.length + 1) / 2;\n        nodeLocal[node.nodeNum] = [nodeX, nodeY];\n        ctx.save();\n        ctx.translate(nodeX, nodeY);\n\n        ctx.fillText(`${node.nodeNum}`, 0, 0);\n\n        ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n        ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n        ctx.beginPath();\n        ctx.arc(0, 0, 8, 0, Math.PI * 2);\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.restore();\n      }\n    }\n\n    // connect them\n    for (let invNum in connMap) {\n      let conn = connMap[invNum];\n      if (!conn.enabled) continue;\n      let fromNode = nodeLocal[conn.from];\n      let toNode = nodeLocal[conn.to];\n      if (conn.type === CONN_TYPE.R) {\n        ctx.save();\n        ctx.strokeStyle = this.connStyle(conn.weight);\n        ctx.beginPath();\n        ctx.moveTo(fromNode[0], fromNode[1]);\n        ctx.setLineDash([3, 2]);\n        ctx.quadraticCurveTo(\n          (fromNode[0] + toNode[0]) / 2,\n          toNode[1],\n          toNode[0],\n          toNode[1]\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.save();\n        ctx.strokeStyle = this.connStyle(conn.weight);\n        ctx.beginPath();\n        ctx.moveTo(fromNode[0], fromNode[1]);\n        ctx.lineTo(toNode[0], toNode[1]);\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n\n    // console.log(\"Agent run: genome\", this.genome);\n    ctx.textAlign = \"left\";\n    ctx.fillText(`S${this.speciesNum}`, 5, 10);\n    let scoreText = Math.round(this.score * 100) / 100;\n    ctx.fillText(`${scoreText}`, 5, 20);\n\n    ctx.fillStyle = `rgba(0,0,0,${0.1 * this.speciesNum - 0.1})`;\n    ctx.fillRect(0, 0, areaWidth, areaHeight);\n\n    ctx.restore();\n  }\n\n  connStyle(weight) {\n    let alpha = Math.min(Math.abs(weight), 1);\n    if (weight > 0) {\n      return `rgba(235, 0, 74, ${alpha})`;\n    } else {\n      return `rgba(0, 140, 252, ${alpha})`;\n    }\n  }\n\n  update(ctx) {}\n\n  display(ctx) {}\n}\n","export default class Species {\n  constructor(props) {\n    this.setting = props.setting;\n    this.speciesNum = props.speciesNum;\n    this.initGenNum = props.initGenNum;\n\n    this.representative = props.agent;\n    this.agents = [];\n    this.nextAgents = [];\n    this.isSorted = false;\n\n    this.avgFitness = 0.01; // TODO: initial avgFitness\n    this.isExtinct = false;\n\n    this.ancestors = [];\n  }\n\n  adjustFitness() {\n    let size = this.agents.length;\n    let average = 0;\n    for (let i = 0; i < this.agents.length; i++) {\n      let agent = this.agents[i];\n      agent.adjustedScore = agent.score / size;\n      average += agent.adjustedScore;\n    }\n    average = Math.max(average, 0.01); // temp\n    this.avgFitness = average;\n    return average;\n  }\n\n  sortByFitness() {\n    this.agents.sort((a, b) => {\n      return b.score - a.score;\n    });\n    this.isSorted = true;\n  }\n\n  eliminateLowest() {\n    this.sortByFitness();\n    let survivalRate = 1 - this.setting.eliminationRate;\n    let limit = Math.floor(this.agents.length * survivalRate);\n    limit = Math.max(limit, 2);\n    this.agents = this.agents.slice(0, limit);\n  }\n\n  getHighest() {\n    if (this.isExtinct) {\n      return undefined;\n    }\n    if (!this.isSorted) {\n      this.sortByFitness();\n    }\n    return this.agents[0];\n  }\n\n  getSpeciesSize() {\n    return this.agents.length;\n  }\n\n  setExtinction() {\n    this.isExtinct = true;\n    this.avgFitness = 0;\n  }\n\n  setAvgFitness(fitness) {\n    this.avgFitness = fitness;\n  }\n\n  getRepresentative() {\n    return this.representative;\n  }\n\n  setRepresentative(criteria) {\n    // todo: set representative by fitness\n    let index = Math.floor(Math.random() * this.agents.length);\n    this.representative = this.agents[index];\n    return this.representative;\n  }\n\n  getSingleParent() {\n    let index = Math.floor(Math.random() * this.agents.length);\n    return this.agents[index];\n  }\n\n  keepNextAgent(agent) {\n    // console.log(\n    //   \"Species: keepNextAgent,\",\n    //   \"species\",\n    //   this.speciesNum,\n    //   \"agentId\",\n    //   agentId\n    // );\n    this.nextAgents.push(agent);\n  }\n\n  update() {\n    // if (this.initGenNum <= this.setting.getGenerationNum()) {\n    //   let curr = {\n    //     generationNum: this.setting.getGenerationNum(),\n    //     representative: this.representative,\n    //     agents: this.agents.slice(),\n    //     avgFitness: this.avgFitness,\n    //   };\n    //   this.ancestors.push(curr);\n    // }\n\n    this.representative = undefined;\n    this.agents = this.nextAgents;\n    this.isSorted = false;\n    this.nextAgents = [];\n  }\n}\n","export default class GenerationSetting {\n  constructor(props = {}) {\n    this.groupSize = 36;\n    this.generationNum = 0;\n    this.lastSpeciesNum = 0;\n    this.lastAgentId = 0;\n\n    this.inputSize = 2;\n    this.outputSize = 1;\n    this.lastNodeNum = -1;\n    this.lastInvNum = -1;\n\n    this.blockRecurrent = false;\n\n    this.distC1 = 1.0;\n    this.distC2 = 1.0;\n    this.distC3 = 0.4;\n    this.compatibilityThreshold = 3.0;\n    this.eliminationRate = 0.5;\n\n    this.areaWidth = 120;\n    this.areaHeight = 80;\n\n    this.generationLimit = 2000;\n\n    // reset every generation\n    this.invResults = [];\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    // console.log(\"BirdGroup Setting\", props);\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n\n    this.boardWidth = this.cvsWidth - (this.cvsWidth % this.areaWidth);\n    this.boardWidth = Math.min(this.boardWidth, this.areaWidth * 6);\n    let colCnt = Math.floor(this.boardWidth / this.areaWidth);\n    this.boardHeight = this.cvsHeight - (this.cvsHeight % this.areaHeight);\n    let rowCnt = Math.floor(this.groupSize / colCnt);\n    this.boardHeight = Math.min(this.boardHeight, this.areaHeight * rowCnt);\n\n    // warning! originX and Y is just for displaying!\n    this.originX = (this.cvsWidth - this.boardWidth) / 2;\n    this.originY = (this.cvsHeight - this.boardHeight) / 2;\n  }\n\n  getGenerationNum() {\n    return this.generationNum;\n  }\n  addGenerationNum() {\n    this.generationNum++;\n    return this.generationNum;\n  }\n\n  getLastSpeciesNum() {\n    return this.lastSpeciesNum;\n  }\n  addLastSpeciesNum(size = 1) {\n    this.lastSpeciesNum += size;\n    return this.lastSpeciesNum;\n  }\n\n  getLastAgentId() {\n    return this.lastAgentId;\n  }\n  addLastAgentId() {\n    this.lastAgentId++;\n    return this.lastAgentId;\n  }\n\n  getLastNodeNum() {\n    return this.lastNodeNum;\n  }\n  addLastNodeNum(size = 1) {\n    this.lastNodeNum += size;\n    return this.lastNodeNum;\n  }\n\n  getLastInvNum() {\n    return this.lastInvNum;\n  }\n  addLastInvNum(size = 1) {\n    this.lastInvNum += size;\n    return this.lastInvNum;\n  }\n\n  addInvResult(curr) {\n    // check the same location is already innovated.\n    for (let i = 0; i < this.invResults.length; i++) {\n      let prev = this.invResults[i];\n      // if so, return the prev innovation result.\n      if (prev.from === curr.from && prev.to === curr.to) {\n        if (prev.toSplit === curr.toSplit) {\n          // console.log(\"addInvResult, return prev\");\n          return prev;\n        }\n      }\n    }\n    // if not, make and return result with new invNum\n    if (curr.toSplit !== undefined) {\n      // addNode\n      curr.nodeNum = this.addLastNodeNum();\n      curr.invNum1 = this.addLastInvNum();\n      curr.invNum2 = this.addLastInvNum();\n      this.invResults.push(curr);\n    } else {\n      // addConn\n      curr.invNum = this.addLastInvNum();\n      this.invResults.push(curr);\n    }\n\n    return curr;\n  }\n}\n","import Agent from \"./Agent\";\nimport Species from \"./Species\";\nimport Setting from \"./Setting\";\n\nexport default class Generation {\n  constructor(props) {\n    this.setting = new Setting(props);\n    this.ancestors = [];\n    this.agentMap = {};\n    this.speciesMap = {};\n\n    this.initGeneration();\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n  }\n\n  initSpecies(props) {\n    let { speciesNum } = props;\n    let species = new Species(props);\n    if (speciesNum in this.speciesMap) {\n      console.error(\n        `Generation initSpecies: speciesNum ${speciesNum} is already taken.`\n      );\n      return this.speciesMap[speciesNum];\n    }\n    this.speciesMap[speciesNum] = species;\n\n    return species;\n  }\n\n  initGeneration() {\n    let primal = new Agent({ setting: this.setting, isPrimal: true });\n    let agentId = this.setting.addLastAgentId();\n    primal.setId(agentId);\n    let speciesNum = this.setting.addLastSpeciesNum();\n    let species = this.initSpecies({\n      setting: this.setting,\n      initGenNum: this.setting.getGenerationNum() + 1,\n      speciesNum,\n      agent: primal,\n    });\n    primal.setSpecies(speciesNum);\n\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      let child = primal.asexual(true); // keepStructure true\n      let agentId = this.setting.addLastAgentId();\n      child.setId(agentId);\n      child.setSpecies(speciesNum);\n      species.agents.push(child);\n      this.agentMap[agentId] = child;\n    }\n\n    this.speciesMap[speciesNum] = species;\n    this.setting.addGenerationNum();\n\n    // console.log(`GENERATION ${this.setting.getGenerationNum()}: reproduced`);\n    // console.log(this.speciesMap);\n  }\n\n  nextGeneration() {\n    // 각 species의 avgFitness 구하기\n    // 이와 더불어 각 species에서 낮은 점수의 agent 탈락\n    let avgFitnessTotal = 0;\n    let representativeMap = {};\n    for (let speciesNum in this.speciesMap) {\n      let species = this.speciesMap[speciesNum];\n      if (species.isExtinct) continue;\n\n      let avgFitness = species.adjustFitness();\n      avgFitnessTotal += avgFitness;\n      species.eliminateLowest();\n\n      // species의 대표 agent를 representativeMap에 저장\n      let representative = species.setRepresentative();\n      representativeMap[speciesNum] = representative;\n    }\n    // console.log(\"nextGeneration: avgFitnessTotal\", avgFitnessTotal);\n    // console.log(representativeMap);\n\n    // for (let speciesNum in representativeMap) {\n    //   let species = this.speciesMap[speciesNum];\n    //   let highest = species.getHighest();\n    //   console.log(\n    //     `GENERATION ${this.setting.getGenerationNum()}: `,\n    //     speciesNum,\n    //     highest.score\n    //   );\n    //   if (highest.score >= 3.9) {\n    //     console.log(\"HIT!\", highest);\n    //   }\n    // }\n\n    // 각 species의 할당량을 구해 allotment 생성\n    let allotment = [];\n    for (let speciesNum in representativeMap) {\n      speciesNum = parseInt(speciesNum);\n      let species = this.speciesMap[speciesNum];\n      let proportion = species.avgFitness / avgFitnessTotal;\n      let size = Math.ceil(proportion * this.setting.groupSize);\n      // allotment에 할당된 수만큼 speciesNum 추가\n      for (let i = 0; i < size; i++) {\n        allotment.push(speciesNum);\n      }\n    }\n    // allotment의 길이가 groupSize에 미치지 못하거나 초과할 시 조정\n    if (allotment.length < this.setting.groupSize) {\n      let diff = this.setting.groupSize - allotment.length;\n      for (let i = 0; i < diff; i++) {\n        let index = Math.floor(Math.random() * allotment.length);\n        let speciesNum = allotment[index];\n        allotment.push(speciesNum);\n      }\n    } else {\n      allotment = allotment.slice(0, this.setting.groupSize);\n    }\n    // console.log(\"nextGeneration: allotment\", allotment);\n\n    // allotment에 맞게 새로운 agent 생성하고, species를 배정\n    let newAgentMap = {};\n    let speciesReproduced = {};\n    for (let i = 0; i < allotment.length; i++) {\n      // speciesNum를 기준으로 child 생성\n      let speciesNum = allotment[i];\n      let species = this.speciesMap[speciesNum];\n      let parent1 = species.getSingleParent();\n      let parent2 = species.getSingleParent();\n      let child;\n      if (parent1 === parent2 || Math.random() < 0.25) {\n        child = parent1.asexual(false);\n      } else {\n        child = parent1.sexual(parent2);\n      }\n      // child에 AgentId 배정\n      let agentId = this.setting.addLastAgentId();\n      child.setId(agentId);\n      // child가 기존 종들 중 어디에 속하는지 결정\n      for (let speciesNum in representativeMap) {\n        speciesNum = parseInt(speciesNum);\n        let species = this.speciesMap[speciesNum];\n        let representative = representativeMap[speciesNum];\n        let dist = child.geneticDist(representative);\n        // console.log(\"DIST\", speciesNum, child.agentId, dist);\n        if (dist < this.setting.compatibilityThreshold) {\n          child.setSpecies(speciesNum);\n          species.keepNextAgent(child);\n          speciesReproduced[speciesNum] = true;\n          break;\n        }\n      }\n      // 배정된 종이 없을 경우, 새로운 종을 생성\n      if (child.getSpecies() === undefined) {\n        let speciesNum = this.setting.addLastSpeciesNum();\n        let species = this.initSpecies({\n          setting: this.setting,\n          initGenNum: this.setting.getGenerationNum() + 1,\n          speciesNum,\n          agent: child,\n        });\n        child.setSpecies(speciesNum);\n        species.keepNextAgent(child);\n        speciesReproduced[speciesNum] = true;\n        representativeMap[speciesNum] = child;\n        this.speciesMap[speciesNum] = species;\n      }\n\n      newAgentMap[agentId] = child;\n    }\n    // 개체를 배정받지 못한 종은 멸종 처리\n    for (let speciesNum in representativeMap) {\n      if (!speciesReproduced[speciesNum]) {\n        this.speciesMap[speciesNum].setExtinction();\n      }\n    }\n\n    // 현재 세대를 ancestor로 넘김\n    let ancestor = {\n      generationNum: this.setting.getGenerationNum(),\n      agentMap: this.agentMap,\n    };\n    this.ancestors.push(ancestor);\n    // species 업데이트\n    for (let speciesNum in representativeMap) {\n      let species = this.speciesMap[speciesNum];\n      species.update();\n    }\n    // generationNum 업데이트\n    this.setting.addGenerationNum();\n    // 새로운 agentMap으로 변경\n    this.agentMap = newAgentMap;\n    // console.log(`GENERATION ${this.setting.getGenerationNum()}: reproduced`);\n    // console.log(this.speciesMap);\n  }\n\n  run(ctx, frameCnt) {\n    ctx.save();\n    let { originX, originY } = this.setting;\n    ctx.translate(originX, originY);\n    ctx.clearRect(0, 0, this.setting.boardWidth, this.setting.boardHeight);\n    ctx.strokeRect(0, 0, this.setting.boardWidth, this.setting.boardHeight);\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\n\n    ctx.save();\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\n    ctx.font = \"40px NanumSquareRound, sans-serif\";\n    ctx.fillText(\n      `Gen`,\n      this.setting.boardWidth / 2,\n      this.setting.boardHeight / 2 - 23\n    );\n    ctx.fillText(\n      `${this.setting.generationNum}`,\n      this.setting.boardWidth / 2,\n      this.setting.boardHeight / 2 + 23\n    );\n    ctx.restore();\n\n    let local = 0;\n    for (let agentId in this.agentMap) {\n      let agent = this.agentMap[agentId];\n      agent.think(ctx, frameCnt);\n      agent.run(ctx, local);\n      local++;\n    }\n    ctx.restore();\n  }\n}\n","class Vector2D {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(v) {\n    if (v instanceof Vector2D) {\n      this.x += v.x;\n      this.y += v.y;\n    } else {\n      // v is considered as scalar\n      this.x += v;\n      this.y += v;\n    }\n    return this;\n  }\n\n  sub(v) {\n    if (v instanceof Vector2D) {\n      this.x -= v.x;\n      this.y -= v.y;\n    } else {\n      // v is considered as scalar\n      this.x -= v;\n      this.y -= v;\n    }\n    return this;\n  }\n\n  mult(v) {\n    if (v instanceof Vector2D) {\n      this.x *= v.x;\n      this.y *= v.y;\n    } else {\n      // v is considered as scalar\n      this.x *= v;\n      this.y *= v;\n    }\n    return this;\n  }\n\n  div(v) {\n    if (v instanceof Vector2D) {\n      this.x /= v.x;\n      this.y /= v.y;\n    } else {\n      // v is considered as scalar\n      this.x /= v;\n      this.y /= v;\n    }\n    return this;\n  }\n\n  equals(v) {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  getMag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  getMagSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  setMag(v) {\n    this.normalize();\n    this.mult(v);\n    return this;\n  }\n\n  normalize() {\n    let m = this.getMag();\n    if (m === 0) {\n      this.x = 1;\n      this.y = 0;\n    } else {\n      this.div(m);\n    }\n    return this;\n  }\n\n  limit(maximum) {\n    if (this.getMag() > maximum) {\n      this.setMag(maximum);\n    }\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n\n  static add(a, b) {\n    if (b instanceof Vector2D) {\n      return new Vector2D(a.x + b.x, a.y + b.y);\n    } else {\n      return new Vector2D(a.x + b, a.y + b);\n    }\n  }\n\n  static sub(a, b) {\n    if (b instanceof Vector2D) {\n      return new Vector2D(a.x - b.x, a.y - b.y);\n    } else {\n      return new Vector2D(a.x - b, a.y - b);\n    }\n  }\n\n  static mult(a, b) {\n    if (b instanceof Vector2D) {\n      return new Vector2D(a.x * b.x, a.y * b.y);\n    } else {\n      return new Vector2D(a.x * b, a.y * b);\n    }\n  }\n\n  static div(a, b) {\n    if (b instanceof Vector2D) {\n      return new Vector2D(a.x / b.x, a.y / b.y);\n    } else {\n      return new Vector2D(a.x / b, a.y / b);\n    }\n  }\n\n  static dist(a, b) {\n    // let d = Vector2D.sub(a, b);\n    // return d.getMag();\n    let dx = a.x - b.x;\n    let dy = a.y - b.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n\nexport default Vector2D;\n","import Vector2D from \"../Tool/Vector2D\";\n\nexport default class Particle {\n  constructor(location, angle) {\n    this.location = location.clone();\n    this.angle = angle;\n\n    let mag = 0.5;\n\n    let xVel = -1 * Math.cos(angle) * mag + (Math.random() - 0.5) * 2.0;\n    let yVel = -1 * Math.sin(angle) * mag + (Math.random() - 0.5) * 2.0;\n\n    this.velocity = new Vector2D(xVel, yVel);\n    this.acceleration = new Vector2D(0, 0);\n    this.radius = 2;\n    this.lifespan = 20;\n  }\n\n  run(ctx) {\n    this.update(ctx);\n    this.display(ctx);\n  }\n\n  update(ctx) {\n    this.velocity.add(this.acceleration);\n    this.location.add(this.velocity);\n    this.lifespan -= 1;\n  }\n\n  display(ctx) {\n    ctx.save();\n    ctx.fillStyle = `rgba(255,90,0, ${this.lifespan / 20})`;\n    ctx.beginPath();\n    ctx.arc(this.location.x, this.location.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  isDead() {\n    return this.lifespan < 0;\n  }\n}\n","// import Vector2D from \"../Tool/Vector2D\";\nimport Particle from \"./Particle\";\n\nexport default class Fumes {\n  constructor(origin, angle) {\n    this.origin = origin.clone();\n    this.angle = angle;\n    this.particles = [];\n  }\n\n  addParticle() {\n    this.particles.push(new Particle(this.origin, this.angle));\n  }\n\n  setLocation(x, y, angle) {\n    this.origin.x = x;\n    this.origin.y = y;\n    this.angle = angle;\n  }\n\n  run(ctx) {\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      let p = this.particles[i];\n      p.run(ctx);\n      if (p.isDead()) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n}\n","import Vector2D from \"../Tool/Vector2D\";\nimport Fumes from \"./Fumes\";\n\nexport const AGENT_TYPE = {\n  WANDERER: \"AGENT_WANDERER\",\n  SCREEN: \"AGENT_SCREEN\",\n};\n\nexport default class Asteroid {\n  constructor(props = {}) {\n    this.setting = props.setting;\n    this.agentType = this.setting.agentType;\n    this.location = this.getRandomLocation();\n    this.velocity = new Vector2D(0, 0);\n    this.acceleration = new Vector2D(0, 0);\n\n    if (this.agentType === AGENT_TYPE.SCREEN) {\n      this.maxSpeed = 10;\n      this.maxForce = 0.5;\n    } else {\n      this.maxSpeed = 4;\n      this.maxForce = 0.2;\n    }\n\n    this.defaultAngle = -Math.PI / 2;\n    this.angle = this.defaultAngle;\n    this.angStep = 0.05;\n\n    this.seekLimit = 50;\n    this.desiredSeparation = 20;\n    this.wanderTarget = this.location.clone();\n    this.warderRelocationPct = 0.01;\n    this.wanderSpeedRatio = 0.1;\n\n    // this.separationWeight = 0.6;\n    // this.seekWeight = 0.4;\n    this.gridLocal = {};\n\n    this.isAccelerated = false;\n    this.leftFumes = new Fumes(this.location, this.angle);\n    this.rightFumes = new Fumes(this.location, this.angle);\n  }\n\n  turnLeft() {\n    this.angle -= this.angStep;\n  }\n\n  turnRight() {\n    this.angle += this.angStep;\n  }\n\n  moveForward() {\n    let mag = 0.1;\n    let x = Math.cos(this.angle) * mag;\n    let y = Math.sin(this.angle) * mag;\n    this.acceleration.x = x;\n    this.acceleration.y = y;\n  }\n\n  flock(agents, mouseObj) {\n    let separation, seek;\n\n    // exclude oneself\n    if (agents.length > 1) {\n      separation = this.separate(agents);\n      this.applyForce(separation);\n    }\n\n    if (mouseObj.isMouseOverCanvas && this.isCandyOn) {\n      seek = this.seekMouse(mouseObj);\n      this.applyForce(seek);\n    } else {\n      if (Math.random() < this.warderRelocationPct) {\n        this.wanderTarget = this.getRandomLocation();\n      }\n      seek = this.seek(this.wanderTarget);\n      seek.mult(this.wanderSpeedRatio);\n      this.applyForce(seek);\n    }\n  }\n\n  getRandomLocation() {\n    let x = Math.floor(Math.random() * this.setting.cvsWidth);\n    let y = Math.floor(Math.random() * this.setting.cvsHeight);\n    return new Vector2D(x, y);\n  }\n\n  separate(agents) {\n    let sum = new Vector2D();\n    let count = 0;\n    for (let i = 0; i < agents.length; i++) {\n      let agent = agents[i];\n      let diff = Vector2D.sub(this.location, agent.location);\n      let distance = diff.getMagSq();\n      if (\n        distance > 0 &&\n        distance < this.desiredSeparation * this.desiredSeparation\n      ) {\n        // diff.normalize();\n        // diff.div(distance);\n        diff.setMag(1 / distance);\n        sum.add(diff);\n        count++;\n      }\n    }\n\n    if (count > 0) {\n      // sum.div(count);\n      sum.setMag(this.maxSpeed);\n      sum.sub(this.velocity); // steer\n      sum.limit(this.maxSpeed);\n      return sum;\n    } else {\n      return sum;\n    }\n  }\n\n  seek(target) {\n    let desired = Vector2D.sub(target, this.location);\n    let dX = this.location.x - target.x;\n    let dY = this.location.y - target.y;\n    let angleBase = Math.atan2(dY, dX) - Math.PI;\n\n    let d = desired.getMag();\n    desired.normalize();\n    let dLimit = this.seekLimit;\n    if (d < dLimit) {\n      let m = (d / dLimit) * this.maxSpeed;\n      let dA = this.defaultAngle;\n      desired.mult(m);\n      this.angle = dA - (dA - angleBase) * (d / dLimit);\n    } else {\n      desired.mult(this.maxSpeed);\n      this.angle = angleBase;\n    }\n    desired.sub(this.velocity); // steer\n    desired.limit(this.maxForce);\n\n    return desired;\n    // this.applyForce(desired);\n  }\n\n  seekMouse(mouseObj) {\n    let target = new Vector2D(mouseObj.mouseX, mouseObj.mouseY);\n    return this.seek(target);\n  }\n\n  setGridLocal(row, col) {\n    this.gridLocal.row = row;\n    this.gridLocal.col = col;\n  }\n\n  applyForce(force) {\n    this.acceleration.add(force);\n  }\n\n  update(ctx) {\n    this.velocity.add(this.acceleration);\n    this.velocity.limit(this.maxSpeed);\n    this.velocity.mult(0.99);\n    this.location.add(this.velocity);\n    this.acceleration.mult(0);\n\n    if (this.agentType === AGENT_TYPE.WANDERER) {\n      this.checkEdges(ctx);\n    }\n    this.updateFumes(ctx);\n  }\n\n  updateFumes(ctx) {\n    let angSize = Math.PI / 5;\n    let dist = 10;\n\n    let leftAngle = this.angle + angSize;\n    let leftX = this.location.x + -1 * dist * Math.cos(leftAngle);\n    let leftY = this.location.y + -1 * dist * Math.sin(leftAngle);\n    this.leftFumes.setLocation(leftX, leftY, leftAngle);\n\n    let rightAngle = this.angle - angSize;\n    let rightX = this.location.x + -1 * dist * Math.cos(rightAngle);\n    let rightY = this.location.y + -1 * dist * Math.sin(rightAngle);\n    this.rightFumes.setLocation(rightX, rightY, rightAngle);\n  }\n\n  getColor() {\n    if (this.agentType === AGENT_TYPE.SCREEN) {\n      // return `rgba(57, 65, 86, 1)`;\n      return `rgba(210, 210, 210, 1)`;\n    } else {\n      return `rgba(255, 255, 255, 1)`;\n    }\n  }\n\n  display(ctx, mouseObj) {\n    ctx.save();\n    ctx.translate(this.location.x, this.location.y);\n    ctx.rotate(this.angle);\n\n    // triangle\n    ctx.save();\n    ctx.fillStyle = this.getColor();\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n    ctx.beginPath();\n    ctx.moveTo(30, 0);\n    ctx.lineTo(-5, -15);\n    ctx.lineTo(-5, 15);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n\n    let { mouseX, mouseY } = mouseObj;\n    let dX = this.location.x - mouseX;\n    let dY = this.location.y - mouseY;\n    let eyeAngle = Math.atan2(dY, dX) - this.angle + Math.PI / 2;\n    let pupil = 2;\n    // console.log((this.angle * 180) / Math.PI, (eyeAngle * 180) / Math.PI);\n\n    let eyeStyle = `rgba(255, 255, 255, 1)`;\n    let pupilStyle = `rgba(0, 0, 0, 1)`;\n\n    // left eyes\n    ctx.save();\n    ctx.translate(12, -7);\n    ctx.rotate(eyeAngle);\n    ctx.beginPath();\n    ctx.arc(0, 0, 5, 0, Math.PI * 2);\n    ctx.fillStyle = eyeStyle;\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(0, pupil, 2, 0, Math.PI * 2);\n    ctx.fillStyle = pupilStyle;\n    ctx.fill();\n    ctx.restore();\n\n    // right eyes\n    ctx.save();\n    ctx.translate(12, 7);\n    ctx.rotate(eyeAngle);\n    ctx.beginPath();\n    ctx.arc(0, 0, 5, 0, Math.PI * 2);\n    ctx.fillStyle = eyeStyle;\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(0, pupil, 2, 0, Math.PI * 2);\n    ctx.fillStyle = `rgba(0, 0, 0, 1)`;\n    ctx.fill();\n    ctx.restore();\n\n    // exhaust\n    if (this.isAccelerated) {\n      ctx.fillStyle = `rgba(200, 0, 0, 1)`;\n    } else {\n      ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n    }\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n\n    ctx.beginPath();\n    ctx.arc(0, 0, 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(-6, -6, 3, -Math.PI / 2, Math.PI / 2, true);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(-6, 6, 3, -Math.PI / 2, Math.PI / 2, true);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n\n    if (this.isAccelerated) {\n      this.leftFumes.addParticle();\n      this.rightFumes.addParticle();\n    }\n    this.leftFumes.run(ctx);\n    this.rightFumes.run(ctx);\n  }\n\n  checkEdges(ctx) {\n    let canvasWidth = ctx.canvas.width;\n    let canvasHeight = ctx.canvas.height;\n    let x = this.location.x;\n    let y = this.location.y;\n\n    if (x < 0) {\n      this.location.x = canvasWidth;\n    } else if (x > canvasWidth) {\n      this.location.x = 0;\n    }\n\n    if (y < 0) {\n      this.location.y = canvasHeight;\n    } else if (y > canvasHeight) {\n      this.location.y = 0;\n    }\n  }\n}\n","import Agent, { AGENT_TYPE } from \"./Asteroid\";\n\nclass Setting {\n  constructor(props = {}) {\n    this.agentType = AGENT_TYPE.WANDERER;\n    this.groupSize = 10;\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    // console.log(\"Generation Setting\", props);\n    this.gridSize = 100;\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n    this.gridRowCnt = Math.ceil(this.cvsHeight / this.gridSize);\n    this.gridColCnt = Math.ceil(this.cvsWidth / this.gridSize);\n  }\n}\n\nexport default class Generation {\n  constructor(props) {\n    this.setting = new Setting(props);\n    this.agents = [];\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      let agent = new Agent({ setting: this.setting });\n      this.agents.push(agent);\n    }\n    this.makeGrid();\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n  }\n\n  makeGrid() {\n    let { gridRowCnt, gridColCnt } = this.setting;\n    this.grid = [];\n    for (let i = 0; i < gridRowCnt; i++) {\n      let row = [];\n      for (let j = 0; j < gridColCnt; j++) {\n        row.push([]);\n      }\n      this.grid.push(row);\n    }\n  }\n\n  getGridRowByY(y) {\n    let row = Math.floor(y / this.setting.gridSize);\n    return Math.max(0, Math.min(row, this.setting.gridRowCnt - 1));\n  }\n\n  getGridColByX(x) {\n    let col = Math.floor(x / this.setting.gridSize);\n    return Math.max(0, Math.min(col, this.setting.gridColCnt - 1));\n  }\n\n  run(ctx, frameCnt, mouseObj) {\n    this.makeGrid();\n    // set grid\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      let agent = this.agents[i];\n      let row = this.getGridRowByY(agent.location.y);\n      let col = this.getGridColByX(agent.location.x);\n      agent.setGridLocal(row, col);\n      this.grid[row][col].push(agent);\n    }\n\n    for (let i = 0; i < this.setting.groupSize; i++) {\n      let agent = this.agents[i];\n      let { row, col } = agent.gridLocal;\n      let subAgents = this.grid[row][col];\n\n      agent.flock(subAgents, mouseObj);\n      agent.update(ctx);\n      agent.display(ctx, mouseObj);\n    }\n  }\n}\n","import Agent, { AGENT_TYPE } from \"./Asteroid\";\nimport Vector2D from \"../Tool/Vector2D\";\n\nimport { getScreenRect } from \"../Constant\";\n\nclass Setting {\n  constructor(props = {}) {\n    this.agentType = AGENT_TYPE.SCREEN;\n    this.arrivedLimit = 0.01;\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    // console.log(\"Screen Group Setting\", props);\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n    this.currentPage = props.currentPage;\n\n    let rect = getScreenRect(this.cvsWidth, this.cvsHeight, this.currentPage);\n    this.scrW = rect.width;\n    this.scrH = rect.height;\n    this.scrL = rect.left;\n    this.scrT = rect.top;\n\n    this.onLocal = {\n      TL: new Vector2D(this.scrL, this.scrT),\n      TR: new Vector2D(this.scrL, this.scrT + this.scrH),\n      BL: new Vector2D(this.scrL + this.scrW, this.scrT),\n      BR: new Vector2D(this.scrL + this.scrW, this.scrT + this.scrH),\n    };\n    this.offLocal = {\n      TL: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\n      TR: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\n      BL: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\n      BR: new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2),\n    };\n  }\n}\n\nexport default class ScreenGroup {\n  constructor(props) {\n    this.setting = new Setting(props);\n    this.createAgents();\n    this.isSpread = false;\n    this.isMoving = false;\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n  }\n\n  createAgents() {\n    this.agentMap = {};\n    this.agentMap[\"TL\"] = new Agent({ setting: this.setting });\n    this.agentMap[\"TR\"] = new Agent({ setting: this.setting });\n    this.agentMap[\"BL\"] = new Agent({ setting: this.setting });\n    this.agentMap[\"BR\"] = new Agent({ setting: this.setting });\n  }\n\n  getTargetByLocal(local) {\n    if (this.isSpread) {\n      return this.setting.onLocal[local];\n    } else {\n      return this.setting.offLocal[local];\n    }\n  }\n\n  spread() {\n    this.isSpread = true;\n    this.isMoving = true;\n  }\n\n  fold() {\n    this.isSpread = false;\n    this.isMoving = true;\n  }\n\n  run(ctx, frameCnt, mouseObj) {\n    ctx.save();\n    // check for isMoving\n    if (this.isSpread) {\n      let agentTL = this.agentMap[\"TL\"];\n      let agentTR = this.agentMap[\"TR\"];\n      let agentBL = this.agentMap[\"BL\"];\n      let agentBR = this.agentMap[\"BR\"];\n      ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n      ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n      ctx.beginPath();\n      ctx.moveTo(agentTL.location.x, agentTL.location.y);\n      ctx.lineTo(agentTR.location.x, agentTR.location.y);\n      ctx.lineTo(agentBR.location.x, agentBR.location.y);\n      ctx.lineTo(agentBL.location.x, agentBL.location.y);\n      ctx.closePath();\n      // ctx.fill();\n      ctx.stroke();\n    }\n    ctx.restore();\n\n    ctx.save();\n    let isMoving = false;\n    for (let local in this.agentMap) {\n      let agent = this.agentMap[local];\n      let target = this.getTargetByLocal(local);\n      let distSq = Vector2D.sub(agent.location, target).getMagSq();\n      if (distSq > this.setting.arrivedLimit) {\n        // console.log(\"Screen is moving..\");\n        isMoving = true;\n      }\n      let force = agent.seek(target);\n      agent.applyForce(force);\n      agent.update(ctx);\n      agent.display(ctx, mouseObj);\n    }\n    this.isMoving = isMoving;\n    ctx.restore();\n  }\n}\n","import Vector2D from \"../Tool/Vector2D\";\nimport { PAGES } from \"../Constant\";\n\nconst NAV_STATUS = {\n  UNFOLDED: \"NAV_UNFOLDED\",\n  FOLDED: \"NAV_FOLDED\",\n  BACK: \"NAV_BACK\",\n\n  SHRINK: \"NAV_SHRINK\",\n  EXPAND: \"NAV_EXPAND\",\n};\n\nclass Setting {\n  constructor(props = {}) {\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n\n    this.center = new Vector2D(this.cvsWidth / 2, this.cvsHeight / 2);\n    this.updateSize(props);\n  }\n\n  updateSize(props) {\n    this.cvsWidth = props.cvsWidth;\n    this.cvsHeight = props.cvsHeight;\n\n    this.center.x = this.cvsWidth / 2;\n    this.center.y = this.cvsHeight / 2;\n\n    // todo: update radius by screen size\n    this.radiusLimit = 100;\n    this.sateRadiusLimit = 25;\n  }\n}\n\nexport default class SatelliteGroup {\n  constructor(props) {\n    this.setting = new Setting(props);\n\n    this.sates = [PAGES.WIZLAB, PAGES.MIDAS, PAGES.BIRD, PAGES.XOR];\n\n    this.satesLength = this.sates.length; // temp\n    this.sateAngleDist = (Math.PI * 2) / this.satesLength;\n\n    this.radius = this.setting.radiusLimit;\n    this.sateRadius = this.setting.sateRadiusLimit;\n\n    this.angle = 0;\n    this.angleStep = 0.005;\n    this.radiusShrinkSpeed = 3;\n    this.sateRadiusShrinkSpeed = 1;\n\n    this.status = NAV_STATUS.UNFOLDED;\n\n    this.setPage = props.setPage;\n  }\n\n  resize(props) {\n    this.setting.updateSize(props);\n  }\n\n  run(ctx, frameCnt, mouseObj) {\n    this.update(ctx, frameCnt, mouseObj);\n    this.display(ctx, frameCnt, mouseObj);\n  }\n\n  setStatus(status) {\n    this.status = status;\n  }\n\n  expand() {\n    this.setStatus(NAV_STATUS.EXPAND);\n  }\n\n  checkClick(mouseObj) {\n    // 만약 클릭이 되었을 때, 모두 펼쳐져 있을 때만\n    if (this.status === NAV_STATUS.UNFOLDED && mouseObj.clicked) {\n      let { mouseX, mouseY } = mouseObj;\n      for (let i = 0; i < this.satesLength; i++) {\n        let page = this.sates[i];\n        if (!page) continue;\n        // polar to cartasian\n        let sateAngle = this.angle + i * this.sateAngleDist;\n        let r = this.radius;\n        let dx = r * Math.cos(sateAngle);\n        let dy = r * Math.sin(sateAngle);\n        let center = this.setting.center;\n        let x = center.x + dx;\n        let y = center.y + dy;\n        // calculate distance\n        let sateRadius = this.sateRadius;\n        let distSq = (x - mouseX) ** 2 + (y - mouseY) ** 2;\n        if (distSq < sateRadius * sateRadius) {\n          // console.log(\"clicked\", page);\n          return page;\n        }\n      }\n      return false;\n    }\n  }\n\n  update(ctx, frameCnt, mouseObj) {\n    if (this.status === NAV_STATUS.UNFOLDED) {\n      let page = this.checkClick(mouseObj);\n      if (page) {\n        this.selected = page;\n        this.setStatus(NAV_STATUS.SHRINK);\n      }\n\n      this.angle += this.angleStep;\n      this.angle = this.angle % (Math.PI * 2);\n\n      if (this.radius < this.setting.radiusLimit) {\n        this.radius++;\n      } else if (this.radius > this.setting.radiusLimit) {\n        this.radius--;\n      }\n\n      if (this.sateRadius < this.setting.sateRadiusLimit) {\n        this.sateRadius++;\n      } else if (this.sateRadius > this.setting.sateRadiusLimit) {\n        this.sateRadius--;\n      }\n    } else if (this.status === NAV_STATUS.SHRINK) {\n      this.radius -= this.radiusShrinkSpeed;\n      this.sateRadius -= this.sateRadiusShrinkSpeed;\n      this.angle += this.angleStep * 20;\n      this.angle = this.angle % (Math.PI * 2);\n\n      let sateCheck = this.sateRadius <= 0;\n      let radiusCheck = this.radius <= 0;\n\n      if (sateCheck) this.sateRadius = 0;\n      if (radiusCheck) this.radius = 0;\n      if (sateCheck && radiusCheck) {\n        this.setStatus(NAV_STATUS.FOLDED);\n        this.setPage(this.selected);\n      }\n    } else if (this.status === NAV_STATUS.EXPAND) {\n      this.radius += this.radiusShrinkSpeed;\n      this.sateRadius += this.sateRadiusShrinkSpeed;\n      this.angle -= this.angleStep * 20;\n      this.angle = this.angle % (Math.PI * 2);\n\n      let sateCheck = this.sateRadius >= this.setting.sateRadiusLimit;\n      let radiusCheck = this.radius >= this.setting.radiusLimit;\n\n      if (sateCheck) this.sateRadius = this.setting.sateRadiusLimit;\n      if (radiusCheck) this.radius = this.setting.radiusLimit;\n      if (sateCheck && radiusCheck) {\n        this.setStatus(NAV_STATUS.UNFOLDED);\n      }\n    }\n  }\n\n  display(ctx, frameCnt, mouseObj) {\n    ctx.save();\n    let center = this.setting.center;\n    let radius = this.radius;\n    let sateRadius = this.sateRadius;\n    ctx.translate(center.x, center.y);\n    ctx.beginPath();\n    // ctx.arc(0, 0, 1, 0, Math.PI * 2);\n    ctx.stroke();\n\n    ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n    ctx.strokeStyle = `rgba(0, 0, 0, 1)`;\n\n    for (let i = 0; i < this.satesLength; i++) {\n      let page = this.sates[i];\n      ctx.save();\n      ctx.rotate(this.angle + i * this.sateAngleDist);\n      ctx.translate(radius, 0);\n      ctx.beginPath();\n      ctx.arc(0, 0, sateRadius, 0, Math.PI * 2);\n      ctx.fillStyle = this.getColorByPage(page);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    ctx.restore();\n  }\n\n  getColorByPage(page) {\n    switch (page) {\n      case PAGES.WIZLAB:\n        return \"#23d8af\";\n      case PAGES.MIDAS:\n        return \"#23395d\";\n      case PAGES.BIRD:\n        return \"rgba(100, 100, 100, 1)\";\n      default:\n        return `rgba(255, 255, 255, 1)`;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Canvas from \"../Component/Canvas\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport BirdGroup from \"./FlappyBird/BirdGroup\";\nimport PipeGroup from \"./FlappyBird/PipeGroup\";\n\nimport XORGroup from \"./NEAT/Generation\";\n\nimport Generation from \"./Generation\";\nimport ScreenGroup from \"./ScreenGroup\";\nimport SatelliteGroup from \"./SatelliteGroup\";\nimport { PAGES } from \"../Constant\";\n\nexport default class Field extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resizeEventHandler);\n    this.resizeEventHandler();\n\n    this.generation = new Generation({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n    });\n    this.sateGroup = new SatelliteGroup({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n      setPage: this.props.setPage,\n    });\n    this.screenGroup = new ScreenGroup({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n      currentPage: this.props.currentPage,\n    });\n\n    let tfBackend = \"cpu\";\n    await tf.setBackend(tfBackend);\n    // console.log(\"Tensorflow backend is\", tfBackend);\n\n    this.birdBoardWidthRatio = 1;\n    this.birdGroup = new BirdGroup({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n      boardWidthRadio: this.birdBoardWidthRatio,\n    });\n    this.pipeGroup = new PipeGroup({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n      boardWidthRadio: this.birdBoardWidthRatio,\n    });\n\n    this.xorGroup = new XORGroup({\n      cvsWidth: this.stageWidth,\n      cvsHeight: this.stageHeight,\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isScreenOn !== this.props.isScreenOn) {\n      if (this.props.isScreenOn) {\n        // console.log(\"spread the screen\");\n        this.screenGroup.resize({\n          cvsWidth: this.stageWidth,\n          cvsHeight: this.stageHeight,\n          currentPage: this.props.currentPage,\n        });\n        this.screenGroup.spread();\n      } else {\n        // console.log(\"fold the screen\");\n        this.screenGroup.fold();\n      }\n    }\n\n    if (prevProps.currentPage !== this.props.currentPage) {\n      if (this.props.currentPage === PAGES.MAIN) {\n        this.sateGroup.expand();\n      }\n    }\n  }\n\n  resizeEventHandler = (event) => {\n    // console.log(\"index, resizeEventHandler\");\n    // console.log(window.innerWidth, window.innerHeight);\n\n    this.stageWidth = window.innerWidth || document.body.clientWidth;\n    this.stageHeight = window.innerHeight || document.body.clientHeight;\n\n    if (this.generation !== undefined) {\n      this.generation.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n      });\n    }\n    if (this.screenGroup !== undefined) {\n      this.screenGroup.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n        currentPage: this.props.currentPage,\n      });\n    }\n    if (this.sateGroup !== undefined) {\n      this.sateGroup.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n      });\n    }\n    if (this.birdGroup !== undefined) {\n      this.birdGroup.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n        boardWidthRadio: this.birdBoardWidthRatio,\n      });\n    }\n    if (this.pipeGroup !== undefined) {\n      this.pipeGroup.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n        boardWidthRadio: this.birdBoardWidthRatio,\n      });\n    }\n    if (this.xorGroup !== undefined) {\n      this.xorGroup.resize({\n        cvsWidth: this.stageWidth,\n        cvsHeight: this.stageHeight,\n      });\n    }\n  };\n\n  draw = (ctx, frameCnt, mouseObj) => {\n    let cvsWidth = ctx.canvas.width;\n    let cvsHeight = ctx.canvas.height;\n    let { currentPage, isScreenOn, isArticleOn } = this.props;\n\n    // check initiation\n    if (this.generation === undefined) return;\n    if (this.screenGroup === undefined) return;\n    if (this.sateGroup === undefined) return;\n\n    ctx.save();\n    // clear screen\n    ctx.clearRect(0, 0, cvsWidth, cvsHeight);\n\n    // draw background\n    ctx.fillStyle = `rgba(255, 255, 255, 1)`;\n    ctx.fillRect(0, 0, cvsWidth, cvsHeight);\n\n    // draw generation\n    // this.generation.run(ctx, frameCnt, mouseObj);\n\n    // draw navigation\n    if (currentPage === PAGES.MAIN) {\n      this.sateGroup.run(ctx, frameCnt, mouseObj);\n    }\n\n    // draw flappy bird\n    if (currentPage === PAGES.BIRD && isArticleOn) {\n      this.drawFlappyBird(ctx, frameCnt, mouseObj);\n    }\n\n    // draw xor\n    if (currentPage === PAGES.XOR && isArticleOn) {\n      this.drawXOR(ctx, frameCnt, mouseObj);\n    }\n\n    // draw screen\n    this.screenGroup.run(ctx, frameCnt, mouseObj);\n    if (isScreenOn && !isArticleOn && !this.screenGroup.isMoving) {\n      this.props.toggleArticle(true);\n    } else if (!isScreenOn && isArticleOn) {\n      this.props.toggleArticle(false);\n    }\n\n    ctx.restore();\n  };\n\n  drawFlappyBird = (ctx, frameCnt, mouseObj) => {\n    if (this.birdGroup === undefined) return;\n    if (this.pipeGroup === undefined) return;\n\n    ctx.save();\n\n    if (this.birdGroup.survivors.length <= 0) {\n      // console.log(\n      //   `GENERATION # ${this.birdGroup.generationNum}, maxDistance: ${this.distance}`\n      // );\n      this.pipeGroup.restart();\n      this.birdGroup.evolveNextGeneration();\n\n      // check memory loss\n      // let memo = tf.memory();\n      // console.log(\n      //   `numTensors:${memo.numTensors}, numBytes:${memo.numBytes}, numDataBuffers:${memo.numDataBuffers}`\n      // );\n    }\n\n    // pipeGroup\n    this.pipeGroup.run(ctx);\n    // birdGroup\n    this.birdGroup.run(ctx, this.pipeGroup);\n    this.birdGroup.drawDashboard(ctx);\n\n    ctx.restore();\n  };\n\n  drawXOR = (ctx, frameCnt, mouseObj) => {\n    if (this.xorGroup === undefined) return;\n\n    ctx.save();\n    this.xorGroup.run(ctx, frameCnt);\n    if (frameCnt % 5 === 0) {\n      if (\n        this.xorGroup.setting.getGenerationNum() <\n        this.xorGroup.setting.generationLimit\n      ) {\n        this.xorGroup.nextGeneration();\n      }\n    }\n    ctx.restore();\n  };\n\n  render() {\n    // console.log(\"Field\", this.props);\n\n    return <Canvas draw={this.draw} />;\n  }\n}\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport SectionTransition from \"./SectionTransition.module.css\";\nimport SlowTransition from \"./SlowTransition.module.css\";\nimport QuoteTransition from \"./QuoteTransition.module.css\";\n\n// https://stackoverflow.com/questions/62187461/using-react-finddomnode-is-deprecated-in-strictmode-is-thrown-as-a-warning-when\n\nexport const CSSTransitionWrapper = ({\n  children,\n  wrapClassName,\n  classNames,\n  timeout,\n  ...props\n}) => {\n  const nodeRef = React.useRef(null);\n\n  if (timeout === undefined) {\n    timeout = {\n      enter: 700,\n      exit: 300,\n    };\n  }\n  if (classNames === undefined) {\n    classNames = SectionTransition;\n  }\n\n  return (\n    <CSSTransition\n      nodeRef={nodeRef}\n      timeout={timeout}\n      classNames={SectionTransition}\n      {...props}\n    >\n      <div ref={nodeRef} className={wrapClassName}>\n        {children}\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport const SlowCSSTransitionWrapper = (props) => {\n  return (\n    <CSSTransitionWrapper\n      timeout={{ enter: 1000, exit: 1000 }}\n      classNames={SlowTransition}\n      {...props}\n    />\n  );\n};\n\nexport const QuoteCSSTransitionWrapper = (props) => {\n  return (\n    <CSSTransitionWrapper\n      timeout={{ enter: 5000, exit: 1000 }}\n      classNames={QuoteTransition}\n      {...props}\n    />\n  );\n};\n","import React, { Component } from \"react\";\nimport { PAGES } from \"../../Constant\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { CSSTransitionWrapper, SlowCSSTransitionWrapper } from \"../Transition\";\n\nimport styles from \"./index.module.css\";\n// import classNames from \"classnames/bind\";\n// const cx = classNames.bind(styles);\n\nexport default class Navigation extends Component {\n  state = {\n    sectionIndex: 0,\n    isBackBtnOn: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentPage !== this.props.currentPage) {\n      if (this.props.currentPage !== PAGES.MAIN) {\n        this.subtractSectionIndex();\n      }\n    }\n  }\n\n  addSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  showBackBtn = () => {\n    this.setState({\n      isBackBtnOn: true,\n    });\n  };\n\n  handleBackBtn = () => {\n    this.props.setPage(PAGES.MAIN);\n    this.setState((state) => ({\n      isBackBtnOn: false,\n    }));\n  };\n\n  render() {\n    let { sectionIndex, isBackBtnOn } = this.state;\n\n    return (\n      <nav className={styles.body}>\n        <TransitionGroup component={null}>\n          {sectionIndex >= 0 && (\n            <SlowCSSTransitionWrapper\n              key={0}\n              appear={true}\n              onEntered={this.addSectionIndex}\n              onExited={this.showBackBtn}\n              wrapClassName={styles.secText}\n            >\n              <p className={styles.greeting}>안녕하세요!</p>\n            </SlowCSSTransitionWrapper>\n          )}\n          {sectionIndex >= 1 && (\n            <CSSTransitionWrapper\n              key={1}\n              appear={true}\n              // onEntered={this.addSectionIndex}\n              onExited={this.subtractSectionIndex}\n              wrapClassName={styles.secText}\n            >\n              <p className={styles.guide}>아래 위성 중 하나를 선택해주세요.</p>\n            </CSSTransitionWrapper>\n          )}\n          {isBackBtnOn && (\n            <SlowCSSTransitionWrapper\n              key={2}\n              appear={true}\n              onExited={this.addSectionIndex}\n              wrapClassName={styles.secText}\n            >\n              <div className={styles.btn} onClick={this.handleBackBtn}></div>\n            </SlowCSSTransitionWrapper>\n          )}\n        </TransitionGroup>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from \"./index.module.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\n\nexport default class Quiz extends Component {\n  state = {\n    sectionIndex: 0,\n  };\n\n  addSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  render() {\n    let { sectionIndex } = this.state;\n\n    return (\n      <div className={styles.body}>\n        <div className={styles.inner}>\n          <TransitionGroup component={null}>\n            {sectionIndex >= 0 && (\n              <CSSTransitionWrapper\n                key={0}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={() => {}}\n                wrapClassName={styles.secTitle}\n              >\n                <h2 className={styles.title}>QUIZ</h2>\n              </CSSTransitionWrapper>\n            )}\n\n            {sectionIndex >= 1 && (\n              <CSSTransitionWrapper\n                key={1}\n                appear={true}\n                // onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>준비중!</p>\n              </CSSTransitionWrapper>\n            )}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from \"./index.module.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport {\n  CSSTransitionWrapper,\n  QuoteCSSTransitionWrapper,\n} from \"../../Component/Transition\";\n\nexport default class Bird extends Component {\n  state = {\n    sectionIndex: 0,\n  };\n\n  sentences = [\n    // `저는 자바스크립트를 무척 좋아합니다!`,\n    // `저는 상상을 구현하는 사람이 되고 싶습니다!`,\n    `이 화면은 간단한 NEAT 알고리즘과\\ntensorflow.js을 활용해 구현되었습니다.`,\n    // `Fly with the eagles not the sparrows.`,\n    `길은 스스로 찾아야 한다\\n스스로 걸어야 한다\\n모르는 곳으로\\n먼 길이다\\n\\n- 울라브 하우게 -`,\n    `어딘가에서 누군가가\\n너를 향해 전속력으로 달려오고 있다\\n믿을 수 없는 속도로\\n낮과 밤을 여행해\\n눈보라와 사막의 열기를 뚫고\\n급류를 건너고\\n좁은 길들을 지나\\n\\n- 존 애쉬베리 -`,\n    `가장 훌륭한 시는 아직 씌여지지 않았다\\n가장 아름다운 노래는 아직 불려지지 않았다\\n최고의 날들은 아직 살지 않은 날들\\n...\\n어느 길로 가야 할지 더 이상 알 수 없을 때\\n그때가 비로소 진정한 여행의 시작이다\\n\\n- 나짐 히크메트 -`,\n    `넒은 원을 그리며 나는 살아가네\\n그 원은 세상 속에서 점점 넓어져 가네\\n나는 아마도 마지막 원을 완성하지 못할 것이지만\\n그 일에 내 온 존재를 바친다네\\n\\n- 라이너 마리아 릴케 -`,\n    `해답은 없다\\n앞으로도 해답은 없을 것이고\\n지금까지도 해답이 없었다\\n이것이 인생의 유일한 해답이다\\n\\n- 거투르드 스타인 -`,\n    `당신이 하는 일이 문제가 아니다\\n당신이 하지 않고 남겨 두는 일이 문제다\\n해 질 무렵\\n당신의 마음을 아프게 하는 일이 그것이다\\n잊어버린 부드러운 말\\n쓰지 않은 편지\\n보내지 않은 꽃\\n밤에 당신을 따라다니는 환영들이 그것이다\\n\\n- 마거릿 생스터 -`,\n    `철새 떼가, 남쪽에서\\n날아오며\\n도나우강을 건널 때면, 나는 기다린다\\n뒤처진 새를\\n그게 어떤 건지, 내가 안다\\n남들과 발맞출 수 없다는 것\\n어릴 적부터 내가 안다\\n뒤처진 새가 머리 위로 날아 떠나면\\n나는 그에게 내 힘을 보낸다\\n\\n- 라이너 쿤체 -`,\n    `당신의 나이는 당신이 아니다\\n당신이 입는 옷의 크기도\\n몸무게와\\n머리 색깔도 당신이 아니다\\n\\n당신은 아침의 잠긴 목소리이고\\n당신이 미처 감추지 못한 미소이다\\n당신은 당신의 웃음 속 사랑스러움이고\\n당신이 흘린 모든 눈물이다\\n\\n- 에린 핸슨 -`,\n    `모든 것은 지나간다\\n일출의 장엄함이 아침 내내 계속되진 않으며\\n비가 영원히 내리지도 않는다\\n\\n당신이 살아 있는 동안\\n당신에게 일어나는 일들을 받아들이라\\n모든 것은 지나가 버린다\\n\\n- 세실 프란시스 알렉산더 -`,\n    `자기 인생의 의미를 볼 수 없다면\\n지금 여기, 이 순간, 삶의 현재 위치로 오기까지\\n많은 빗나간 길들을 걸어 왔음을 알아야 한다\\n그리고 오랜 세월 동안\\n자신의 영혼이 절벽을 올라왔음도 알아야 한다\\n그 상처, 그 방황, 그 두려움을\\n그 삶의 불모지를 잊지 말아야 한다\\n\\n- 마르타 스목 -`,\n    `아무리 어둔 길이라도\\n나 이전에\\n누군가는 이 길을 지나갔을 것이고,\\n아무리 가파른 길이라도\\n나 이전에\\n누군가는 이 길을 통과했을 것이다\\n아무도 걸어가 본 적이 없는\\n그런 길은 없다\\n\\n- 베드로시안 -`,\n    `함께 있되 거리를 두라\\n그래서 하늘 바람이 너희 사이에서 춤추게 하라\\n\\n- 칼릴 지브란 -`,\n  ];\n\n  addSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  render() {\n    let { sectionIndex } = this.state;\n    let sentenceIndex = Math.floor(Math.random() * this.sentences.length);\n    let sentence = this.sentences[sentenceIndex];\n\n    return (\n      <div className={styles.body}>\n        <div className={styles.inner}>\n          <TransitionGroup component={null}>\n            {sectionIndex >= 0 && (\n              <CSSTransitionWrapper\n                key={0}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={() => {}}\n                wrapClassName={styles.secTitle}\n              >\n                <h2 className={styles.title}>\n                  A JOURNEY TO<br></br> JAVASCRIPT\n                </h2>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 1 && (\n              <QuoteCSSTransitionWrapper\n                key={1}\n                appear={true}\n                onEntered={this.subtractSectionIndex}\n                onExited={this.addSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.sentence}>{sentence} </p>\n              </QuoteCSSTransitionWrapper>\n            )}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/johnny_jobs.f829efae.jpg\";","import React, { Component } from \"react\";\nimport styles from \"./index.module.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\n\nimport JobsImage from \"../../Asset/Image/johnny_jobs.jpg\";\n\nexport default class Midas extends Component {\n  state = {\n    sectionIndex: 0,\n  };\n\n  addSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  render() {\n    let { sectionIndex } = this.state;\n\n    return (\n      <div className={styles.body}>\n        <div className={styles.inner}>\n          <TransitionGroup component={null}>\n            {sectionIndex >= 0 && (\n              <CSSTransitionWrapper\n                key={0}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={() => {}}\n                wrapClassName={styles.secTitle}\n              >\n                <h2 className={styles.title}>PSYCHOMETRIC</h2>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 1 && (\n              <CSSTransitionWrapper\n                key={1}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <img className={styles.image} src={JobsImage} alt=\"jobs\" />\n                <p className={styles.imageGuide}>\n                  (주의! 당신의 눈은 소중합니다!)\n                </p>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 2 && (\n              <CSSTransitionWrapper\n                key={2}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  저는 2019년 8월부터 현재까지\n                  <br />\n                  판교의 마이다스아이티라는 회사에서\n                  <br />\n                  <b>'AI역량검사'</b>를 기획/개발하고 있습니다.\n                </p>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 3 && (\n              <CSSTransitionWrapper\n                key={3}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  AI역량검사는 <b>뇌신경과학 기반으로</b>\n                  <br />\n                  <b>개인의 역량을 측정하는 인재선발도구</b> 입니다.\n                </p>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 4 && (\n              <CSSTransitionWrapper\n                key={4}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  새로운 측정 도구를 기획하고 개발하는 일은\n                  <br />\n                  무척 도전적이고 흥미로운 과제입니다!\n                </p>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 5 && (\n              <CSSTransitionWrapper\n                key={5}\n                appear={true}\n                // onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.btnGuide}>\n                  혹시 위 사진의 출처가 궁금하시다면\n                </p>\n                <a\n                  className={styles.playBtn}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\"https://magazine.hankyung.com/job-joy/article/380291\"}\n                  // onClick={this.subtractSectionIndex}\n                >\n                  기사 보러 가기\n                </a>\n              </CSSTransitionWrapper>\n            )}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/johnny_wizlab_demo.8019798a.mp4\";","import React, { Component } from \"react\";\nimport styles from \"./index.module.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { CSSTransitionWrapper } from \"../../Component/Transition\";\n\nimport wizlabVideo from \"../../Asset/Video/johnny_wizlab_demo.mp4\";\nimport classNames from \"classnames/bind\";\nconst cx = classNames.bind(styles);\n\nexport default class Wizlab extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = null;\n    this.setVideoRef = (element) => {\n      if (!element) return;\n      this.videoRef = element;\n      //   this.videoRef.addEventListener(\"ended\", this.handleVideoEnded);\n      //   this.videoRef.addEventListener(\"play\", this.handleVideoPlay);\n    };\n    this.state = {\n      sectionIndex: 0,\n      isVideoMuted: false,\n      isVideoZoom: false,\n    };\n  }\n\n  componentWillUnmount() {\n    // this.videoRef.removeEventListener(\"ended\", this.handleVideoEnded);\n    // this.videoRef.removeEventListener(\"play\", this.handleVideoPlay);\n  }\n\n  addSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex + 1 }));\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  toggleVideoZoom = () => {\n    this.setState((state) => ({\n      isVideoZoom: !state.isVideoZoom,\n    }));\n  };\n\n  toggleVideoMuted = () => {\n    this.setState((state) => ({\n      isVideoMuted: !state.isVideoMuted,\n    }));\n  };\n\n  render() {\n    let { sectionIndex, isVideoMuted, isVideoZoom } = this.state;\n\n    return (\n      <div className={styles.body}>\n        <div className={cx(\"inner\", { \"inner--blockScroll\": isVideoZoom })}>\n          <TransitionGroup component={null}>\n            {sectionIndex >= 0 && (\n              <CSSTransitionWrapper\n                key={0}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={() => {}}\n                wrapClassName={styles.secTitle}\n              >\n                <h2 className={styles.title}>DEVELOPER JOHNNY !</h2>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 1 && (\n              <CSSTransitionWrapper\n                key={1}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={cx(\"secVideo\", {\n                  \"secVideo--zoom\": isVideoZoom,\n                })}\n              >\n                <video\n                  className={styles.video}\n                  ref={this.setVideoRef}\n                  controls\n                  playsInline\n                  autoPlay={true}\n                  muted={isVideoMuted}\n                  controlsList=\"nodownload\"\n                  onContextMenu={(e) => {\n                    e.preventDefault();\n                    return false;\n                  }}\n                >\n                  <source src={wizlabVideo} />\n                </video>\n                <div className={cx(\"btnRow\", { \"btnRow--float\": isVideoZoom })}>\n                  <div\n                    className={cx(\"videoBtn\", {\n                      \"videoBtn--off\": isVideoZoom,\n                      \"videoBtn--on\": !isVideoZoom,\n                    })}\n                    onClick={this.toggleVideoZoom}\n                  >\n                    {isVideoZoom ? \"작게 보기\" : \"크게 보기\"}\n                  </div>\n                  <div\n                    className={cx(\"videoBtn\", {\n                      \"videoBtn--on\": isVideoMuted,\n                      \"videoBtn--off\": !isVideoMuted,\n                    })}\n                    onClick={this.toggleVideoMuted}\n                  >\n                    {isVideoMuted ? \"소리 켜기\" : \"소리 끄기\"}\n                  </div>\n                </div>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 2 && (\n              <CSSTransitionWrapper\n                key={2}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  저는 2018년 6월부터 2019년 7월까지\n                  <br />\n                  <b>위즈스쿨</b>이라는 스타트업에서\n                  <br />\n                  프로그래밍 교육 플랫폼을 기획/개발했습니다.\n                </p>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 3 && (\n              <CSSTransitionWrapper\n                key={3}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  <b>누구든 쉽게 상상을 구현할 수 있는 공간</b>을\n                  <br />\n                  목표로 무척 몰입하여 작업했던 프로젝트입니다!\n                </p>\n              </CSSTransitionWrapper>\n            )}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from \"./index.module.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport {\n  CSSTransitionWrapper,\n  SlowCSSTransitionWrapper,\n  QuoteCSSTransitionWrapper,\n} from \"../../Component/Transition\";\n\nexport default class XOR extends Component {\n  state = {\n    sectionIndex: 0,\n    sentenceIndex: -1,\n  };\n\n  sentences = [\n    `화면 속 개체들은 세대를 거듭하며 XOR 문제를 풀고 있습니다.\\nStanley의 2002년 논문을 바탕으로 구현했습니다.`,\n    `단층 모형으로는 비선형 영역을 분리할 수 없으므로\\n개체들은 새로운 node를 더하는 방향으로 진화해야 합니다.`,\n    `각 개체 좌측 상단 첫 번째 줄은 종 번호,\\n두 번째 줄은 문제 풀이 점수입니다.\\n점수는 4점이 되어야 합니다.`,\n    `진화는 2,000세대까지 이루어집니다.\\n개체 수가 적어 넉넉하게 잡아보았습니다.`,\n    `후속 논문들을 학습하며 계속 개선 중입니다.\\n무척 즐겁게 작업하고 있습니다!`,\n    `몇 번째 세대부터\\n목표 점수가 등장하는지 확인해보세요!`,\n  ];\n\n  addSectionIndex = () => {\n    let { sectionIndex, sentenceIndex } = this.state;\n    if (sectionIndex >= 1 && sentenceIndex < this.sentences.length) {\n      this.setState({\n        sectionIndex: sectionIndex + 1,\n        sentenceIndex: sentenceIndex + 1,\n      });\n    } else {\n      this.setState({ sectionIndex: sectionIndex + 1 });\n    }\n  };\n  subtractSectionIndex = () => {\n    this.setState(({ sectionIndex }) => ({ sectionIndex: sectionIndex - 1 }));\n  };\n\n  render() {\n    let { sectionIndex, sentenceIndex } = this.state;\n    let sentence = this.sentences[sentenceIndex];\n\n    return (\n      <div className={styles.body}>\n        <div className={styles.inner}>\n          <TransitionGroup component={null}>\n            {sectionIndex >= 0 && (\n              <CSSTransitionWrapper\n                key={0}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={() => {}}\n                wrapClassName={styles.secTitle}\n              >\n                <h2 className={styles.title}>XOR</h2>\n              </CSSTransitionWrapper>\n            )}\n            {sectionIndex >= 1 && (\n              <SlowCSSTransitionWrapper\n                key={1}\n                appear={true}\n                onEntered={this.addSectionIndex}\n                onExited={this.subtractSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>\n                  {`\"Neuroevolution of augmenting topologies\"`}\n                </p>\n              </SlowCSSTransitionWrapper>\n            )}\n            {sectionIndex >= 2 && !!sentence && (\n              <QuoteCSSTransitionWrapper\n                key={2}\n                appear={true}\n                onEntered={this.subtractSectionIndex}\n                onExited={this.addSectionIndex}\n                wrapClassName={styles.secDesc}\n              >\n                <p className={styles.desc}>{sentence}</p>\n              </QuoteCSSTransitionWrapper>\n            )}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Field from \"./Field\";\nimport Navigation from \"./Component/Navigation\";\n\nimport ArticleQuiz from \"./Articles/Quiz\";\nimport ArticleBird from \"./Articles/Bird\";\nimport ArticleMidas from \"./Articles/Midas\";\nimport ArticleWizlab from \"./Articles/Wizlab\";\nimport ArticleXOR from \"./Articles/XOR\";\n\nimport styles from \"./App.module.css\";\n\nimport { PAGES, getScreenRect } from \"./Constant\";\n\nexport default class App extends Component {\n  state = {\n    currentPage: PAGES.MAIN,\n    isScreenOn: false,\n    isArticleOn: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resizeEventHandler);\n    this.resizeEventHandler();\n    // // DEBUG // //\n    // this.setPage(PAGES.XOR);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeEventHandler);\n  }\n\n  resizeEventHandler = (event) => {\n    this.stageWidth = window.innerWidth || document.body.clientWidth;\n    this.stageHeight = window.innerHeight || document.body.clientHeight;\n    let rect = getScreenRect(\n      this.stageWidth,\n      this.stageHeight,\n      this.state.currentPage\n    );\n    // console.log(\"resize\", rect);\n    this.setState({\n      scrW: rect.width,\n      scrH: rect.height,\n    });\n  };\n\n  setPage = (currentPage) => {\n    // console.log(\"setPage\", currentPage);\n    if (\n      currentPage === PAGES.QUIZ ||\n      currentPage === PAGES.XOR ||\n      currentPage === PAGES.BIRD ||\n      currentPage === PAGES.MIDAS ||\n      currentPage === PAGES.WIZLAB\n    ) {\n      let rect = getScreenRect(this.stageWidth, this.stageHeight, currentPage);\n      this.setState({\n        currentPage,\n        isScreenOn: true,\n        scrW: rect.width,\n        scrH: rect.height,\n      });\n    } else {\n      this.setState({\n        currentPage,\n        isScreenOn: false,\n        isArticleOn: false,\n      });\n    }\n  };\n\n  toggleArticle = (isArticleOn) => {\n    this.setState({\n      isArticleOn,\n    });\n  };\n\n  render() {\n    let { currentPage, isScreenOn, isArticleOn, scrH, scrW } = this.state;\n\n    let Article;\n    if (currentPage === PAGES.QUIZ) Article = ArticleQuiz;\n    else if (currentPage === PAGES.XOR) Article = ArticleXOR;\n    else if (currentPage === PAGES.BIRD) Article = ArticleBird;\n    else if (currentPage === PAGES.MIDAS) Article = ArticleMidas;\n    else if (currentPage === PAGES.WIZLAB) Article = ArticleWizlab;\n\n    return (\n      <div className={styles.body}>\n        <div className={styles.NavContainer}>\n          <Navigation currentPage={currentPage} setPage={this.setPage} />\n        </div>\n        <div className={styles.FieldContainer}>\n          <Field\n            currentPage={currentPage}\n            isScreenOn={isScreenOn}\n            isArticleOn={isArticleOn}\n            setPage={this.setPage}\n            toggleArticle={this.toggleArticle}\n          />\n        </div>\n        {isArticleOn && (\n          <div\n            style={{ width: scrW, height: scrH }}\n            className={styles.ArticleContainer}\n          >\n            <Article />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Midas_body__3F8RB\",\"inner\":\"Midas_inner__3ER5V\",\"secTitle\":\"Midas_secTitle__16ZtS\",\"title\":\"Midas_title__1OCNT\",\"secDesc\":\"Midas_secDesc__lNO00\",\"image\":\"Midas_image__3FaqT\",\"scaleUp\":\"Midas_scaleUp__1DhFw\",\"imageGuide\":\"Midas_imageGuide__2qVAP\",\"desc\":\"Midas_desc__8gwha\",\"btnGuide\":\"Midas_btnGuide__2QkmA\",\"playBtn\":\"Midas_playBtn__16yNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Wizlab_body__2JYxQ\",\"inner\":\"Wizlab_inner__32olv\",\"inner--blockScroll\":\"Wizlab_inner--blockScroll__1ZEWS\",\"secTitle\":\"Wizlab_secTitle__X_iz2\",\"title\":\"Wizlab_title__3dyHx\",\"secVideo\":\"Wizlab_secVideo__1N15o\",\"secVideo--zoom\":\"Wizlab_secVideo--zoom__1giZN\",\"video\":\"Wizlab_video__1ho2i\",\"secDesc\":\"Wizlab_secDesc__1ZLfR\",\"desc\":\"Wizlab_desc__u7rio\",\"btnRow\":\"Wizlab_btnRow__2-Inm\",\"btnRow--float\":\"Wizlab_btnRow--float__3Kfhf\",\"videoBtn\":\"Wizlab_videoBtn__3Haoy\",\"videoBtn--on\":\"Wizlab_videoBtn--on__1BDVh\",\"videoBtn--off\":\"Wizlab_videoBtn--off__1OY4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"XOR_body__1IZnK\",\"inner\":\"XOR_inner__zEFMi\",\"secTitle\":\"XOR_secTitle__QgPJ_\",\"title\":\"XOR_title__WSI0y\",\"secDesc\":\"XOR_secDesc__3Quuf\",\"desc\":\"XOR_desc__2CrDU\"};"],"sourceRoot":""}